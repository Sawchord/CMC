<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="32:CMCTestC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b08bbdcfa68"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b08bbb3cc78"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b08bbb3cc78"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b08bbb47c38"/></to>
    </wire>
    <wire loc="36:CMCTestC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b08bbdff4f8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b08bbe98e28"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b08bbe98e28"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b08bbeaa4e8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:CMCTestC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x2b08bbde02c0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b08bc052140"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b08bc052140"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b08bc0b1d10"/></to>
    </wire>
    <wire loc="45:CMCTestC.nc">
      <from><interface-ref name="CMC0" scoped="" ref="0x2b08bbdf1c48"/></from>
      <to><interface-ref name="CMC" scoped="" ref="0x2b08bca4be08"/></to>
    </wire>
    <wire loc="29:../../CMC/CMCSocket.nc">
      <from><interface-ref name="CMC" scoped="" ref="0x2b08bca4be08"/></from>
      <to><interface-ref name="CMC" scoped="" ref="0x2b08bca464c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:CMCTestC.nc">
      <from><interface-ref name="NN" scoped="" ref="0x2b08bbe3c868"/></from>
      <to><interface-ref name="NN" scoped="" ref="0x2b08bcd6e228"/></to>
    </wire>
    <wire loc="55:CMCTestC.nc">
      <from><interface-ref name="ECC" scoped="" ref="0x2b08bbe56d48"/></from>
      <to><interface-ref name="ECC" scoped="" ref="0x2b08bcbd1378"/></to>
    </wire>
    <wire loc="47:../../CMC/TinyECC/ECCC.nc">
      <from><interface-ref name="ECC" scoped="" ref="0x2b08bcbd1378"/></from>
      <to><interface-ref name="ECC" scoped="" ref="0x2b08bcbcdbc0"/></to>
    </wire>
    <wire loc="56:CMCTestC.nc">
      <from><interface-ref name="ECIES" scoped="" ref="0x2b08bbe4f5a8"/></from>
      <to><interface-ref name="ECIES" scoped="" ref="0x2b08bd1db798"/></to>
    </wire>
    <wire loc="40:../../CMC/TinyECC/ECIESC.nc">
      <from><interface-ref name="ECIES" scoped="" ref="0x2b08bd1db798"/></from>
      <to><interface-ref name="ECIES" scoped="" ref="0x2b08bd1d6e28"/></to>
    </wire>
    <wire loc="60:CMCTestC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2b08bbdf9930"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b08bc555080"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2b08bc555080"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b08bc586020"/></to>
    </wire>
    <wire loc="63:CMCTestC.nc">
      <from><interface-ref name="SHA1" scoped="" ref="0x2b08bbe65be0"/></from>
      <to><interface-ref name="SHA1" scoped="" ref="0x2b08bd1d8cb0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b08bbb4a0e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b08bd849e70"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b08bbb4a0e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b08bd873480"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b08bbb4a0e0"/></from>
      <to><interface-ref name="Uart0Init" scoped="" ref="0x2b08bd6867e0"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b08bbb4a0e0"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x2b08bd681688"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b08bbb4a0e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b08bd673610"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b08bbb4a0e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b08bd4c0110"/></to>
    </wire>
    <wire loc="35:../../CMC/CMCC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b08bbb4a0e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b08bca3ac08"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b08bbb4a0e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b08bde155e8"/></to>
    </wire>
    <wire loc="119:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b08bbb4a0e0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2b08bc69abf0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b08bbb4a0e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b08bc5885f0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b08bbb4a0e0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2b08bddbf430"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b08bbb4a0e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b08bc459238"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b08bbb4a0e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b08bdd5bde8"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b08bbb4a0e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b08bdc59398"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b08bbb4a0e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b08bbea5e38"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b08bbcfe308"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b08bba495c8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b08bba495c8"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b08bbafdd88"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b08bbcfece0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b08bc77f870"/></to>
    </wire>
    <wire loc="122:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b08bbcfece0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b08bc69a138"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b08bbcfece0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b08bbb46080"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b08bbb46080"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b08bbb4b020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b08bbcfd418"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2b08bbb4a0e0"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.2/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b08bbb45cf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b08bd7eabc8"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.2/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b08bbb45cf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b08bc939dc0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b08bbb45020"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b08bbce0ae0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x2b08bbb4bd88"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b08bbce04b0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2b08bbb4b6c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b08bd4572d8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2b08bbb4b6c0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b08bbb4d558"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b08bbb4d558"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b08bbb5e020"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b08bbb4dbe8"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2b08bbb45cf0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x2b08bbb65388"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x2b08bbb6ae00"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x2b08bbb6ae00"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b08bbbf1430"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b08bbb5d4f8"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2b08bbb4dbe8"/></to>
    </wire>
    <wire loc="191:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x2b08bbba4968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08bbc7f520"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x2b08bbb7e4d0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b08bbc21020"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b08bbc21020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08bda02710"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x2b08bbb924d0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b08bbc22d60"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b08bbc22d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08bda1e710"/></to>
    </wire>
    <wire loc="185:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x2b08bbb991a0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b08bbc378c8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b08bbc378c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08bdacc710"/></to>
    </wire>
    <wire loc="196:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x2b08bbb9d658"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08bbca2c38"/></to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x2b08bbb741a0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b08bbbef740"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b08bbbef740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08bd882a10"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x2b08bbb9ce00"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b08bbc395b8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b08bbc395b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08bdad2710"/></to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x2b08bbb724d0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b08bbbf8930"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b08bbbf8930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08bd93e970"/></to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x2b08bbb76658"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b08bbc0b740"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b08bbc0b740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08bd957710"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x2b08bbb8a968"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b08bbc1d430"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b08bbc1d430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08bd9f9710"/></to>
    </wire>
    <wire loc="179:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x2b08bbb8f968"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b08bbc30120"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b08bbc30120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08bda15710"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x2b08bbb6d968"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b08bbbe5020"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b08bbbe5020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08bd891a10"/></to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x2b08bbb6f968"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b08bbbf5d60"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b08bbbf5d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08bd935970"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x2b08bbb83af0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b08bbc08bd8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b08bbc08bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08bd94e710"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x2b08bbb87e00"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b08bbc1a8c8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b08bbc1a8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08bd9f0710"/></to>
    </wire>
    <wire loc="188:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x2b08bbb96658"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b08bbc34d60"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b08bbc34d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08bdac3710"/></to>
    </wire>
    <wire loc="194:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x2b08bbb9f348"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08bbc98c38"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x2b08bbb941a0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b08bbc24a50"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b08bbc24a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08bda24710"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b08bbbf1430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08bd888a10"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x2b08bbb7a020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b08bbc03120"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b08bbc03120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08bd92c970"/></to>
    </wire>
    <wire loc="192:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x2b08bbba2020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08bbc8fcd8"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x2b08bbb78348"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b08bbc0d500"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b08bbc0d500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08bd95d6a8"/></to>
    </wire>
    <wire loc="166:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x2b08bbb7d658"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b08bbc20120"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b08bbc20120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08bd9ff710"/></to>
    </wire>
    <wire loc="177:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x2b08bbb91658"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b08bbc33e18"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b08bbc33e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08bda1b710"/></to>
    </wire>
    <wire loc="186:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x2b08bbb98348"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b08bbc36a50"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b08bbc36a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08bdac9710"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x2b08bbb73348"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b08bbbee8c8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b08bbbee8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08bd87fa10"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x2b08bbb71658"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b08bbbf7a50"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b08bbbf7a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08bd93b970"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x2b08bbb757e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b08bbc0a8c8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b08bbc0a8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08bd954710"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x2b08bbb89af0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b08bbc1c5b8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b08bbc1c5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08bd9f6710"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x2b08bbb8eaf0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b08bbc2f2a8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b08bbc2f2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08bda12710"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x2b08bbb6caf0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b08bbbf3120"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b08bbbf3120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08bd88ea10"/></to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x2b08bbb6eaf0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b08bbc06e18"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b08bbc06e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08bd932970"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x2b08bbb82c78"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b08bbc07d60"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b08bbc07d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08bd94b710"/></to>
    </wire>
    <wire loc="189:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x2b08bbb957e0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b08bbc45e18"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b08bbc45e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08bdac0710"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x2b08bbb7f020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b08bbc11e40"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b08bbc11e40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08bda056a8"/></to>
    </wire>
    <wire loc="175:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x2b08bbb93348"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b08bbc23bd8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b08bbc23bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08bda21710"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x2b08bbb9a020"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b08bbc38740"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b08bbc38740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08bdacf710"/></to>
    </wire>
    <wire loc="195:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x2b08bbb9e4d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08bbc933e0"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x2b08bbb67020"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b08bbbf05b8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b08bbbf05b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08bd885a10"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x2b08bbb791a0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b08bbc022a8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b08bbc022a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08bd929970"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x2b08bbb8dc78"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b08bbc3a500"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b08bbc3a500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08bdad66a8"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x2b08bbb774d0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b08bbc0c5b8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b08bbc0c5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08bd95a710"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x2b08bbb8c7e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b08bbc1f2a8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b08bbc1f2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08bd9fc710"/></to>
    </wire>
    <wire loc="178:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x2b08bbb907e0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b08bbc31020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b08bbc31020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08bda18710"/></to>
    </wire>
    <wire loc="187:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x2b08bbb974d0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b08bbc35bd8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b08bbc35bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08bdac6710"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x2b08bbb52790"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b08bbbe7dc0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b08bbbe7dc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08bd8949d8"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x2b08bbb707e0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b08bbbf6bd8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b08bbbf6bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08bd938970"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x2b08bbb84968"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b08bbc09a50"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b08bbc09a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08bd951710"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x2b08bbb88c78"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b08bbc1b740"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b08bbc1b740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08bd9f3710"/></to>
    </wire>
    <wire loc="193:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x2b08bbba01a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08bbc893e0"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x2b08bbb85020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b08bbc26930"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b08bbc26930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08bda286a8"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x2b08bbb81e00"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b08bbc17e18"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b08bbc17e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08bd948710"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x2b08bbb6bc78"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b08bbbf22a8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b08bbbf22a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08bd88ba10"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x2b08bbb7ce00"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b08bbc04020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b08bbc04020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b08bd92f970"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x2b08bba221c8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b08bbafcc58"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x2b08bbb06168"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x2b08bba48e28"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2b08bbb21988"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2b08bbf65578"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b08bbeaa4e8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b08bbea2b68"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b08bbea2b68"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b08bc035af8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b08bbea5e38"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b08bbeb4728"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b08bbeb7108"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b08bc048440"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b08bbeb4728"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b08bbfc7020"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2b08bc030e80"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b08bbfdad88"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b08bbff4020"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x2b08bbeb1020"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x2b08bbeb1020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b08bbfc77c8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b08bc03f648"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x2b08bbec1150"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x2b08bbec1150"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b08bbfc4a90"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b08bbfc4a90"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b08bdb9b128"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b08bbfc7020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b08bdba07b8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b08bbfc77c8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b08bdb9e020"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b08bdb98228"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b08bbf42288"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b08bbf42288"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b08bbf54e00"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b08bdb930c0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b08bbf5b3c0"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b08bbf5b3c0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b08bbf69020"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b08bdb923b0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b08bbf5a7f8"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b08bbf5a7f8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b08bbf68340"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x2b08bdb8e510"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x2b08bbf569e8"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x2b08bbf569e8"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x2b08bbf65c78"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x2b08bbff0020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b08bba221c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2b08bc04b020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b08bba221c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b08bc0b1d10"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b08bc0d1810"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2b08bc065270"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2b08bc0aa4e8"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2b08bc0aa4e8"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2b08bc0cb020"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b08bc07a698"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b08bc0a8360"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b08bc0a8360"/></from>
      <to><interface-ref name="PacketForActiveMessage" scoped="" ref="0x2b08bc0eb550"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b08bc068688"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b08bc0aecb0"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b08bc0aecb0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b08bc0ce798"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b08bc069d10"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b08bc0ac9b8"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b08bc0ac9b8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b08bc0cc498"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b08bc0a4418"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b08bc0c9020"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b08bc0c9020"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b08bc0f7a18"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b08bc0691c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b08bc0ade40"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b08bc0ade40"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b08bc0cd928"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b08bc089cb0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b08bc0ca658"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b08bc0ca658"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b08bc0f70c0"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2b08bc09c1d8"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2b08bc0c9ab8"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2b08bc0c9ab8"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2b08bc0f65e0"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b08bc08ec28"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b08bc0a7020"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b08bc0a7020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b08bc0eee50"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x2b08bc09bc48"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x2b08bc0c8780"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x2b08bc0c8780"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x2b08bc0f52e8"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x2b08bc0b68c0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b08bc0d95d0"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b08bc0d95d0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b08bc10e3f8"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b08bc0b5758"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b08bc0d5478"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b08bc0d5478"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b08bc10a478"/></to>
    </wire>
    <wire loc="215:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b08bc0d1810"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b08bc4a9988"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x2b08bc0bc0c8"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x2b08bc113600"/></to>
    </wire>
    <wire loc="305:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x2b08bc113600"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x2b08bc67c0c8"/></to>
    </wire>
    <wire loc="270:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b08bc10a478"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b08bc619270"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2b08bc0cb020"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2b08bc29b020"/></to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForActiveMessage" scoped="" ref="0x2b08bc0eb550"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b08bc29e578"/></to>
    </wire>
    <wire loc="121:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b08bc0ce798"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b08bc29d388"/></to>
    </wire>
    <wire loc="123:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b08bc0cc498"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b08bc29c7e0"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b08bc0c0d80"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b08bc0f12d0"/></to>
    </wire>
    <wire loc="303:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b08bc0f12d0"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b08bc680cd0"/></to>
    </wire>
    <wire loc="216:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b08bc0f7a18"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b08bc4c7060"/></to>
    </wire>
    <wire loc="122:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b08bc0cd928"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b08bc29c0c8"/></to>
    </wire>
    <wire loc="269:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b08bc10e3f8"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b08bc64f020"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b08bc0dc1d8"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b08bc10f020"/></to>
    </wire>
    <wire loc="307:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b08bc10f020"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b08bc672220"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b08bc0c1930"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b08bc0f5e40"/></to>
    </wire>
    <wire loc="304:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b08bc0f5e40"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b08bc676860"/></to>
    </wire>
    <wire loc="248:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b08bc0f70c0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b08bc5b63f0"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x2b08bc0a91c8"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x2b08bc0cbbe0"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x2b08bc0cbbe0"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x2b08bc29b738"/></to>
    </wire>
    <wire loc="187:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2b08bc0f65e0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2b08bc4b4268"/></to>
    </wire>
    <wire loc="125:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b08bc0eee50"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b08bc29f020"/></to>
    </wire>
    <wire loc="224:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x2b08bc0f52e8"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x2b08bc52abd0"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b08bc0da990"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b08bc110778"/></to>
    </wire>
    <wire loc="306:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b08bc110778"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b08bc6739d0"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x2b08bc0a9d58"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x2b08bc0ee860"/></to>
    </wire>
    <wire loc="129:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x2b08bc0ee860"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x2b08bc29be50"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b08bc4a9988"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x2b08bc4c7b30"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x2b08bc67c0c8"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x2b08bc692020"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Notifier" scoped="" ref="0x2b08bc0e8218"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2b08bc351840"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendResource" scoped="" ref="0x2b08bc0e2208"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b08bc329200"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b08bc329200"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b08bdc57720"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2b08bc29b020"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2b08bdc1a388"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b08bc29d388"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b08bdc1c698"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b08bc29c7e0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b08bdc1bc28"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x2b08bc100020"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x2b08bc431900"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x2b08bc431900"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x2b08bdd15d98"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForIeee154Message" scoped="" ref="0x2b08bc0ff3d0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b08bc324980"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b08bc680cd0"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b08bc696b48"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b08bc4c7060"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b08bdd31458"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b08bc29e578"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b08bdc1d888"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b08bc29c0c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b08bdc1b510"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b08bc64f020"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b08bddcc558"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b08bc672220"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b08bc784438"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b08bc676860"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b08bc68c860"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Send" scoped="" ref="0x2b08bc0e3d80"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x2b08bc352578"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x2b08bc29b738"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x2b08bdc1aaa0"/></to>
    </wire>
    <wire loc="117:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2b08bc4b4268"/></from>
      <to><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x2b08bc4b0470"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x2b08bc52abd0"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x2b08bddbe9c8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b08bc29f020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b08bdc1e268"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b08bc619270"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b08bddcf888"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Receive" scoped="" ref="0x2b08bc0e9af0"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x2b08bc3512a8"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b08bc6739d0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b08bc6c59d0"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x2b08bc29be50"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x2b08bdc191e0"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b08bc1575e8"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b08bc434980"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b08bc434980"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b08bdd1bd50"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2b08bc1513f0"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2b08bc1b5910"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b08bc154730"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b08bc64f020"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RF230Packet" scoped="" ref="0x2b08bc170688"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b08bc681bd8"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b08bc681bd8"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b08bc697a50"/></to>
    </wire>
    <wire loc="110:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b08bc1f7958"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b08bc6714b8"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b08bc6714b8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b08bc7882e0"/></to>
    </wire>
    <wire loc="116:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b08bc2972a8"/></from>
      <to><interface-ref name="ActiveMessageConfig" scoped="" ref="0x2b08bc14c760"/></to>
    </wire>
    <wire loc="117:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b08bc2992a8"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x2b08bc2bc100"/></to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b08bc299b90"/></from>
      <to><interface-ref name="TinyosReceive" scoped="" ref="0x2b08bc3a0060"/></to>
    </wire>
    <wire loc="119:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b08bc29a4d0"/></from>
      <to><interface-ref name="TinyosPacket" scoped="" ref="0x2b08bc3a0638"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b08bc2ad3f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b08bc329200"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b08bc2bca48"/></from>
      <to><interface-ref name="TinyosSend" scoped="" ref="0x2b08bc3a1740"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b08bc351e38"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b08bc434980"/></to>
    </wire>
    <wire loc="154:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b08bc34dba0"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x2b08bc346838"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b08bc34c5b8"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x2b08bc3a22a8"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b08bc34ed98"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x2b08bc3a2880"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b08bc39f490"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b08bc491470"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b08bc491470"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b08bdd5eda0"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b08bc39fd78"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b08bc482bd0"/></to>
    </wire>
    <wire loc="114:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b08bc482bd0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b08bc4b25b8"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b08bc39d378"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b08bc430b98"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b08bc430b98"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b08bdd13020"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b08bc42fab0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b08bc4b4e20"/></to>
    </wire>
    <wire loc="115:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b08bc4b4e20"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2b08bc4b2b90"/></to>
    </wire>
    <wire loc="181:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b08bc48f580"/></from>
      <to><interface-ref name="UniqueConfig" scoped="" ref="0x2b08bc116b40"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b08bc490510"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b08bc4822e8"/></to>
    </wire>
    <wire loc="113:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b08bc4822e8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b08bc4b3c38"/></to>
    </wire>
    <wire loc="191:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b08bc4b1a10"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b08bc5b63f0"/></to>
    </wire>
    <wire loc="193:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b08bc4b3c38"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b08bc4c9430"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b08bc4c9430"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b08bc4c65c8"/></to>
    </wire>
    <wire loc="194:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b08bc4b25b8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b08bc4c9d18"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b08bc4c9d18"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b08bc4c4020"/></to>
    </wire>
    <wire loc="195:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b08bc4b2b90"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b08bc4c82e8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b08bc4c82e8"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2b08bc4c45f8"/></to>
    </wire>
    <wire loc="211:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2b08bc4c7b30"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b08bc52c270"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b08bc52c270"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b08bddc0870"/></to>
    </wire>
    <wire loc="212:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b08bc4c65c8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b08bc52cce0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b08bc52cce0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b08bddbfa08"/></to>
    </wire>
    <wire loc="213:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b08bc4c4020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b08bc52a638"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b08bc52a638"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b08bddbe430"/></to>
    </wire>
    <wire loc="214:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b08bc4c45f8"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b08bc64d9f8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b08bc64d9f8"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b08bddc8020"/></to>
    </wire>
    <wire loc="221:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2b08bc5283f0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2b08bc589988"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2b08bc589988"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2b08bdd84b58"/></to>
    </wire>
    <wire loc="222:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2b08bc528c98"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b08bc491d18"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2b08bc491d18"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b08bdd5b6c8"/></to>
    </wire>
    <wire loc="223:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x2b08bc5295d8"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x2b08bc6595b8"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x2b08bc6595b8"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x2b08bc654a08"/></to>
    </wire>
    <wire loc="228:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b08bc490df8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b08bc579268"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2b08bc579268"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b08bdd82578"/></to>
    </wire>
    <wire loc="237:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b08bc5768c8"/></from>
      <to><interface-ref name="RandomCollisionConfig" scoped="" ref="0x2b08bc1340d0"/></to>
    </wire>
    <wire loc="238:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b08bc579a28"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2b08bc5712a8"/></to>
    </wire>
    <wire loc="239:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b08bc578430"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b08bc571b50"/></to>
    </wire>
    <wire loc="240:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2b08bc578b50"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2b08bc1b5910"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="246:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AckReceivedFlag" scoped="" ref="0x2b08bc5b3bd8"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x2b08bc643660"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="247:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2b08bc5b5d90"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2b08bc1b5910"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="252:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b08bc5b4a18"/></from>
      <to><interface-ref name="SoftwareAckConfig" scoped="" ref="0x2b08bc11baf0"/></to>
    </wire>
    <wire loc="253:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b08bc5b6d38"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2b08bc5cf020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2b08bc5cf020"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b08bc5c95b8"/></to>
    </wire>
    <wire loc="254:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b08bc5b5670"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b08bc5cf8c8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2b08bc5cf8c8"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b08bc5c8020"/></to>
    </wire>
    <wire loc="259:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b08bc5c7da0"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x2b08bc14a300"/></to>
    </wire>
    <wire loc="260:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b08bc5c95b8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2b08bc6583f0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2b08bc6583f0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b08bc6528c8"/></to>
    </wire>
    <wire loc="261:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b08bc5c8020"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b08bc658c98"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2b08bc658c98"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b08bc6512a8"/></to>
    </wire>
    <wire loc="262:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubRadioCCA" scoped="" ref="0x2b08bc5c8780"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x2b08bc681448"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x2b08bc681448"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x2b08bc6972c0"/></to>
    </wire>
    <wire loc="267:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b08bc64ba30"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b08bc672220"/></to>
    </wire>
    <wire loc="268:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b08bc64a9f0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b08bc65f0e0"/></to>
    </wire>
    <wire loc="271:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x2b08bc6498c8"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x2b08bc643660"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="276:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b08bc65e020"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b08bc681bd8"/></to>
    </wire>
    <wire loc="286:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b08bc689060"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x2b08bc14a300"/></to>
    </wire>
    <wire loc="287:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b08bc6528c8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2b08bc6822c8"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2b08bc6822c8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2b08bc6980c0"/></to>
    </wire>
    <wire loc="288:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b08bc6512a8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b08bc682bf0"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2b08bc682bf0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b08bc6989e8"/></to>
    </wire>
    <wire loc="289:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0x2b08bc654a08"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x2b08bc6853e0"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x2b08bc6853e0"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x2b08bc6992d0"/></to>
    </wire>
    <wire loc="301:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b08bc6a85c8"/></from>
      <to><interface-ref name="RF230DriverConfig" scoped="" ref="0x2b08bc124e48"/></to>
    </wire>
    <wire loc="302:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b08bc6a7730"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b08bc64f020"/></to>
    </wire>
    <wire loc="309:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x2b08bc6a3378"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x2b08bc643660"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="310:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x2b08bc6a2020"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x2b08bc643660"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="311:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x2b08bc6a2b78"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x2b08bc643660"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="312:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2b08bc6a1768"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2b08bc1b5910"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2b08bc1b5910"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2b08bdc3bb78"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b08bdc3aaf8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b08bc1f7958"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x2b08bdc369f0"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x2b08bc1da220"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b08bdc15700"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b08bc289560"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b08bdc19838"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2b08bc29a4d0"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b08bdc18740"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b08bc2992a8"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b08bdc17060"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b08bc299b90"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b08bdc17638"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2b08bc2972a8"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b08bc328020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b08bdc56510"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b08bc328760"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b08bdc56c50"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b08bdc55570"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b08bc327020"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b08bdc55cf0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2b08bdc59970"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2b08bdc53800"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b08bba221c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b08bdd13dc0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b08bc289560"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b08bdd11890"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2b08bc42fab0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x2b08bdd57020"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x2b08bc460d58"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x2b08bc460d58"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x2b08bc459850"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2b08bdd57bd8"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2b08bdd54140"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2b08bdd54140"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2b08bc458b18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b08bdd59458"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b08bc490510"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b08bdd59d40"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b08bc490df8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="UniqueConfig" scoped="" ref="0x2b08bdd584a8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2b08bc48f580"/></to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x2b08bc4af100"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b08bc4b1a10"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x2b08bddbd450"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x2b08bc5295d8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x2b08bddbc268"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x2b08bc1da220"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2b08bddbcc98"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2b08bc5283f0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2b08bddbb578"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b08bc528c98"/></to>
    </wire>
    <wire loc="189:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x2b08bddb94f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b08bba221c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="stateDoneTask" scoped="" ref="0x2b08bddb9c90"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b08bba221c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="deliverTask" scoped="" ref="0x2b08bddbbd18"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b08bba221c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b08bdd82d38"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b08bc579a28"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b08bdd7f2a8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2b08bc5768c8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b08bdd81670"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b08bc578430"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2b08bdd81d90"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2b08bc578b50"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2b08bdd809d8"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b08bc555080"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <from><interface-ref name="calcNextRandom" scoped="" ref="0x2b08bdd7fd58"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b08bba221c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x2b08bc558020"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x2b08bc588e48"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b08bc5592b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b08bc5885f0"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b08bc5d2978"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x2b08bc5cdbf0"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x2b08bc5ce020"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x2b08bc5c8780"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x2b08bc5d0268"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x2b08bc5ca638"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b08bc5ce740"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2b08bc5c7020"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x2b08bc5cd5b8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2b08bc5c7da0"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x2b08bc5d1c98"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x2b08bc5ca060"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x2b08bc5d13f0"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x2b08bc5cc740"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b08bde5daa8"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2b08bc64a9f0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b08bddc79d0"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b08bc64ba30"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x2b08bde5fab8"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b08bc621dc0"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.2/tos/system/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b08bc621dc0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b08bbeb7108"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x2b08bddc8e00"/></from>
      <to><interface-ref name="TimeStampFlag" scoped="" ref="0x2b08bc6498c8"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b08bc65cb78"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x2b08bc655020"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x2b08bc6573f0"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x2b08bc651a08"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b08bc657b10"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2b08bc68a2a8"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x2b08bc6568c8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2b08bc689060"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x2b08bc659020"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x2b08bc654430"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x2b08bc65a700"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x2b08bc655a90"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b08bc7882e0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b08bc97fb68"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b08bc679458"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b08bc68f3b0"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b08bc784438"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b08bc977400"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b08bc6b3100"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2b08bc6a85c8"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x2b08bc6b3e10"/></from>
      <to><interface-ref name="TransmitPowerFlag" scoped="" ref="0x2b08bc6a3378"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x2b08bc6b2988"/></from>
      <to><interface-ref name="RSSIFlag" scoped="" ref="0x2b08bc6a2020"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x2b08bc6b1518"/></from>
      <to><interface-ref name="TimeSyncFlag" scoped="" ref="0x2b08bc6a2b78"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b08bc6af2b0"/></from>
      <to><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b08bc6a7730"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b08bc6b5020"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b08bc784438"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2b08bc6abab8"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2b08bc6a1768"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x2b08bc6c4130"/></from>
      <to><interface-ref name="SELN" scoped="" ref="0x2b08bc790710"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x2b08bc790710"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x2b08bbb724d0"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2b08bc6c34f8"/></from>
      <to><interface-ref name="SpiResource" scoped="" ref="0x2b08bc78d990"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2b08bc78d990"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b08bc7d8e80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x2b08bc6bc1f0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x2b08bc78c5e8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x2b08bc78c5e8"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x2b08bc7a09d0"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x2b08bc6bcd00"/></from>
      <to><interface-ref name="SLP_TR" scoped="" ref="0x2b08bc78b140"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x2b08bc78b140"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x2b08bbb791a0"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x2b08bc6c1e70"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x2b08bc78a338"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x2b08bc78a338"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x2b08bbb741a0"/></to>
    </wire>
    <wire loc="110:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x2b08bc6b75e8"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x2b08bc7894c0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x2b08bc7894c0"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x2b08bc783cd8"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x2b08bc6ab020"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x2b08bc1da220"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x2b08bc6b4c60"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x2b08bc9ff3c0"/></to>
    </wire>
    <wire loc="847:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <from><interface-ref name="releaseSpi" scoped="" ref="0x2b08bc751d98"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b08bba221c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b08bc97fb68"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b08bde929d8"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x2b08bc7a09d0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x2b08bc7d5628"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b08bc977400"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b08bc9c3c38"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortCLKM" scoped="" ref="0x2b08bc7b4c18"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x2b08bbb88c78"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortIRQ" scoped="" ref="0x2b08bc7b3e08"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x2b08bbb8a968"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x2b08bc7b6540"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b08bc88aca0"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x2b08bc88aca0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b08bc8b3350"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2b08bc7d81d8"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2b08bc7d4120"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2b08bc7a0388"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2b08bc7d5020"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b08bc780cd0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b08bc7d9a18"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b08bc7d8e80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b08bc7d4d88"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x2b08bc7f73c8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b08bc89d748"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b08bc89d748"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b08bdebea28"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b08bc7f5020"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b08bc89cc50"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b08bc89cc50"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b08bdebc020"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x2b08bc7f8150"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x2b08bc82e020"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x2b08bc82e020"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x2b08bc82adc0"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2b08bc7f57c8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2b08bbb223c8"/></to>
    </wire>
    <wire loc="296:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x2b08bc817b58"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b08bba221c8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x2b08bc85f350"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2b08bbb223c8"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x2b08bc820c70"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x2b08bbb724d0"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x2b08bc824de0"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x2b08bbb71658"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x2b08bc861020"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x2b08bbb707e0"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x2b08bc860190"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x2b08bbb6f968"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b08bc89c510"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b08bdebd820"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b08bdebc8c0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b08bc89b550"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b08bdebb0a0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2b08bde15bc0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2b08bdebbb50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b08bba221c8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b08bc8c65e8"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b08bc8b6c90"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b08bc8936e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b08bc8bdbe0"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b08bc8c2a20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x2b08bc8afc48"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b08bc8c2a20"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x2b08bc8aa020"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b08bc8c2a20"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x2b08bc8a6360"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x2b08bde8ea30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b08bc8936e0"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x2b08bde89a80"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b08bc8c2a20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="27:/opt/tinyos-2.1.2/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b08bc938540"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b08bc8936e0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b08bc9c2e48"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b08bc9c9270"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2b08bc9c7450"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b08bc9bb108"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b08bc9bb108"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b08bc9b7e08"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b08bc9a3020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b08bc8936e0"/></to>
    </wire>
    <wire loc="53:../../CMC/CMCC.nc">
      <from><interface-ref name="CMC" scoped="" ref="0x2b08bca464c0"/></from>
      <to><interface-ref name="CMC" scoped="" ref="0x2b08bca3db70"/></to>
    </wire>
    <wire loc="36:../../CMC/CMCC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b08bca392f8"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b08bbb3cc78"/></to>
    </wire>
    <wire loc="38:../../CMC/CMCC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b08bca39a10"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b08bca43420"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b08bca43420"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b08bbeaa4e8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:../../CMC/CMCC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2b08bca34a60"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b08bc555080"/></to>
    </wire>
    <wire loc="48:../../CMC/CMCC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b08bca322a8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b08bcb91888"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b08bcb91888"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b08bdee7268"/></to>
    </wire>
    <wire loc="49:../../CMC/CMCC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b08bca31020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b08bcb92c20"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b08bcb92c20"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b08bdee85e8"/></to>
    </wire>
    <wire loc="50:../../CMC/CMCC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b08bca31c20"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b08bcb8be38"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b08bcb8be38"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b08bc0691c8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b08bbdaed78"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../CMC/CMCC.nc">
      <from><interface-ref name="NN" scoped="" ref="0x2b08bca79408"/></from>
      <to><interface-ref name="NN" scoped="" ref="0x2b08bcd6e228"/></to>
    </wire>
    <wire loc="58:../../CMC/CMCC.nc">
      <from><interface-ref name="ECC" scoped="" ref="0x2b08bca6ca30"/></from>
      <to><interface-ref name="ECC" scoped="" ref="0x2b08bcbd1378"/></to>
    </wire>
    <wire loc="59:../../CMC/CMCC.nc">
      <from><interface-ref name="ECIES" scoped="" ref="0x2b08bca6ab48"/></from>
      <to><interface-ref name="ECIES" scoped="" ref="0x2b08bd1db798"/></to>
    </wire>
    <wire loc="67:../../CMC/CMCC.nc">
      <from><interface-ref name="OCBMode" scoped="" ref="0x2b08bca6f6e0"/></from>
      <to><interface-ref name="OCBMode" scoped="" ref="0x2b08bd270690"/></to>
    </wire>
    <wire loc="13:../../CMC/crypto/OCBModeC.nc">
      <from><interface-ref name="OCBMode" scoped="" ref="0x2b08bd270690"/></from>
      <to><interface-ref name="OCBMode" scoped="" ref="0x2b08bd2d8b40"/></to>
    </wire>
    <wire loc="70:../../CMC/CMCC.nc">
      <from><interface-ref name="SHA1" scoped="" ref="0x2b08bca695a8"/></from>
      <to><interface-ref name="SHA1" scoped="" ref="0x2b08bd1d8cb0"/></to>
    </wire>
    <wire loc="74:../../CMC/CMCC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b08bca5c760"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b08bd2d95b8"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b08bd2d95b8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b08bd409e00"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b08bdee85e8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b08bdedcc18"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b08bdee7268"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b08bc07a698"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b08bcb90578"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b08bdee7e20"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b08bdee7e20"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b08bc08ec28"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b08bcb8fbd8"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2b08bdee5430"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b08bdee5430"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b08bc089cb0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b08bdedb8e8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b08bcb504f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b08bdeda578"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b08bc08ec28"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b08bcb504f8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b08bcba6920"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b08bcba56f8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b08bc068688"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b08bcba43f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b08bc08ec28"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b08bcba3a10"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b08bc07a698"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x2b08bcba2780"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b08bba221c8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x2b08bcba1020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b08bba221c8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b08bcbd5408"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b08bc07a698"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b08bcbd4020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b08bc08ec28"/></to>
    </wire>
    <wire loc="48:../../CMC/TinyECC/ECCC.nc">
      <from><interface-ref name="NN" scoped="" ref="0x2b08bcbc9cf0"/></from>
      <to><interface-ref name="NN" scoped="" ref="0x2b08bcd6e228"/></to>
    </wire>
    <wire loc="49:../../CMC/TinyECC/ECCC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2b08bcbbfcf8"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b08bcf96638"/></to>
    </wire>
    <wire loc="77:../../CMC/TinyECC/ECCC.nc">
      <from><interface-ref name="CurveParam" scoped="" ref="0x2b08bcbbf558"/></from>
      <to><interface-ref name="CurveParam" scoped="" ref="0x2b08bcffee18"/></to>
    </wire>
    <wire loc="78:../../CMC/TinyECC/ECCC.nc">
      <from><interface-ref name="CurveParam" scoped="" ref="0x2b08bcd6a930"/></from>
      <to><interface-ref name="CurveParam" scoped="" ref="0x2b08bcffee18"/></to>
    </wire>
    <wire loc="79:../../CMC/TinyECC/ECCC.nc">
      <from><interface-ref name="NN" scoped="" ref="0x2b08bd0965d0"/></from>
      <to><interface-ref name="NN" scoped="" ref="0x2b08bcd6e228"/></to>
    </wire>
    <wire loc="41:../../CMC/TinyECC/ECIESC.nc">
      <from><interface-ref name="ECC" scoped="" ref="0x2b08bd247d40"/></from>
      <to><interface-ref name="ECC" scoped="" ref="0x2b08bcbd1378"/></to>
    </wire>
    <wire loc="42:../../CMC/TinyECC/ECIESC.nc">
      <from><interface-ref name="NN" scoped="" ref="0x2b08bd24b778"/></from>
      <to><interface-ref name="NN" scoped="" ref="0x2b08bcd6e228"/></to>
    </wire>
    <wire loc="43:../../CMC/TinyECC/ECIESC.nc">
      <from><interface-ref name="SHA1" scoped="" ref="0x2b08bd245e50"/></from>
      <to><interface-ref name="SHA1" scoped="" ref="0x2b08bd1d8cb0"/></to>
    </wire>
    <wire loc="14:../../CMC/crypto/OCBModeC.nc">
      <from><interface-ref name="BlockCipher" scoped="" ref="0x2b08bd2cec68"/></from>
      <to><interface-ref name="BlockCipher" scoped="" ref="0x2b08bd2d7368"/></to>
    </wire>
    <wire loc="15:../../CMC/crypto/OCBModeC.nc">
      <from><interface-ref name="BlockCipherInfo" scoped="" ref="0x2b08bd2cb2b8"/></from>
      <to><interface-ref name="BlockCipherInfo" scoped="" ref="0x2b08bd2d7ce8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b08bd4572d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b08bd409838"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2b08bd405540"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x2b08bd407d70"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2b08bd407d70"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x2b08bbb6caf0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2b08bd4047d0"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x2b08bd459020"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2b08bd459020"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x2b08bbb6d968"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2b08bd403958"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x2b08bd4581b0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2b08bd4581b0"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x2b08bbb52790"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.2/tos/lib/printf/SerialStartC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b08bd447980"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b08bbb3cc78"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.2/tos/lib/printf/SerialStartC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x2b08bd4440e8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b08bd4465b0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b08bd4465b0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b08bd4c0728"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b08bd4c0728"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b08bd50cda8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b08bd43c570"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b08bd434460"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b08bd43bd78"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b08bd4c7d20"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b08bd43b7a0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b08bd4c9180"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b08bd4381a0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b08bd4c6908"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b08bd43a9b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b08bd4c9738"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b08bd4c0110"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b08bd50c790"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b08bd4bb8f8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b08bd438ad8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b08bd4c5308"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b08bd4be208"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b08bd4c4020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b08bd4bf760"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x2b08bd4bb020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x2b08bd7ca6e0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b08bd4be208"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b08bd6376f8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b08bd4bf760"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b08bd637020"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x2b08bd6365b0"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x2b08bd4bb020"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b08bd504bc8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b08bd4bb8f8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b08bd634268"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b08bd4bb8f8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b08bd62bbc8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b08bd4bb8f8"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b08bd636e78"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b08bd502b48"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x2b08bd635750"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x2b08bd505950"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x2b08bd4fcb38"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x2b08bd62e328"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x2b08bd4f7b00"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b08bd6072b8"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2b08bd6072b8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b08bd605db0"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2b08bd623c98"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2b08bd607a80"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2b08bd607a80"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2b08bd5ffda0"/></to>
    </wire>
    <wire loc="332:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x2b08bd51cdd0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b08bba221c8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x2b08bd4dd8e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b08bba221c8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x2b08bd51f590"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b08bba221c8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x2b08bd518020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b08bba221c8"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x2b08bd633908"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b08bba221c8"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x2b08bd632100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b08bba221c8"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2b08bd602cc8"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2b08bd5ff5d8"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x2b08bd5ff5d8"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x2b08bd6ad430"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x2b08bd5ffda0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x2b08bd6adb90"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2b08bd605db0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2b08bd673be8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b08bd677080"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b08bd71ba88"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.1.2/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b08bd71ba88"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b08bd7d7a60"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b08bd6a92d0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b08bd677080"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0x2b08bd6acc18"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x2b08bd68c060"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0TxControl" scoped="" ref="0x2b08bd68c060"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x2b08bd683020"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0x2b08bd6ab470"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x2b08bd68c8b8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0RxControl" scoped="" ref="0x2b08bd68c8b8"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x2b08bd6838b8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUart" scoped="" ref="0x2b08bd6abc10"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x2b08bd68a158"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart0" scoped="" ref="0x2b08bd68a158"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x2b08bd682158"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart1" scoped="" ref="0x2b08bd688860"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x2b08bd67f020"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1TxControl" scoped="" ref="0x2b08bd6896b0"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x2b08bd681d98"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1RxControl" scoped="" ref="0x2b08bd688020"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x2b08bd6806b8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b08bd67e4c8"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b08bbb45020"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2b08bd67d1a8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2b08bbb223c8"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.1.2/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2b08bd7d4c80"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b08bd7157f8"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.2/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b08bd7157f8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b08bd7edce0"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.2/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b08bd7df020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b08bd70e570"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b08bd70e570"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b08bd6fdbe0"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b08bd7095d0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b08bd6f6c90"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x2b08bd707ca0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b08bd6f4350"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b08bd702a20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x2b08bd76ec48"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b08bd702a20"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x2b08bd769020"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b08bd702a20"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x2b08bd765360"/></to>
    </wire>
    <wire loc="27:/opt/tinyos-2.1.2/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b08bd7e93f0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b08bd70e570"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b08bd872508"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x2b08bd815808"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b08bd86d020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b08bd81b1d0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b08bd81b1d0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b08bdfb65c8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b08bd86dc18"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b08bd81bd88"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b08bd81bd88"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b08bd43bd78"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/lib/printf/PrintfC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x2b08bd84f3e0"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x2b08bd870c08"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b08bd8199d8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b08bd43a9b0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b08bd8170a0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b08bd4381a0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b08bdfb52c8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b08bd82b020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b08bdfb5e80"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b08bd43a9b0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b08bd82b020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b08bd8288a8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b08bd8276f8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b08bd43c570"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b08bd8263f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b08bd43a9b0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b08bd825a10"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b08bd43bd78"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x2b08bd824780"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b08bba221c8"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x2b08bd823020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b08bba221c8"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:/opt/tinyos-2.1.2/tos/lib/printf/PrintfP.nc">
      <from><interface-ref name="retrySend" scoped="" ref="0x2b08bd868c78"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b08bba221c8"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x2b08bd8484b8"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x2b08bd84f3e0"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="41:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="40:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G5" loc="42(HplAtm128GeneralIOC.G5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="56:/opt/tinyos-2.1.2/tos/platforms/iris/MeasureClockC.nc">
      <documentation loc="47:/opt/tinyos-2.1.2/tos/platforms/iris/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/opt/tinyos-2.1.2/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/McuSleepC.nc" safe="">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.6 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CMCTestP" loc="45:CMCTestP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/lib/printf/printf.h">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.17 $&#10; @date $Date: 2010-06-29 22:07:50 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CMCTestC.Timer" loc="44(CMCTestC.Timer):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08bbab6020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b08bbab6378"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP):/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1281AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b08bbed50a8"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1281Timer2AsyncC" loc="77:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer2AsyncP" loc="78:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc" safe="">
      <documentation loc="65:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
        <short>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 2 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08bbab6020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b08bbab6378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08bbab6020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b08bbab6378"/></typename>
          </type-tag>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08bbab6020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b08bbab6378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="37:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230ActiveMessageC" loc="41:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioC" loc="37:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioP" loc="39:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC" loc="37(RF230RadioC.RadioAlarmC):/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC.RadioAlarmP" loc="39(RF230RadioC.RadioAlarmC.RadioAlarmP):/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmP"/>
      </instance>
      <module/>
    </component>
    <component qname="TaskletC" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/TaskletC.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC" loc="35(RF230RadioC.ActiveMessageLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP" loc="38(RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/opt/tinyos-2.1.2/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.AutoResourceAcquireLayerC" loc="35(RF230RadioC.AutoResourceAcquireLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <instance number="0">
        <component-ref qname="AutoResourceAcquireLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC" loc="83(RF230RadioC.SendResourceC):/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:RADIO_SEND_RESOURCE">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Queue" loc="42(RF230RadioC.SendResourceC.Queue):/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Arbiter" loc="49(RF230RadioC.SendResourceC.Arbiter):/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154MessageLayerC" loc="35(RF230RadioC.Ieee154MessageLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154MessageLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TinyosNetworkLayerC" loc="50(RF230RadioC.TinyosNetworkLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <instance number="0">
        <component-ref qname="TinyosNetworkLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC" loc="35(RF230RadioC.Ieee154PacketLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP" loc="37(RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC" loc="35(RF230RadioC.UniqueLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC.UniqueLayerP" loc="38(RF230RadioC.UniqueLayerC.UniqueLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="NeighborhoodC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <configuration/>
    </component>
    <component qname="NeighborhoodP" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC.NeighborhoodFlagC" loc="35(RF230RadioC.UniqueLayerC.NeighborhoodFlagC):/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <instance number="0">
        <component-ref qname="NeighborhoodFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.PacketLinkLayerC" loc="73(RF230RadioC.PacketLinkLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketLinkLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC" loc="35(RF230RadioC.LowPowerListeningLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP" loc="35(RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC" loc="35(RF230RadioC.MessageBufferLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP" loc="39(RF230RadioC.MessageBufferLayerC.MessageBufferLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.CollisionAvoidanceLayerC" loc="35(RF230RadioC.CollisionAvoidanceLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP" loc="38(RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RandomC" loc="43:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.SoftwareAckLayerC" loc="38(RF230RadioC.SoftwareAckLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <instance number="0">
        <component-ref qname="SoftwareAckLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.CsmaLayerC" loc="35(RF230RadioC.CsmaLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="0">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC" loc="37(RF230RadioC.TimeStampingLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP" loc="38(RF230RadioC.TimeStampingLayerC.TimeStampingLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="19:/opt/tinyos-2.1.2/tos/system/LocalTimeMilliC.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/system/LocalTimeMilliC.nc">
        <short>&#10; Provide current time via the LocalTime&#60;TMilli> interface.</short>
        <long>&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MetadataFlagsLayerC" loc="38(RF230RadioC.MetadataFlagsLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <instance number="0">
        <component-ref qname="MetadataFlagsLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TrafficMonitorLayerC" loc="35(RF230RadioC.TrafficMonitorLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="1">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230DriverLayerC" loc="38:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <configuration/>
    </component>
    <component qname="RF230DriverLayerP" loc="42:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <module/>
    </component>
    <component qname="HplRF230C" loc="37:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <configuration/>
    </component>
    <component qname="HplRF230P" loc="35:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <module/>
    </component>
    <component qname="Atm128SpiC" loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.7 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.12 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="83(Atm128SpiC.Arbiter):/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="42(Atm128SpiC.Arbiter.Queue):/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer1C" loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer1P" loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc" safe="">
      <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC" loc="28(HplRF230C.AlarmC):/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InitOneP.InitOne" loc="44(InitOneP.InitOne):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC.NAlarm" loc="51(HplRF230C.AlarmC.NAlarm):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08bbab4430"/>
            <typename><typedef-ref name="TOne" ref="0x2b08bbb029f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC" loc="37:/opt/tinyos-2.1.2/tos/platforms/iris/LocalTimeMicroC.nc">
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="42(CounterOne16C.NCounter):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08bbab4430"/>
            <typename><typedef-ref name="TOne" ref="0x2b08bbb029f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.TransformCounterC" loc="54(LocalTimeMicroC.TransformCounterC):/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08bbab4430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b08bbab4788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b08bb142608"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08bbab4430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b08bbab4788"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b08bb142608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.CounterToLocalTimeC" loc="46(LocalTimeMicroC.CounterToLocalTimeC):/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08bbab4430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b08bbab4788"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="34:/opt/tinyos-2.1.2/tos/platforms/micaz/BusyWaitMicroC.nc">
      <module/>
    </component>
    <component qname="CMCTestC.CMC0" loc="23(CMCTestC.CMC0):../../CMC/CMCSocket.nc">
      <instance number="0">
        <component-ref qname="CMCSocket"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CMCC" loc="25:../../CMC/CMCC.nc">
      <configuration/>
    </component>
    <component qname="CMCC.TimerMilliC" loc="44(CMCC.TimerMilliC):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CMCP" loc="45:../../CMC/CMCP.nc">
      <documentation loc="26:../../CMC/TinyECC/ECC.h">
        <short>&#10; $Id: ECC.h,v 1.13 2007/11/02 22:36:39 aliu3 Exp $&#10; Ecc.h&#10; define the data structure for ECC operation&#10;</short>
      </documentation>
      <module/>
    </component>
    <component qname="CMCC.AMSenderC" loc="47(CMCC.AMSenderC):/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:8">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CMCC.AMSenderC.SenderC" loc="47(CMCC.AMSenderC.SenderC):/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b08bbdaed78"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CMCC.AMSenderC.SenderC.AMQueueEntryP" loc="43(CMCC.AMSenderC.SenderC.AMQueueEntryP):/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b08bbdaed78"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CMCC.AMReceiverC" loc="43(CMCC.AMReceiverC):/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:8">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ECCC" loc="37:../../CMC/TinyECC/ECCC.nc">
      <documentation loc="26:../../CMC/TinyECC/ECCC.nc">
        <short>&#10; ECCC.nc&#10; Configuration of Ecc&#10;&#10; Author: An Liu&#10; Date: 09/29/2006&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="ECCM" loc="33:../../CMC/TinyECC/ECCM.nc">
      <documentation loc="26:../../CMC/TinyECC/ECCM.nc">
        <short>&#10; ECCM, the module implement ECC.nc&#10;</short>
      </documentation>
      <module/>
    </component>
    <component qname="NNM" loc="44:../../CMC/TinyECC/NNM.nc">
      <documentation loc="27:../../CMC/TinyECC/NNM.nc">
        <short>&#10; module NNM, provide interface NN&#10; modified from nn.h and nn.c from RSAREF 2.0&#10;</short>
      </documentation>
      <module/>
    </component>
    <component qname="RandomLfsrC" loc="61:/opt/tinyos-2.1.2/tos/system/RandomLfsrC.nc">
      <documentation loc="50:/opt/tinyos-2.1.2/tos/system/RandomLfsrC.nc">
        <short>&#10; This is a 16 bit Linear Feedback Shift Register pseudo random number&#10;generator.</short>
        <long>&#10; This is a 16 bit Linear Feedback Shift Register pseudo random number&#10;generator. It is faster than the MLCG generator, but the numbers generated&#10; have less randomness.&#10;&#10; @author Alec Woo&#10; @author David Gay&#10; @author Philip Levis&#10; @date   August 8 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="secp128r1" loc="34:../../CMC/TinyECC/secp128r1.nc">
      <documentation loc="26:../../CMC/TinyECC/secp128r1.nc">
        <short>&#10; Module for curve secp128r1 in 8 bit form&#10; &#10; Author: An Liu&#10; Date: 09/15/2005&#10;</short>
      </documentation>
      <module/>
    </component>
    <component qname="secp128r2" loc="36:../../CMC/TinyECC/secp128r2.nc">
      <documentation loc="26:../../CMC/TinyECC/secp128r2.nc">
        <short>&#10; Module for curve secp128r2 in 8 bit form&#10;&#10; Author: An Liu&#10; Date: 09/15/2005&#10; Modified by: Panos Kampanakis&#10; Date: 01/31/2007&#10;</short>
      </documentation>
      <module/>
    </component>
    <component qname="secp160k1" loc="36:../../CMC/TinyECC/secp160k1.nc">
      <documentation loc="26:../../CMC/TinyECC/secp160k1.nc">
        <short>&#10; Module for curve secp160k1&#10;&#10; Author: An Liu&#10; Date: 09/15/2005&#10; Modified by: Panos Kampanakis&#10; Date: 01/31/2007&#10;</short>
      </documentation>
      <module/>
    </component>
    <component qname="secp160r1" loc="34:../../CMC/TinyECC/secp160r1.nc">
      <documentation loc="26:../../CMC/TinyECC/secp160r1.nc">
        <short>&#10; Module for curve secp160r1&#10;&#10; Author: An Liu&#10; Date: 09/15/2005&#10;</short>
      </documentation>
      <module/>
    </component>
    <component qname="secp160r2" loc="36:../../CMC/TinyECC/secp160r2.nc">
      <documentation loc="26:../../CMC/TinyECC/secp160r2.nc">
        <short>&#10; Module for secp160r2 in 16 bit form&#10;&#10; Author: An Liu&#10; Date: 09/15/2005&#10; Modified by: Panos Kampanakis&#10; Date: 01/31/2007&#10;</short>
      </documentation>
      <module/>
    </component>
    <component qname="secp192k1" loc="36:../../CMC/TinyECC/secp192k1.nc">
      <documentation loc="26:../../CMC/TinyECC/secp192k1.nc">
        <short>&#10; Module for curve secp192k1&#10;&#10; Author: An Liu&#10; Date: 09/15/2005&#10; Modified by: Panos Kampanakis&#10; Date: 01/31/2007&#10;</short>
      </documentation>
      <module/>
    </component>
    <component qname="secp192r1" loc="36:../../CMC/TinyECC/secp192r1.nc">
      <documentation loc="26:../../CMC/TinyECC/secp192r1.nc">
        <short>&#10; Module for curve secp192r1&#10;&#10; Author: An Liu&#10; Date: 09/15/2005&#10; Modified by: Panos Kampanakis&#10; Date: 01/31/2007&#10;</short>
      </documentation>
      <module/>
    </component>
    <component qname="ECIESC" loc="33:../../CMC/TinyECC/ECIESC.nc">
      <documentation loc="26:../../CMC/TinyECC/ECIESC.nc">
        <short>&#10; configuration for ECIES&#10; &#10; Author: An Liu&#10; Date: 05/06/2007&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="SHA1M" loc="42:../../CMC/TinyECC/SHA1M.nc">
      <module/>
    </component>
    <component qname="ECIESM" loc="35:../../CMC/TinyECC/ECIESM.nc">
      <documentation loc="26:../../CMC/TinyECC/ECIESM.nc">
        <short>&#10; Module implement ECIES operations&#10;</short>
      </documentation>
      <module/>
    </component>
    <component qname="OCBModeC" loc="5:../../CMC/crypto/OCBModeC.nc">
      <configuration/>
    </component>
    <component qname="OCBModeM" loc="40:../../CMC/crypto/OCBModeM.nc">
      <module/>
    </component>
    <component qname="AES128M" loc="17:../../CMC/crypto/AES128M.nc">
      <module/>
    </component>
    <component qname="LedsC" loc="45:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/opt/tinyos-2.1.2/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialStartP" loc="37:/opt/tinyos-2.1.2/tos/lib/printf/SerialStartP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/lib/printf/SerialStartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Thomas Schmid&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="38:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:42 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C" loc="38:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:02 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C.UartP" loc="46(Atm128Uart0C.UartP):/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128UartC" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <documentation loc="38:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
        <short>&#10; HPL for the Atmega 128 serial ports.</short>
        <long>&#10; HPL for the Atmega 128 serial ports.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128UartP" loc="112:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <documentation loc="102:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
        <short> &#10; Private component of the Atmega1281 serial port HPL.</short>
        <long> &#10; Private component of the Atmega1281 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CounterMicro32C" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica/CounterMicro32C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/CounterMicro32C.nc">
        <short>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterThree16C" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica/CounterThree16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/CounterThree16C.nc">
        <short>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer3C" loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 3.</short>
        <long>&#10; HPL interface to Atmega1281 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer3P" loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc" safe="">
      <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 3.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitThreeP.InitThree" loc="44(InitThreeP.InitThree):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterThree16C.NCounter" loc="42(CounterThree16C.NCounter):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08bbab4430"/>
            <typename><typedef-ref name="TThree" ref="0x2b08bbb02d70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMicro32C.Transform32" loc="54(CounterMicro32C.Transform32):/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08bbab4430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b08bbab4788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b08bb142608"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08bbab4430"/>
            <typename><typedef-ref name="TThree" ref="0x2b08bbb02d70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_three_overflow_t" ref="0x2b08bbb00630"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PrintfC.SerialAMSenderC" loc="47(PrintfC.SerialAMSenderC):/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:100">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PrintfC.SerialAMSenderC.AMQueueEntryP" loc="43(PrintfC.SerialAMSenderC.AMQueueEntryP):/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b08bbdaed78"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialAMQueueP" loc="43:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMQueueP.nc">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialAMQueueP.AMQueueImplP" loc="45(SerialAMQueueP.AMQueueImplP):/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PrintfC.QueueC" loc="42(PrintfC.QueueC):/opt/tinyos-2.1.2/tos/system/BigQueueC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/BigQueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2007-09-19 17:20:47 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BigQueueC"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
          </type-int>
          <value cst="I:500">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PrintfP" loc="87:/opt/tinyos-2.1.2/tos/lib/printf/PrintfP.nc" safe="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/lib/printf/printf.h">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.17 $&#10; @date $Date: 2010-06-29 22:07:50 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PutcharC" loc="42:/opt/tinyos-2.1.2/tos/lib/printf/PutcharC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/printf/PutcharC.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PutcharP" loc="93:/opt/tinyos-2.1.2/tos/lib/printf/PutcharP.nc">
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b08bbbaa8a8" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b08bbbaabf0" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b08bbba7020" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b08bbbba340" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b08bbbba6a8" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b08bbbbaa10" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2b08bbbbad40" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b08bbc4e508" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b08bbc4e870" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b08bbc4ebd8" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2b08bbc4d020" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2b08bbed50a8" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b08bbed50a8"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2b08bbed5398" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1281AlarmAsyncP" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2b08bbecc778" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b08bbecc778"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2b08bbecca68" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b08bbfbd0a8" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b08bbfbd0a8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b08bbfec020" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b08bbfec020"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x2b08bbfec330" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b08bc0470a8" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b08bc0470a8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="RadioAlarmC" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RadioAlarmP" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ActiveMessageLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ActiveMessageLayerP" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AutoResourceAcquireLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x2b08bc2aaab0" loc="83:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x2b08bc2c7e20" loc="42:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154MessageLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TinyosNetworkLayerC" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154PacketLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Ieee154PacketLayerP" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="UniqueLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="UniqueLayerP" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="NeighborhoodFlagC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlagC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketLinkLayerC" loc="73:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc" abstract="">
      <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyP" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MessageBufferLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="MessageBufferLayerP" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="RandomCollisionLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerP" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SoftwareAckLayerC" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="DummyLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerC" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerP" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MetadataFlagsLayerC" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmOne16C" loc="28:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x2b08bc93ae00" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b08bc93ae00"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x2b08bc9371a0" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x2b08bc93b750" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x2b08bc93b750"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x2b08bc969020" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b08bc969020"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x2b08bc969320" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x2b08bc9b5430" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x2b08bc9b5430"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x2b08bc9b5b80" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b08bc9b5b80"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x2b08bc99c918" loc="55:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x2b08bc99c918"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x2b08bc9990a8" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x2b08bc9990a8"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x2b08bc999470" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x2b08bc999470"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x2b08bc999be8" loc="58:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x2b08bc999be8"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x2b08bc998020" loc="59:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x2b08bc9987b0" loc="60:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x2b08bc9987b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="CMCSocket" loc="23:../../CMC/CMCSocket.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMSenderC" loc="47:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x2b08bcb2f020" loc="47:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b08bbdaed78"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x2b08bcb2a948" loc="47:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b08bbdaed78"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x2b08bcb21380" loc="43:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b08bbdaed78"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x2b08bcb4e730" loc="45:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x2b08bcb8dca8" loc="43:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b08bbdaed78"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128UartP" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc" abstract="" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialAMSenderC" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc" abstract="">
      <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x2b08bd7b87c0" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
          <component-ref qname="SerialAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b08bbdaed78"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="BigQueueC" loc="42:/opt/tinyos-2.1.2/tos/system/BigQueueC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/BigQueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2007-09-19 17:20:47 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x2b08bd8132b8" loc="42:/opt/tinyos-2.1.2/tos/system/BigQueueC.nc">
          <component-ref qname="BigQueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x2b08bd8132b8"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x2b08bd813620" loc="42:/opt/tinyos-2.1.2/tos/system/BigQueueC.nc">
          <component-ref qname="BigQueueC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x2b08bbb4a0e0" loc="58:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b08bbb4a0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08bbb4a430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b08bbb3cc78" loc="57:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b08bbb3cc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b08bbb3b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b08bbb45cf0" loc="52:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b08bbb45cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08bbb440a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b08bbb46080" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b08bbb46080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08bbb463d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2b08bbb45020" loc="50:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b08bbb45020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b08bbb45370"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b08bbb454f8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b08bbb45680"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b08bbb45808"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b08bbb45990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x2b08bbb4b6c0" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x2b08bbb4b6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08bbb4ba10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b08bbb4b020" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b08bbb4b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08bbb4b370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x2b08bbb4bd88" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x2b08bbb4bd88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08bbb58170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b08bbb4dbe8" loc="41:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b08bbb4dbe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08bbb53020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b08bbb4d558" loc="40:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b08bbb4d558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08bbb4d8a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b08bbb5d4f8" loc="45:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b08bbb5d4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08bbb5d848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x2b08bbb65388" loc="44:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x2b08bbb65388"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbb656d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbb65860"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbb659e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbb65b70"/>
        <function-ref name="get" scoped="" ref="0x2b08bbb65cf8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbb65e80"/>
        <function-ref name="set" scoped="" ref="0x2b08bbb5d030"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbb5d1b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b08bbb5e020" loc="43:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b08bbb5e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08bbb5e370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x2b08bbba4968" loc="98:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x2b08bbba4968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbba30f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbba3278"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbba3400"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbba3588"/>
        <function-ref name="get" scoped="" ref="0x2b08bbba3710"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbba3898"/>
        <function-ref name="set" scoped="" ref="0x2b08bbba3a20"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbba3ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x2b08bbb7e4d0" loc="72:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x2b08bbb7e4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbb7e820"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbb7e9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbb7eb30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbb7ecb8"/>
        <function-ref name="get" scoped="" ref="0x2b08bbb7ee40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbb7d020"/>
        <function-ref name="set" scoped="" ref="0x2b08bbb7d1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbb7d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x2b08bbb924d0" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x2b08bbb924d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbb92820"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbb929a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbb92b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbb92cb8"/>
        <function-ref name="get" scoped="" ref="0x2b08bbb92e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbb91020"/>
        <function-ref name="set" scoped="" ref="0x2b08bbb911a8"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbb91330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x2b08bbb991a0" loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x2b08bbb991a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbb994f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbb99678"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbb99800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbb99988"/>
        <function-ref name="get" scoped="" ref="0x2b08bbb99b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbb99c98"/>
        <function-ref name="set" scoped="" ref="0x2b08bbb99e20"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbb98020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x2b08bbb9d658" loc="103:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x2b08bbb9d658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbb9d9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbb9db30"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbb9dcb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbb9de40"/>
        <function-ref name="get" scoped="" ref="0x2b08bbbac020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbbac1a8"/>
        <function-ref name="set" scoped="" ref="0x2b08bbbac330"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbbac4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x2b08bbb741a0" loc="50:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x2b08bbb741a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbb744f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbb74678"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbb74800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbb74988"/>
        <function-ref name="get" scoped="" ref="0x2b08bbb74b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbb74c98"/>
        <function-ref name="set" scoped="" ref="0x2b08bbb74e20"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbb73020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x2b08bbb9ce00" loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x2b08bbb9ce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbb9b1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbb9b330"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbb9b4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbb9b640"/>
        <function-ref name="get" scoped="" ref="0x2b08bbb9b7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbb9b950"/>
        <function-ref name="set" scoped="" ref="0x2b08bbb9bad8"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbb9bc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x2b08bbb724d0" loc="53:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x2b08bbb724d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbb72820"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbb729a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbb72b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbb72cb8"/>
        <function-ref name="get" scoped="" ref="0x2b08bbb72e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbb71020"/>
        <function-ref name="set" scoped="" ref="0x2b08bbb711a8"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbb71330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x2b08bbb76658" loc="64:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x2b08bbb76658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbb769a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbb76b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbb76cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbb76e40"/>
        <function-ref name="get" scoped="" ref="0x2b08bbb75020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbb751a8"/>
        <function-ref name="set" scoped="" ref="0x2b08bbb75330"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbb754b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x2b08bbb8a968" loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x2b08bbb8a968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbb8acb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbb8ae40"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbb89020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbb891a8"/>
        <function-ref name="get" scoped="" ref="0x2b08bbb89330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbb894b8"/>
        <function-ref name="set" scoped="" ref="0x2b08bbb89640"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbb897c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x2b08bbb8f968" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x2b08bbb8f968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbb8fcb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbb8fe40"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbb8e020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbb8e1a8"/>
        <function-ref name="get" scoped="" ref="0x2b08bbb8e330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbb8e4b8"/>
        <function-ref name="set" scoped="" ref="0x2b08bbb8e640"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbb8e7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x2b08bbb6d968" loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x2b08bbb6d968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbb6dcb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbb6de40"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbb6c020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbb6c1a8"/>
        <function-ref name="get" scoped="" ref="0x2b08bbb6c330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbb6c4b8"/>
        <function-ref name="set" scoped="" ref="0x2b08bbb6c640"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbb6c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x2b08bbb6f968" loc="56:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x2b08bbb6f968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbb6fcb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbb6fe40"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbb6e020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbb6e1a8"/>
        <function-ref name="get" scoped="" ref="0x2b08bbb6e330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbb6e4b8"/>
        <function-ref name="set" scoped="" ref="0x2b08bbb6e640"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbb6e7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x2b08bbb83af0" loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x2b08bbb83af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbb83e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbb82020"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbb821a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbb82330"/>
        <function-ref name="get" scoped="" ref="0x2b08bbb824b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbb82640"/>
        <function-ref name="set" scoped="" ref="0x2b08bbb827c8"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbb82950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x2b08bbb87e00" loc="78:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x2b08bbb87e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbb861a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbb86330"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbb864b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbb86640"/>
        <function-ref name="get" scoped="" ref="0x2b08bbb867c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbb86950"/>
        <function-ref name="set" scoped="" ref="0x2b08bbb86ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbb86c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x2b08bbb96658" loc="95:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x2b08bbb96658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbb969a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbb96b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbb96cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbb96e40"/>
        <function-ref name="get" scoped="" ref="0x2b08bbb95020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbb951a8"/>
        <function-ref name="set" scoped="" ref="0x2b08bbb95330"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbb954b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x2b08bbb9f348" loc="101:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x2b08bbb9f348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbb9f698"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbb9f820"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbb9f9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbb9fb30"/>
        <function-ref name="get" scoped="" ref="0x2b08bbb9fcb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbb9fe40"/>
        <function-ref name="set" scoped="" ref="0x2b08bbb9e020"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbb9e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x2b08bbb941a0" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x2b08bbb941a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbb944f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbb94678"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbb94800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbb94988"/>
        <function-ref name="get" scoped="" ref="0x2b08bbb94b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbb94c98"/>
        <function-ref name="set" scoped="" ref="0x2b08bbb94e20"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbb93020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x2b08bbb6ae00" loc="48:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x2b08bbb6ae00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbb681a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbb68330"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbb684b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbb68640"/>
        <function-ref name="get" scoped="" ref="0x2b08bbb687c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbb68950"/>
        <function-ref name="set" scoped="" ref="0x2b08bbb68ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbb68c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x2b08bbb7a020" loc="59:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x2b08bbb7a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbb7a370"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbb7a4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbb7a680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbb7a808"/>
        <function-ref name="get" scoped="" ref="0x2b08bbb7a990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbb7ab18"/>
        <function-ref name="set" scoped="" ref="0x2b08bbb7aca0"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbb7ae28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x2b08bbba2020" loc="99:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x2b08bbba2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbba2370"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbba24f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbba2680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbba2808"/>
        <function-ref name="get" scoped="" ref="0x2b08bbba2990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbba2b18"/>
        <function-ref name="set" scoped="" ref="0x2b08bbba2ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbba2e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x2b08bbb78348" loc="62:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x2b08bbb78348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbb78698"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbb78820"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbb789a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbb78b30"/>
        <function-ref name="get" scoped="" ref="0x2b08bbb78cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbb78e40"/>
        <function-ref name="set" scoped="" ref="0x2b08bbb77020"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbb771a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x2b08bbb7d658" loc="73:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x2b08bbb7d658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbb7d9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbb7db30"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbb7dcb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbb7de40"/>
        <function-ref name="get" scoped="" ref="0x2b08bbb8c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbb8c1a8"/>
        <function-ref name="set" scoped="" ref="0x2b08bbb8c330"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbb8c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x2b08bbb91658" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x2b08bbb91658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbb919a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbb91b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbb91cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbb91e40"/>
        <function-ref name="get" scoped="" ref="0x2b08bbb90020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbb901a8"/>
        <function-ref name="set" scoped="" ref="0x2b08bbb90330"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbb904b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x2b08bbb98348" loc="93:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x2b08bbb98348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbb98698"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbb98820"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbb989a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbb98b30"/>
        <function-ref name="get" scoped="" ref="0x2b08bbb98cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbb98e40"/>
        <function-ref name="set" scoped="" ref="0x2b08bbb97020"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbb971a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x2b08bbb73348" loc="51:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x2b08bbb73348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbb73698"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbb73820"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbb739a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbb73b30"/>
        <function-ref name="get" scoped="" ref="0x2b08bbb73cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbb73e40"/>
        <function-ref name="set" scoped="" ref="0x2b08bbb72020"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbb721a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x2b08bbb71658" loc="54:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x2b08bbb71658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbb719a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbb71b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbb71cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbb71e40"/>
        <function-ref name="get" scoped="" ref="0x2b08bbb70020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbb701a8"/>
        <function-ref name="set" scoped="" ref="0x2b08bbb70330"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbb704b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x2b08bbb757e0" loc="65:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x2b08bbb757e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbb75b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbb75cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbb75e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbb84020"/>
        <function-ref name="get" scoped="" ref="0x2b08bbb841a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbb84330"/>
        <function-ref name="set" scoped="" ref="0x2b08bbb844b8"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbb84640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x2b08bbb89af0" loc="76:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x2b08bbb89af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbb89e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbb88020"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbb881a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbb88330"/>
        <function-ref name="get" scoped="" ref="0x2b08bbb884b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbb88640"/>
        <function-ref name="set" scoped="" ref="0x2b08bbb887c8"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbb88950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x2b08bbb8eaf0" loc="87:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x2b08bbb8eaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbb8ee40"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbb8d020"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbb8d1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbb8d330"/>
        <function-ref name="get" scoped="" ref="0x2b08bbb8d4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbb8d640"/>
        <function-ref name="set" scoped="" ref="0x2b08bbb8d7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbb8d950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x2b08bbb6caf0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x2b08bbb6caf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbb6ce40"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbb6b020"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbb6b1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbb6b330"/>
        <function-ref name="get" scoped="" ref="0x2b08bbb6b4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbb6b640"/>
        <function-ref name="set" scoped="" ref="0x2b08bbb6b7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbb6b950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x2b08bbb6eaf0" loc="57:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x2b08bbb6eaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbb7c020"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbb7c1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbb7c330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbb7c4b8"/>
        <function-ref name="get" scoped="" ref="0x2b08bbb7c640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbb7c7c8"/>
        <function-ref name="set" scoped="" ref="0x2b08bbb7c950"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbb7cad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x2b08bbb82c78" loc="68:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x2b08bbb82c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbb81020"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbb811a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbb81330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbb814b8"/>
        <function-ref name="get" scoped="" ref="0x2b08bbb81640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbb817c8"/>
        <function-ref name="set" scoped="" ref="0x2b08bbb81950"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbb81ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x2b08bbb957e0" loc="96:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x2b08bbb957e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbb95b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbb95cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbb95e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbba4020"/>
        <function-ref name="get" scoped="" ref="0x2b08bbba41a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbba4330"/>
        <function-ref name="set" scoped="" ref="0x2b08bbba44b8"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbba4640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x2b08bbb7f020" loc="71:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x2b08bbb7f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbb7f570"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbb7f6f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbb7f880"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbb7fa08"/>
        <function-ref name="get" scoped="" ref="0x2b08bbb7fb90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbb7fd18"/>
        <function-ref name="set" scoped="" ref="0x2b08bbb7e020"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbb7e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x2b08bbb93348" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x2b08bbb93348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbb93698"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbb93820"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbb939a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbb93b30"/>
        <function-ref name="get" scoped="" ref="0x2b08bbb93cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbb93e40"/>
        <function-ref name="set" scoped="" ref="0x2b08bbb92020"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbb921a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x2b08bbb9a020" loc="91:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x2b08bbb9a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbb9a370"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbb9a4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbb9a680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbb9a808"/>
        <function-ref name="get" scoped="" ref="0x2b08bbb9a990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbb9ab18"/>
        <function-ref name="set" scoped="" ref="0x2b08bbb9aca0"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbb9ae28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x2b08bbb9e4d0" loc="102:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x2b08bbb9e4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbb9e820"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbb9e9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbb9eb30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbb9ecb8"/>
        <function-ref name="get" scoped="" ref="0x2b08bbb9ee40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbb9d020"/>
        <function-ref name="set" scoped="" ref="0x2b08bbb9d1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbb9d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x2b08bbb67020" loc="49:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x2b08bbb67020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbb67370"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbb674f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbb67680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbb67808"/>
        <function-ref name="get" scoped="" ref="0x2b08bbb67990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbb67b18"/>
        <function-ref name="set" scoped="" ref="0x2b08bbb67ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbb67e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x2b08bbb791a0" loc="60:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x2b08bbb791a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbb794f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbb79678"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbb79800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbb79988"/>
        <function-ref name="get" scoped="" ref="0x2b08bbb79b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbb79c98"/>
        <function-ref name="set" scoped="" ref="0x2b08bbb79e20"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbb78020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x2b08bbb8dc78" loc="89:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x2b08bbb8dc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbb9c020"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbb9c1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbb9c330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbb9c4b8"/>
        <function-ref name="get" scoped="" ref="0x2b08bbb9c640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbb9c7c8"/>
        <function-ref name="set" scoped="" ref="0x2b08bbb9c950"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbb9cad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x2b08bbb774d0" loc="63:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x2b08bbb774d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbb77820"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbb779a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbb77b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbb77cb8"/>
        <function-ref name="get" scoped="" ref="0x2b08bbb77e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbb76020"/>
        <function-ref name="set" scoped="" ref="0x2b08bbb761a8"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbb76330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x2b08bbb8c7e0" loc="74:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x2b08bbb8c7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbb8cb30"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbb8ccb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbb8ce40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbb8a020"/>
        <function-ref name="get" scoped="" ref="0x2b08bbb8a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbb8a330"/>
        <function-ref name="set" scoped="" ref="0x2b08bbb8a4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbb8a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x2b08bbb907e0" loc="85:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x2b08bbb907e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbb90b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbb90cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbb90e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbb8f020"/>
        <function-ref name="get" scoped="" ref="0x2b08bbb8f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbb8f330"/>
        <function-ref name="set" scoped="" ref="0x2b08bbb8f4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbb8f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x2b08bbb974d0" loc="94:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x2b08bbb974d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbb97820"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbb979a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbb97b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbb97cb8"/>
        <function-ref name="get" scoped="" ref="0x2b08bbb97e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbb96020"/>
        <function-ref name="set" scoped="" ref="0x2b08bbb961a8"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbb96330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x2b08bbb52790" loc="44:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x2b08bbb52790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbb52ae0"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbb52c68"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbb52df0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbb6d020"/>
        <function-ref name="get" scoped="" ref="0x2b08bbb6d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbb6d330"/>
        <function-ref name="set" scoped="" ref="0x2b08bbb6d4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbb6d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x2b08bbb707e0" loc="55:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x2b08bbb707e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbb70b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbb70cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbb70e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbb6f020"/>
        <function-ref name="get" scoped="" ref="0x2b08bbb6f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbb6f330"/>
        <function-ref name="set" scoped="" ref="0x2b08bbb6f4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbb6f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x2b08bbb84968" loc="66:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x2b08bbb84968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbb84cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbb84e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbb83020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbb831a8"/>
        <function-ref name="get" scoped="" ref="0x2b08bbb83330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbb834b8"/>
        <function-ref name="set" scoped="" ref="0x2b08bbb83640"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbb837c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x2b08bbb88c78" loc="77:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x2b08bbb88c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbb87020"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbb871a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbb87330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbb874b8"/>
        <function-ref name="get" scoped="" ref="0x2b08bbb87640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbb877c8"/>
        <function-ref name="set" scoped="" ref="0x2b08bbb87950"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbb87ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x2b08bbba01a0" loc="100:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x2b08bbba01a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbba04f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbba0678"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbba0800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbba0988"/>
        <function-ref name="get" scoped="" ref="0x2b08bbba0b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbba0c98"/>
        <function-ref name="set" scoped="" ref="0x2b08bbba0e20"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbb9f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x2b08bbb85020" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x2b08bbb85020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbb85370"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbb854f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbb85680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbb85808"/>
        <function-ref name="get" scoped="" ref="0x2b08bbb85990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbb85b18"/>
        <function-ref name="set" scoped="" ref="0x2b08bbb85ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbb85e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x2b08bbb81e00" loc="69:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x2b08bbb81e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbb801a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbb80330"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbb804b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbb80640"/>
        <function-ref name="get" scoped="" ref="0x2b08bbb807c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbb80950"/>
        <function-ref name="set" scoped="" ref="0x2b08bbb80ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbb80c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x2b08bbb6bc78" loc="47:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x2b08bbb6bc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbb6a020"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbb6a1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbb6a330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbb6a4b8"/>
        <function-ref name="get" scoped="" ref="0x2b08bbb6a640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbb6a7c8"/>
        <function-ref name="set" scoped="" ref="0x2b08bbb6a950"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbb6aad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x2b08bbb7ce00" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x2b08bbb7ce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbb7b1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbb7b330"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbb7b4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbb7b640"/>
        <function-ref name="get" scoped="" ref="0x2b08bbb7b7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbb7b950"/>
        <function-ref name="set" scoped="" ref="0x2b08bbb7bad8"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbb7bc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b08bbbf3120" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b08bbbf3120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbbf3470"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbbf35f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbbf3780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbbf3908"/>
        <function-ref name="get" scoped="" ref="0x2b08bbbf3a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbbf3c18"/>
        <function-ref name="set" scoped="" ref="0x2b08bbbf3da0"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbbf2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b08bbbf05b8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b08bbbf05b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbbf0908"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbbf0a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbbf0c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbbf0da0"/>
        <function-ref name="get" scoped="" ref="0x2b08bbbef020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbbef1a8"/>
        <function-ref name="set" scoped="" ref="0x2b08bbbef330"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbbef4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b08bbbe7dc0" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b08bbbe7dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbbe6170"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbbe62f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbbe6480"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbbe6608"/>
        <function-ref name="get" scoped="" ref="0x2b08bbbe6790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbbe6918"/>
        <function-ref name="set" scoped="" ref="0x2b08bbbe6aa0"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbbe6c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b08bbbf22a8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b08bbbf22a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbbf25f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbbf2780"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbbf2908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbbf2a90"/>
        <function-ref name="get" scoped="" ref="0x2b08bbbf2c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbbf2da0"/>
        <function-ref name="set" scoped="" ref="0x2b08bbbf1020"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbbf11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b08bbbef740" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b08bbbef740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbbefa90"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbbefc18"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbbefda0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbbee020"/>
        <function-ref name="get" scoped="" ref="0x2b08bbbee1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbbee330"/>
        <function-ref name="set" scoped="" ref="0x2b08bbbee4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbbee640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b08bbbe5020" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b08bbbe5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbbe5370"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbbe54f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbbe5680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbbe5808"/>
        <function-ref name="get" scoped="" ref="0x2b08bbbe5990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbbe5b18"/>
        <function-ref name="set" scoped="" ref="0x2b08bbbe5ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbbe5e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b08bbbf1430" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b08bbbf1430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbbf1780"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbbf1908"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbbf1a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbbf1c18"/>
        <function-ref name="get" scoped="" ref="0x2b08bbbf1da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbbf0020"/>
        <function-ref name="set" scoped="" ref="0x2b08bbbf01a8"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbbf0330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b08bbbee8c8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b08bbbee8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbbeec18"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbbeeda0"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbbed020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbbed1a8"/>
        <function-ref name="get" scoped="" ref="0x2b08bbbed330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbbed4b8"/>
        <function-ref name="set" scoped="" ref="0x2b08bbbed640"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbbed7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08bd8949d8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08bd8949d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bd894d28"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bd893020"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bd8931a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bd893330"/>
        <function-ref name="get" scoped="" ref="0x2b08bd8934b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bd893640"/>
        <function-ref name="set" scoped="" ref="0x2b08bd8937c8"/>
        <function-ref name="clr" scoped="" ref="0x2b08bd893950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08bd891a10" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08bd891a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bd891d60"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bd890020"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bd8901a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bd890330"/>
        <function-ref name="get" scoped="" ref="0x2b08bd8904b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bd890640"/>
        <function-ref name="set" scoped="" ref="0x2b08bd8907c8"/>
        <function-ref name="clr" scoped="" ref="0x2b08bd890950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08bd88ea10" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08bd88ea10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bd88ed60"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bd88d020"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bd88d1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bd88d330"/>
        <function-ref name="get" scoped="" ref="0x2b08bd88d4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bd88d640"/>
        <function-ref name="set" scoped="" ref="0x2b08bd88d7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b08bd88d950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08bd88ba10" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08bd88ba10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bd88bd60"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bd88a020"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bd88a1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bd88a330"/>
        <function-ref name="get" scoped="" ref="0x2b08bd88a4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bd88a640"/>
        <function-ref name="set" scoped="" ref="0x2b08bd88a7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b08bd88a950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08bd888a10" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08bd888a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bd888d60"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bd887020"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bd8871a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bd887330"/>
        <function-ref name="get" scoped="" ref="0x2b08bd8874b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bd887640"/>
        <function-ref name="set" scoped="" ref="0x2b08bd8877c8"/>
        <function-ref name="clr" scoped="" ref="0x2b08bd887950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08bd885a10" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08bd885a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bd885d60"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bd884020"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bd8841a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bd884330"/>
        <function-ref name="get" scoped="" ref="0x2b08bd8844b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bd884640"/>
        <function-ref name="set" scoped="" ref="0x2b08bd8847c8"/>
        <function-ref name="clr" scoped="" ref="0x2b08bd884950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08bd882a10" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08bd882a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bd882d60"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bd881020"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bd8811a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bd881330"/>
        <function-ref name="get" scoped="" ref="0x2b08bd8814b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bd881640"/>
        <function-ref name="set" scoped="" ref="0x2b08bd8817c8"/>
        <function-ref name="clr" scoped="" ref="0x2b08bd881950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08bd87fa10" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08bd87fa10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bd87fd60"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bd87e020"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bd87e1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bd87e330"/>
        <function-ref name="get" scoped="" ref="0x2b08bd87e4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bd87e640"/>
        <function-ref name="set" scoped="" ref="0x2b08bd87e7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b08bd87e950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b08bbbf6bd8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b08bbbf6bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbbf5020"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbbf51a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbbf5330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbbf54b8"/>
        <function-ref name="get" scoped="" ref="0x2b08bbbf5640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbbf57c8"/>
        <function-ref name="set" scoped="" ref="0x2b08bbbf5950"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbbf5ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b08bbc04020" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b08bbc04020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbc04370"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbc044f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbc04680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbc04808"/>
        <function-ref name="get" scoped="" ref="0x2b08bbc04990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbc04b18"/>
        <function-ref name="set" scoped="" ref="0x2b08bbc04ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbc04e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b08bbbf8930" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b08bbbf8930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbbf8c80"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbbf8e08"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbbf7020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbbf71a8"/>
        <function-ref name="get" scoped="" ref="0x2b08bbbf7330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbbf74b8"/>
        <function-ref name="set" scoped="" ref="0x2b08bbbf7640"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbbf77c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b08bbbf5d60" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b08bbbf5d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbc060d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbc06260"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbc063e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbc06570"/>
        <function-ref name="get" scoped="" ref="0x2b08bbc066f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbc06880"/>
        <function-ref name="set" scoped="" ref="0x2b08bbc06a08"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbc06b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b08bbc03120" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b08bbc03120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbc03470"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbc035f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbc03780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbc03908"/>
        <function-ref name="get" scoped="" ref="0x2b08bbc03a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbc03c18"/>
        <function-ref name="set" scoped="" ref="0x2b08bbc03da0"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbc02020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b08bbbf7a50" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b08bbbf7a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbbf7da0"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbbf6020"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbbf61a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbbf6330"/>
        <function-ref name="get" scoped="" ref="0x2b08bbbf64b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbbf6640"/>
        <function-ref name="set" scoped="" ref="0x2b08bbbf67c8"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbbf6950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b08bbc06e18" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b08bbc06e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbc051a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbc05330"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbc054b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbc05640"/>
        <function-ref name="get" scoped="" ref="0x2b08bbc057c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbc05950"/>
        <function-ref name="set" scoped="" ref="0x2b08bbc05ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbc05c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b08bbc022a8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b08bbc022a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbc025f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbc02780"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbc02908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbc02a90"/>
        <function-ref name="get" scoped="" ref="0x2b08bbc02c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbc02da0"/>
        <function-ref name="set" scoped="" ref="0x2b08bbc01020"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbc011a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08bd93e970" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08bd93e970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bd93ecc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bd93ee48"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bd93d020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bd93d1a8"/>
        <function-ref name="get" scoped="" ref="0x2b08bd93d330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bd93d4b8"/>
        <function-ref name="set" scoped="" ref="0x2b08bd93d640"/>
        <function-ref name="clr" scoped="" ref="0x2b08bd93d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08bd93b970" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08bd93b970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bd93bcc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bd93be48"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bd93a020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bd93a1a8"/>
        <function-ref name="get" scoped="" ref="0x2b08bd93a330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bd93a4b8"/>
        <function-ref name="set" scoped="" ref="0x2b08bd93a640"/>
        <function-ref name="clr" scoped="" ref="0x2b08bd93a7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08bd938970" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08bd938970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bd938cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bd938e48"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bd937020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bd9371a8"/>
        <function-ref name="get" scoped="" ref="0x2b08bd937330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bd9374b8"/>
        <function-ref name="set" scoped="" ref="0x2b08bd937640"/>
        <function-ref name="clr" scoped="" ref="0x2b08bd9377c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08bd935970" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08bd935970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bd935cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bd935e48"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bd934020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bd9341a8"/>
        <function-ref name="get" scoped="" ref="0x2b08bd934330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bd9344b8"/>
        <function-ref name="set" scoped="" ref="0x2b08bd934640"/>
        <function-ref name="clr" scoped="" ref="0x2b08bd9347c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08bd932970" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08bd932970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bd932cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bd932e48"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bd931020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bd9311a8"/>
        <function-ref name="get" scoped="" ref="0x2b08bd931330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bd9314b8"/>
        <function-ref name="set" scoped="" ref="0x2b08bd931640"/>
        <function-ref name="clr" scoped="" ref="0x2b08bd9317c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08bd92f970" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08bd92f970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bd92fcc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bd92fe48"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bd92e020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bd92e1a8"/>
        <function-ref name="get" scoped="" ref="0x2b08bd92e330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bd92e4b8"/>
        <function-ref name="set" scoped="" ref="0x2b08bd92e640"/>
        <function-ref name="clr" scoped="" ref="0x2b08bd92e7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08bd92c970" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08bd92c970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bd92ccc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bd92ce48"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bd92b020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bd92b1a8"/>
        <function-ref name="get" scoped="" ref="0x2b08bd92b330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bd92b4b8"/>
        <function-ref name="set" scoped="" ref="0x2b08bd92b640"/>
        <function-ref name="clr" scoped="" ref="0x2b08bd92b7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08bd929970" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08bd929970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bd929cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bd929e48"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bd928020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bd9281a8"/>
        <function-ref name="get" scoped="" ref="0x2b08bd928330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bd9284b8"/>
        <function-ref name="set" scoped="" ref="0x2b08bd928640"/>
        <function-ref name="clr" scoped="" ref="0x2b08bd9287c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b08bbc0b740" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b08bbc0b740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbc0ba90"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbc0bc18"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbc0bda0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbc0a020"/>
        <function-ref name="get" scoped="" ref="0x2b08bbc0a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbc0a330"/>
        <function-ref name="set" scoped="" ref="0x2b08bbc0a4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbc0a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b08bbc08bd8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b08bbc08bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbc07020"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbc071a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbc07330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbc074b8"/>
        <function-ref name="get" scoped="" ref="0x2b08bbc07640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbc077c8"/>
        <function-ref name="set" scoped="" ref="0x2b08bbc07950"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbc07ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b08bbc0d500" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b08bbc0d500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbc0d850"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbc0d9d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbc0db60"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbc0dce8"/>
        <function-ref name="get" scoped="" ref="0x2b08bbc0de70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbc0c020"/>
        <function-ref name="set" scoped="" ref="0x2b08bbc0c1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbc0c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b08bbc0a8c8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b08bbc0a8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbc0ac18"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbc0ada0"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbc09020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbc091a8"/>
        <function-ref name="get" scoped="" ref="0x2b08bbc09330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbc094b8"/>
        <function-ref name="set" scoped="" ref="0x2b08bbc09640"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbc097c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b08bbc07d60" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b08bbc07d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbc170d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbc17260"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbc173e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbc17570"/>
        <function-ref name="get" scoped="" ref="0x2b08bbc176f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbc17880"/>
        <function-ref name="set" scoped="" ref="0x2b08bbc17a08"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbc17b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b08bbc0c5b8" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b08bbc0c5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbc0c908"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbc0ca90"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbc0cc18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbc0cda0"/>
        <function-ref name="get" scoped="" ref="0x2b08bbc0b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbc0b1a8"/>
        <function-ref name="set" scoped="" ref="0x2b08bbc0b330"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbc0b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b08bbc09a50" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b08bbc09a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbc09da0"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbc08020"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbc081a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbc08330"/>
        <function-ref name="get" scoped="" ref="0x2b08bbc084b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbc08640"/>
        <function-ref name="set" scoped="" ref="0x2b08bbc087c8"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbc08950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b08bbc17e18" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b08bbc17e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbc161a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbc16330"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbc164b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbc16640"/>
        <function-ref name="get" scoped="" ref="0x2b08bbc167c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbc16950"/>
        <function-ref name="set" scoped="" ref="0x2b08bbc16ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbc16c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08bd95d6a8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08bd95d6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bd95d9f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bd95db80"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bd95dd08"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bd95c020"/>
        <function-ref name="get" scoped="" ref="0x2b08bd95c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bd95c330"/>
        <function-ref name="set" scoped="" ref="0x2b08bd95c4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b08bd95c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08bd95a710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08bd95a710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bd95aa60"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bd95abe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bd95ad70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bd959020"/>
        <function-ref name="get" scoped="" ref="0x2b08bd9591a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bd959330"/>
        <function-ref name="set" scoped="" ref="0x2b08bd9594b8"/>
        <function-ref name="clr" scoped="" ref="0x2b08bd959640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08bd957710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08bd957710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bd957a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bd957be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bd957d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bd956020"/>
        <function-ref name="get" scoped="" ref="0x2b08bd9561a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bd956330"/>
        <function-ref name="set" scoped="" ref="0x2b08bd9564b8"/>
        <function-ref name="clr" scoped="" ref="0x2b08bd956640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08bd954710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08bd954710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bd954a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bd954be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bd954d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bd953020"/>
        <function-ref name="get" scoped="" ref="0x2b08bd9531a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bd953330"/>
        <function-ref name="set" scoped="" ref="0x2b08bd9534b8"/>
        <function-ref name="clr" scoped="" ref="0x2b08bd953640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08bd951710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08bd951710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bd951a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bd951be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bd951d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bd950020"/>
        <function-ref name="get" scoped="" ref="0x2b08bd9501a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bd950330"/>
        <function-ref name="set" scoped="" ref="0x2b08bd9504b8"/>
        <function-ref name="clr" scoped="" ref="0x2b08bd950640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08bd94e710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08bd94e710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bd94ea60"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bd94ebe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bd94ed70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bd94d020"/>
        <function-ref name="get" scoped="" ref="0x2b08bd94d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bd94d330"/>
        <function-ref name="set" scoped="" ref="0x2b08bd94d4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b08bd94d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08bd94b710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08bd94b710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bd94ba60"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bd94bbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bd94bd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bd94a020"/>
        <function-ref name="get" scoped="" ref="0x2b08bd94a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bd94a330"/>
        <function-ref name="set" scoped="" ref="0x2b08bd94a4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b08bd94a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08bd948710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08bd948710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bd948a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bd948be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bd948d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bd947020"/>
        <function-ref name="get" scoped="" ref="0x2b08bd9471a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bd947330"/>
        <function-ref name="set" scoped="" ref="0x2b08bd9474b8"/>
        <function-ref name="clr" scoped="" ref="0x2b08bd947640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b08bbc20120" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b08bbc20120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbc20470"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbc205f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbc20780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbc20908"/>
        <function-ref name="get" scoped="" ref="0x2b08bbc20a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbc20c18"/>
        <function-ref name="set" scoped="" ref="0x2b08bbc20da0"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbc1f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b08bbc1c5b8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b08bbc1c5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbc1c908"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbc1ca90"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbc1cc18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbc1cda0"/>
        <function-ref name="get" scoped="" ref="0x2b08bbc1b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbc1b1a8"/>
        <function-ref name="set" scoped="" ref="0x2b08bbc1b330"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbc1b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b08bbc11e40" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b08bbc11e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbc101c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbc10348"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbc104d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbc10658"/>
        <function-ref name="get" scoped="" ref="0x2b08bbc107e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbc10968"/>
        <function-ref name="set" scoped="" ref="0x2b08bbc10af0"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbc10c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b08bbc1f2a8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b08bbc1f2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbc1f5f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbc1f780"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbc1f908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbc1fa90"/>
        <function-ref name="get" scoped="" ref="0x2b08bbc1fc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbc1fda0"/>
        <function-ref name="set" scoped="" ref="0x2b08bbc1d020"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbc1d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b08bbc1b740" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b08bbc1b740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbc1ba90"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbc1bc18"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbc1bda0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbc1a020"/>
        <function-ref name="get" scoped="" ref="0x2b08bbc1a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbc1a330"/>
        <function-ref name="set" scoped="" ref="0x2b08bbc1a4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbc1a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b08bbc21020" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b08bbc21020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbc21370"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbc214f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbc21680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbc21808"/>
        <function-ref name="get" scoped="" ref="0x2b08bbc21990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbc21b18"/>
        <function-ref name="set" scoped="" ref="0x2b08bbc21ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbc21e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b08bbc1d430" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b08bbc1d430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbc1d780"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbc1d908"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbc1da90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbc1dc18"/>
        <function-ref name="get" scoped="" ref="0x2b08bbc1dda0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbc1c020"/>
        <function-ref name="set" scoped="" ref="0x2b08bbc1c1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbc1c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b08bbc1a8c8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b08bbc1a8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbc1ac18"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbc1ada0"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbc19020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbc191a8"/>
        <function-ref name="get" scoped="" ref="0x2b08bbc19330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbc194b8"/>
        <function-ref name="set" scoped="" ref="0x2b08bbc19640"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbc197c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08bda056a8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08bda056a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bda059f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bda05b80"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bda05d08"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bda04020"/>
        <function-ref name="get" scoped="" ref="0x2b08bda041a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bda04330"/>
        <function-ref name="set" scoped="" ref="0x2b08bda044b8"/>
        <function-ref name="clr" scoped="" ref="0x2b08bda04640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08bda02710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08bda02710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bda02a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bda02be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bda02d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bda01020"/>
        <function-ref name="get" scoped="" ref="0x2b08bda011a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bda01330"/>
        <function-ref name="set" scoped="" ref="0x2b08bda014b8"/>
        <function-ref name="clr" scoped="" ref="0x2b08bda01640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08bd9ff710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08bd9ff710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bd9ffa60"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bd9ffbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bd9ffd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bd9fe020"/>
        <function-ref name="get" scoped="" ref="0x2b08bd9fe1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bd9fe330"/>
        <function-ref name="set" scoped="" ref="0x2b08bd9fe4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b08bd9fe640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08bd9fc710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08bd9fc710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bd9fca60"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bd9fcbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bd9fcd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bd9fb020"/>
        <function-ref name="get" scoped="" ref="0x2b08bd9fb1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bd9fb330"/>
        <function-ref name="set" scoped="" ref="0x2b08bd9fb4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b08bd9fb640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08bd9f9710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08bd9f9710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bd9f9a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bd9f9be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bd9f9d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bd9f8020"/>
        <function-ref name="get" scoped="" ref="0x2b08bd9f81a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bd9f8330"/>
        <function-ref name="set" scoped="" ref="0x2b08bd9f84b8"/>
        <function-ref name="clr" scoped="" ref="0x2b08bd9f8640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08bd9f6710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08bd9f6710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bd9f6a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bd9f6be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bd9f6d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bd9f5020"/>
        <function-ref name="get" scoped="" ref="0x2b08bd9f51a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bd9f5330"/>
        <function-ref name="set" scoped="" ref="0x2b08bd9f54b8"/>
        <function-ref name="clr" scoped="" ref="0x2b08bd9f5640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08bd9f3710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08bd9f3710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bd9f3a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bd9f3be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bd9f3d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bd9f2020"/>
        <function-ref name="get" scoped="" ref="0x2b08bd9f21a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bd9f2330"/>
        <function-ref name="set" scoped="" ref="0x2b08bd9f24b8"/>
        <function-ref name="clr" scoped="" ref="0x2b08bd9f2640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08bd9f0710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08bd9f0710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bd9f0a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bd9f0be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bd9f0d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bd9ef020"/>
        <function-ref name="get" scoped="" ref="0x2b08bd9ef1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bd9ef330"/>
        <function-ref name="set" scoped="" ref="0x2b08bd9ef4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b08bd9ef640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b08bbc23bd8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b08bbc23bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbc22020"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbc221a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbc22330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbc224b8"/>
        <function-ref name="get" scoped="" ref="0x2b08bbc22640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbc227c8"/>
        <function-ref name="set" scoped="" ref="0x2b08bbc22950"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbc22ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b08bbc31020" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b08bbc31020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbc31370"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbc314f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbc31680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbc31808"/>
        <function-ref name="get" scoped="" ref="0x2b08bbc31990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbc31b18"/>
        <function-ref name="set" scoped="" ref="0x2b08bbc31ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbc31e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b08bbc26930" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b08bbc26930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbc26c80"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbc26e08"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbc24020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbc241a8"/>
        <function-ref name="get" scoped="" ref="0x2b08bbc24330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbc244b8"/>
        <function-ref name="set" scoped="" ref="0x2b08bbc24640"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbc247c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b08bbc22d60" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b08bbc22d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbc330d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbc33260"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbc333e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbc33570"/>
        <function-ref name="get" scoped="" ref="0x2b08bbc336f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbc33880"/>
        <function-ref name="set" scoped="" ref="0x2b08bbc33a08"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbc33b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b08bbc30120" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b08bbc30120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbc30470"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbc305f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbc30780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbc30908"/>
        <function-ref name="get" scoped="" ref="0x2b08bbc30a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbc30c18"/>
        <function-ref name="set" scoped="" ref="0x2b08bbc30da0"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbc2f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b08bbc24a50" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b08bbc24a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbc24da0"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbc23020"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbc231a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbc23330"/>
        <function-ref name="get" scoped="" ref="0x2b08bbc234b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbc23640"/>
        <function-ref name="set" scoped="" ref="0x2b08bbc237c8"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbc23950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b08bbc33e18" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b08bbc33e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbc321a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbc32330"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbc324b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbc32640"/>
        <function-ref name="get" scoped="" ref="0x2b08bbc327c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbc32950"/>
        <function-ref name="set" scoped="" ref="0x2b08bbc32ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbc32c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b08bbc2f2a8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b08bbc2f2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbc2f5f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbc2f780"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbc2f908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbc2fa90"/>
        <function-ref name="get" scoped="" ref="0x2b08bbc2fc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbc2fda0"/>
        <function-ref name="set" scoped="" ref="0x2b08bbc2e020"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbc2e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08bda286a8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08bda286a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bda289f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bda28b80"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bda28d08"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bda26020"/>
        <function-ref name="get" scoped="" ref="0x2b08bda261a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bda26330"/>
        <function-ref name="set" scoped="" ref="0x2b08bda264b8"/>
        <function-ref name="clr" scoped="" ref="0x2b08bda26640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08bda24710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08bda24710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bda24a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bda24be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bda24d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bda23020"/>
        <function-ref name="get" scoped="" ref="0x2b08bda231a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bda23330"/>
        <function-ref name="set" scoped="" ref="0x2b08bda234b8"/>
        <function-ref name="clr" scoped="" ref="0x2b08bda23640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08bda21710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08bda21710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bda21a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bda21be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bda21d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bda20020"/>
        <function-ref name="get" scoped="" ref="0x2b08bda201a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bda20330"/>
        <function-ref name="set" scoped="" ref="0x2b08bda204b8"/>
        <function-ref name="clr" scoped="" ref="0x2b08bda20640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08bda1e710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08bda1e710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bda1ea60"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bda1ebe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bda1ed70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bda1d020"/>
        <function-ref name="get" scoped="" ref="0x2b08bda1d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bda1d330"/>
        <function-ref name="set" scoped="" ref="0x2b08bda1d4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b08bda1d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08bda1b710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08bda1b710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bda1ba60"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bda1bbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bda1bd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bda1a020"/>
        <function-ref name="get" scoped="" ref="0x2b08bda1a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bda1a330"/>
        <function-ref name="set" scoped="" ref="0x2b08bda1a4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b08bda1a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08bda18710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08bda18710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bda18a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bda18be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bda18d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bda17020"/>
        <function-ref name="get" scoped="" ref="0x2b08bda171a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bda17330"/>
        <function-ref name="set" scoped="" ref="0x2b08bda174b8"/>
        <function-ref name="clr" scoped="" ref="0x2b08bda17640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08bda15710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08bda15710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bda15a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bda15be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bda15d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bda14020"/>
        <function-ref name="get" scoped="" ref="0x2b08bda141a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bda14330"/>
        <function-ref name="set" scoped="" ref="0x2b08bda144b8"/>
        <function-ref name="clr" scoped="" ref="0x2b08bda14640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08bda12710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08bda12710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bda12a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bda12be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bda12d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bda11020"/>
        <function-ref name="get" scoped="" ref="0x2b08bda111a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bda11330"/>
        <function-ref name="set" scoped="" ref="0x2b08bda114b8"/>
        <function-ref name="clr" scoped="" ref="0x2b08bda11640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b08bbc38740" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b08bbc38740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbc38a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbc38c18"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbc38da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbc37020"/>
        <function-ref name="get" scoped="" ref="0x2b08bbc371a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbc37330"/>
        <function-ref name="set" scoped="" ref="0x2b08bbc374b8"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbc37640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b08bbc35bd8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b08bbc35bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbc34020"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbc341a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbc34330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbc344b8"/>
        <function-ref name="get" scoped="" ref="0x2b08bbc34640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbc347c8"/>
        <function-ref name="set" scoped="" ref="0x2b08bbc34950"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbc34ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b08bbc3a500" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b08bbc3a500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbc3a850"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbc3a9d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbc3ab60"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbc3ace8"/>
        <function-ref name="get" scoped="" ref="0x2b08bbc3ae70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbc39020"/>
        <function-ref name="set" scoped="" ref="0x2b08bbc391a8"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbc39330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b08bbc378c8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b08bbc378c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbc37c18"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbc37da0"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbc36020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbc361a8"/>
        <function-ref name="get" scoped="" ref="0x2b08bbc36330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbc364b8"/>
        <function-ref name="set" scoped="" ref="0x2b08bbc36640"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbc367c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b08bbc34d60" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b08bbc34d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbc450d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbc45260"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbc453e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbc45570"/>
        <function-ref name="get" scoped="" ref="0x2b08bbc456f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbc45880"/>
        <function-ref name="set" scoped="" ref="0x2b08bbc45a08"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbc45b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b08bbc395b8" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b08bbc395b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbc39908"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbc39a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbc39c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbc39da0"/>
        <function-ref name="get" scoped="" ref="0x2b08bbc38020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbc381a8"/>
        <function-ref name="set" scoped="" ref="0x2b08bbc38330"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbc384b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b08bbc36a50" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b08bbc36a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbc36da0"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbc35020"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbc351a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbc35330"/>
        <function-ref name="get" scoped="" ref="0x2b08bbc354b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbc35640"/>
        <function-ref name="set" scoped="" ref="0x2b08bbc357c8"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbc35950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b08bbc45e18" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b08bbc45e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbc441a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbc44330"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbc444b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbc44640"/>
        <function-ref name="get" scoped="" ref="0x2b08bbc447c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbc44950"/>
        <function-ref name="set" scoped="" ref="0x2b08bbc44ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbc44c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08bdad66a8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08bdad66a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bdad69f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bdad6b80"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bdad6d08"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bdad4020"/>
        <function-ref name="get" scoped="" ref="0x2b08bdad41a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bdad4330"/>
        <function-ref name="set" scoped="" ref="0x2b08bdad44b8"/>
        <function-ref name="clr" scoped="" ref="0x2b08bdad4640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08bdad2710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08bdad2710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bdad2a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bdad2be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bdad2d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bdad1020"/>
        <function-ref name="get" scoped="" ref="0x2b08bdad11a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bdad1330"/>
        <function-ref name="set" scoped="" ref="0x2b08bdad14b8"/>
        <function-ref name="clr" scoped="" ref="0x2b08bdad1640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08bdacf710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08bdacf710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bdacfa60"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bdacfbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bdacfd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bdace020"/>
        <function-ref name="get" scoped="" ref="0x2b08bdace1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bdace330"/>
        <function-ref name="set" scoped="" ref="0x2b08bdace4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b08bdace640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08bdacc710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08bdacc710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bdacca60"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bdaccbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bdaccd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bdacb020"/>
        <function-ref name="get" scoped="" ref="0x2b08bdacb1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bdacb330"/>
        <function-ref name="set" scoped="" ref="0x2b08bdacb4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b08bdacb640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08bdac9710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08bdac9710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bdac9a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bdac9be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bdac9d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bdac8020"/>
        <function-ref name="get" scoped="" ref="0x2b08bdac81a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bdac8330"/>
        <function-ref name="set" scoped="" ref="0x2b08bdac84b8"/>
        <function-ref name="clr" scoped="" ref="0x2b08bdac8640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08bdac6710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08bdac6710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bdac6a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bdac6be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bdac6d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bdac5020"/>
        <function-ref name="get" scoped="" ref="0x2b08bdac51a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bdac5330"/>
        <function-ref name="set" scoped="" ref="0x2b08bdac54b8"/>
        <function-ref name="clr" scoped="" ref="0x2b08bdac5640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08bdac3710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08bdac3710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bdac3a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bdac3be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bdac3d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bdac2020"/>
        <function-ref name="get" scoped="" ref="0x2b08bdac21a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bdac2330"/>
        <function-ref name="set" scoped="" ref="0x2b08bdac24b8"/>
        <function-ref name="clr" scoped="" ref="0x2b08bdac2640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08bdac0710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08bdac0710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bdac0a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bdac0be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bdac0d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bdabf020"/>
        <function-ref name="get" scoped="" ref="0x2b08bdabf1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bdabf330"/>
        <function-ref name="set" scoped="" ref="0x2b08bdabf4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b08bdabf640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08bbc3d3e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08bbc3d3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbc3d730"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbc3d8b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbc3da40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbc3dbc8"/>
        <function-ref name="get" scoped="" ref="0x2b08bbc3dd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbc5c020"/>
        <function-ref name="set" scoped="" ref="0x2b08bbc5c1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbc5c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08bbc59c38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08bbc59c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbc58020"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbc581a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbc58330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbc584b8"/>
        <function-ref name="get" scoped="" ref="0x2b08bbc58640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbc587c8"/>
        <function-ref name="set" scoped="" ref="0x2b08bbc58950"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbc58ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08bbc653e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08bbc653e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbc65730"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbc658b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbc65a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbc65bc8"/>
        <function-ref name="get" scoped="" ref="0x2b08bbc65d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbc64020"/>
        <function-ref name="set" scoped="" ref="0x2b08bbc641a8"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbc64330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08bbc72c38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08bbc72c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbc71020"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbc711a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbc71330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbc714b8"/>
        <function-ref name="get" scoped="" ref="0x2b08bbc71640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbc717c8"/>
        <function-ref name="set" scoped="" ref="0x2b08bbc71950"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbc71ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08bbc6d3e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08bbc6d3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbc6d730"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbc6d8b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbc6da40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbc6dbc8"/>
        <function-ref name="get" scoped="" ref="0x2b08bbc6dd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbc6c020"/>
        <function-ref name="set" scoped="" ref="0x2b08bbc6c1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbc6c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08bbc7bc38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08bbc7bc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbc7a020"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbc7a1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbc7a330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbc7a4b8"/>
        <function-ref name="get" scoped="" ref="0x2b08bbc7a640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbc7a7c8"/>
        <function-ref name="set" scoped="" ref="0x2b08bbc7a950"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbc7aad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08bbc75480" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08bbc75480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbc757d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbc75958"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbc75ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbc75c68"/>
        <function-ref name="get" scoped="" ref="0x2b08bbc75df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbc74020"/>
        <function-ref name="set" scoped="" ref="0x2b08bbc741a8"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbc74330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08bbc85c38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08bbc85c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbc84020"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbc841a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbc84330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbc844b8"/>
        <function-ref name="get" scoped="" ref="0x2b08bbc84640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbc847c8"/>
        <function-ref name="set" scoped="" ref="0x2b08bbc84950"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbc84ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08bbc7f520" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08bbc7f520"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbc7f870"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbc7f9f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbc7fb80"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbc7fd08"/>
        <function-ref name="get" scoped="" ref="0x2b08bbc7e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbc7e1a8"/>
        <function-ref name="set" scoped="" ref="0x2b08bbc7e330"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbc7e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08bbc8fcd8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08bbc8fcd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbc8d0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbc8d228"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbc8d3b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbc8d538"/>
        <function-ref name="get" scoped="" ref="0x2b08bbc8d6c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbc8d848"/>
        <function-ref name="set" scoped="" ref="0x2b08bbc8d9d0"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbc8db58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08bbc893e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08bbc893e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbc89730"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbc898b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbc89a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbc89bc8"/>
        <function-ref name="get" scoped="" ref="0x2b08bbc89d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbc88020"/>
        <function-ref name="set" scoped="" ref="0x2b08bbc881a8"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbc88330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08bbc98c38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08bbc98c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbc97020"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbc971a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbc97330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbc974b8"/>
        <function-ref name="get" scoped="" ref="0x2b08bbc97640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbc977c8"/>
        <function-ref name="set" scoped="" ref="0x2b08bbc97950"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbc97ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08bbc933e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08bbc933e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbc93730"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbc938b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbc93a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbc93bc8"/>
        <function-ref name="get" scoped="" ref="0x2b08bbc93d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbc91020"/>
        <function-ref name="set" scoped="" ref="0x2b08bbc911a8"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbc91330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b08bbca2c38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b08bbca2c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bbca1020"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bbca11a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bbca1330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bbca14b8"/>
        <function-ref name="get" scoped="" ref="0x2b08bbca1640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bbca17c8"/>
        <function-ref name="set" scoped="" ref="0x2b08bbca1950"/>
        <function-ref name="clr" scoped="" ref="0x2b08bbca1ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b08bbce04b0" loc="61:/opt/tinyos-2.1.2/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b08bbce04b0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b08bba276f0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b08bba276f0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08bbce0800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2b08bbce0ae0" loc="62:/opt/tinyos-2.1.2/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b08bbce0ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b08bbce0e30"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b08bbcdf020"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b08bbcdf1a8"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b08bbcdf330"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b08bbcdf4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2b08bbcfd418" loc="60:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b08bbcfd418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08bbcfd768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b08bbb47c38" loc="57:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b08bbb47c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b08bbcfe020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x2b08bbcfece0" loc="59:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b08bbcfece0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08bbcfd0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x2b08bbcfe308" loc="58:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b08bbcfe308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08bbcfe658"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b08bbcfe7e0"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b08bbcfe968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b08bba221c8" loc="48:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2b08bba221c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b08bba22518"/>
        <function-ref name="runTask" scoped="" ref="0x2b08bba226a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b08bba495c8" loc="47:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b08bba495c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08bba49918"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b08bba49aa0"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b08bba49c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b08bbafcc58" loc="56:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2b08bbafcc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b08bbb09020"/>
        <function-ref name="runTask" scoped="" ref="0x2b08bbb091a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x2b08bbb06168" loc="57:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2b08bbb06168"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b08bbb064b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b08bbafdd88" loc="55:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b08bbafdd88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08bbafc170"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b08bbafc2f8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b08bbafc480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x2b08bbb21988" loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b08bbb21988"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b08bbb21cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x2b08bba48e28" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2b08bba48e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b08bbb251a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x2b08bbb223c8" loc="85:/opt/tinyos-2.1.2/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b08bbb223c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b08bbb22718"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2b08bbdcfa68" loc="47:CMCTestP.nc">
      <component-ref qname="CMCTestP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b08bbdcfa68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b08bbdcfdb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SHA1" ref="0x2b08bbe65be0" loc="63:CMCTestP.nc">
      <component-ref qname="CMCTestP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHA1" scoped="" ref="0x2b08bbe65be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SHA1"/>
      </instance>
      <interface-functions>
        <function-ref name="reset" scoped="" ref="0x2b08bbe53020"/>
        <function-ref name="update" scoped="" ref="0x2b08bbe531a8"/>
        <function-ref name="digest" scoped="" ref="0x2b08bbe53330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x2b08bbde02c0" loc="48:CMCTestP.nc">
      <component-ref qname="CMCTestP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x2b08bbde02c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b08bbde0610"/>
        <function-ref name="stopDone" scoped="" ref="0x2b08bbde0798"/>
        <function-ref name="start" scoped="" ref="0x2b08bbde0920"/>
        <function-ref name="stop" scoped="" ref="0x2b08bbde0aa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2b08bbdf9930" loc="57:CMCTestP.nc">
      <component-ref qname="CMCTestP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2b08bbdf9930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b08bbdf9c80"/>
        <function-ref name="rand32" scoped="" ref="0x2b08bbdf9e08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CMC0" ref="0x2b08bbdf1c48" loc="50:CMCTestP.nc">
      <component-ref qname="CMCTestP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CMC0" scoped="" ref="0x2b08bbdf1c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CMC"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08bbde5020"/>
        <function-ref name="init" scoped="" ref="0x2b08bbde51a8"/>
        <function-ref name="bind" scoped="" ref="0x2b08bbde5330"/>
        <function-ref name="connect" scoped="" ref="0x2b08bbde54b8"/>
        <function-ref name="recv" scoped="" ref="0x2b08bbde5640"/>
        <function-ref name="connected" scoped="" ref="0x2b08bbde57c8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08bbde5950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ECC" ref="0x2b08bbe56d48" loc="60:CMCTestP.nc">
      <component-ref qname="CMCTestP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ECC" scoped="" ref="0x2b08bbe56d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ECC"/>
      </instance>
      <interface-functions>
        <function-ref name="get_param" scoped="" ref="0x2b08bbe370d8"/>
        <function-ref name="point2octet" scoped="" ref="0x2b08bbe37260"/>
        <function-ref name="win_mul" scoped="" ref="0x2b08bbe373e8"/>
        <function-ref name="gen_private_key" scoped="" ref="0x2b08bbe37570"/>
        <function-ref name="win_mul_Z" scoped="" ref="0x2b08bbe376f8"/>
        <function-ref name="octet2point" scoped="" ref="0x2b08bbe37880"/>
        <function-ref name="init" scoped="" ref="0x2b08bbe37a08"/>
        <function-ref name="add_proj" scoped="" ref="0x2b08bbe37b90"/>
        <function-ref name="point_is_zero" scoped="" ref="0x2b08bbe37d18"/>
        <function-ref name="mul" scoped="" ref="0x2b08bbe36020"/>
        <function-ref name="dbl_proj" scoped="" ref="0x2b08bbe361a8"/>
        <function-ref name="win_mul_base" scoped="" ref="0x2b08bbe36330"/>
        <function-ref name="check_point" scoped="" ref="0x2b08bbe364b8"/>
        <function-ref name="win_precompute_Z" scoped="" ref="0x2b08bbe36740"/>
        <function-ref name="add" scoped="" ref="0x2b08bbe368c8"/>
        <function-ref name="gen_public_key" scoped="" ref="0x2b08bbe36a50"/>
        <function-ref name="win_precompute" scoped="" ref="0x2b08bbe36bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NN" ref="0x2b08bbe3c868" loc="59:CMCTestP.nc">
      <component-ref qname="CMCTestP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NN" scoped="" ref="0x2b08bbe3c868"/></type-interface>
      <instance>
        <interfacedef-ref qname="NN"/>
      </instance>
      <interface-functions>
        <function-ref name="ModSqr" scoped="" ref="0x2b08bbe3cbb8"/>
        <function-ref name="LShift" scoped="" ref="0x2b08bbe3cd40"/>
        <function-ref name="ModSmall" scoped="" ref="0x2b08bbdfa020"/>
        <function-ref name="Gcd" scoped="" ref="0x2b08bbdfa1a8"/>
        <function-ref name="ModExp" scoped="" ref="0x2b08bbdfa330"/>
        <function-ref name="ModNeg" scoped="" ref="0x2b08bbdfa4b8"/>
        <function-ref name="AddDigitMult" scoped="" ref="0x2b08bbdfa640"/>
        <function-ref name="ModBarrett" scoped="" ref="0x2b08bbdfa7c8"/>
        <function-ref name="Digits" scoped="" ref="0x2b08bbdfa950"/>
        <function-ref name="ModSub" scoped="" ref="0x2b08bbdfaad8"/>
        <function-ref name="ModDiv" scoped="" ref="0x2b08bbdfac60"/>
        <function-ref name="Cmp" scoped="" ref="0x2b08bbdfade8"/>
        <function-ref name="ModBarrettInit" scoped="" ref="0x2b08bbdf7020"/>
        <function-ref name="AssignDigit" scoped="" ref="0x2b08bbdf72a8"/>
        <function-ref name="BarrettSetBuf" scoped="" ref="0x2b08bbdf7430"/>
        <function-ref name="ModMult" scoped="" ref="0x2b08bbdf75b8"/>
        <function-ref name="Sub" scoped="" ref="0x2b08bbdf7740"/>
        <function-ref name="Mult" scoped="" ref="0x2b08bbdf78c8"/>
        <function-ref name="ModMultOpt" scoped="" ref="0x2b08bbdf7a50"/>
        <function-ref name="Assign" scoped="" ref="0x2b08bbdf7bd8"/>
        <function-ref name="Decode" scoped="" ref="0x2b08bbdf7d60"/>
        <function-ref name="Encode" scoped="" ref="0x2b08bbe3b020"/>
        <function-ref name="Assign2Exp" scoped="" ref="0x2b08bbe3b1a8"/>
        <function-ref name="Mod" scoped="" ref="0x2b08bbe3b330"/>
        <function-ref name="ModSqrRootOpt" scoped="" ref="0x2b08bbe3b4b8"/>
        <function-ref name="Div" scoped="" ref="0x2b08bbe3b840"/>
        <function-ref name="Add" scoped="" ref="0x2b08bbe3b9c8"/>
        <function-ref name="ModAdd" scoped="" ref="0x2b08bbe3bb50"/>
        <function-ref name="One" scoped="" ref="0x2b08bbe3bcd8"/>
        <function-ref name="Bits" scoped="" ref="0x2b08bbe3be60"/>
        <function-ref name="TestBit" scoped="" ref="0x2b08bbe3a020"/>
        <function-ref name="Equal" scoped="" ref="0x2b08bbe3a1a8"/>
        <function-ref name="ModSqrOpt" scoped="" ref="0x2b08bbe3a330"/>
        <function-ref name="AssignZero" scoped="" ref="0x2b08bbe3a4b8"/>
        <function-ref name="RShift" scoped="" ref="0x2b08bbe3a640"/>
        <function-ref name="ModDivOpt" scoped="" ref="0x2b08bbe3a7c8"/>
        <function-ref name="ModInv" scoped="" ref="0x2b08bbe3a950"/>
        <function-ref name="Even" scoped="" ref="0x2b08bbe3aad8"/>
        <function-ref name="Zero" scoped="" ref="0x2b08bbe3ac60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ECIES" ref="0x2b08bbe4f5a8" loc="61:CMCTestP.nc">
      <component-ref qname="CMCTestP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ECIES" scoped="" ref="0x2b08bbe4f5a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ECIES"/>
      </instance>
      <interface-functions>
        <function-ref name="decrypt" scoped="" ref="0x2b08bbe4f8f8"/>
        <function-ref name="init" scoped="" ref="0x2b08bbe4fa80"/>
        <function-ref name="encrypt" scoped="" ref="0x2b08bbe4fc08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b08bbdff4f8" loc="54:CMCTestP.nc">
      <component-ref qname="CMCTestP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b08bbdff4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08bbab6020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b08bbab6378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b08bbdfd768"/>
        <function-ref name="fired" scoped="" ref="0x2b08bbdf0e18"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b08bbdfeb78"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b08bbdfe728"/>
        <function-ref name="getdt" scoped="" ref="0x2b08bbdfc088"/>
        <function-ref name="gett0" scoped="" ref="0x2b08bbdfdbb8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b08bbdfe2d8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b08bbdf0088"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b08bbdfd198"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b08bbdf0528"/>
        <function-ref name="stop" scoped="" ref="0x2b08bbdf09c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b08bbe98e28" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="CMCTestC.Timer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b08bbe98e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08bbab6020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b08bbab6378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b08bc0560c0"/>
        <function-ref name="fired" scoped="" ref="0x2b08bc059798"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b08bc0574d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b08bc057088"/>
        <function-ref name="getdt" scoped="" ref="0x2b08bc056960"/>
        <function-ref name="gett0" scoped="" ref="0x2b08bc056510"/>
        <function-ref name="isRunning" scoped="" ref="0x2b08bc059be8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b08bc05a9e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b08bc057aa8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b08bc05ae80"/>
        <function-ref name="stop" scoped="" ref="0x2b08bc059348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b08bbeaa4e8" loc="49:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2b08bbeaa4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08bbab6020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b08bbab6378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b08bbea7768"/>
        <function-ref name="fired" scoped="" ref="0x2b08bbea9e18"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b08bbea8b78"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b08bbea8728"/>
        <function-ref name="getdt" scoped="" ref="0x2b08bbea5088"/>
        <function-ref name="gett0" scoped="" ref="0x2b08bbea7bb8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b08bbea82d8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b08bbea9088"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b08bbea7198"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b08bbea9528"/>
        <function-ref name="stop" scoped="" ref="0x2b08bbea99c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b08bbea2b68" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2b08bbea2b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08bbab6020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b08bbab6378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b08bbebad98"/>
        <function-ref name="fired" scoped="" ref="0x2b08bbe9f4d8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b08bbeba1f8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b08bbe9fd78"/>
        <function-ref name="getdt" scoped="" ref="0x2b08bbeb9688"/>
        <function-ref name="gett0" scoped="" ref="0x2b08bbeb9238"/>
        <function-ref name="isRunning" scoped="" ref="0x2b08bbe9f928"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b08bbea16f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b08bbeba7c8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b08bbea1b90"/>
        <function-ref name="stop" scoped="" ref="0x2b08bbe9f088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b08bbeb7108" loc="47:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b08bbeb7108"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08bbab6020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b08bbab6378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b08bbeb7c88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b08bbea5e38" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b08bbea5e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08bbea21c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x2b08bbec1150" loc="29:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x2b08bbec1150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08bbab6020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b08bbab6378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b08bb142608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b08bbec0020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b08bbec0930"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b08bbec04a8"/>
        <function-ref name="overflow" scoped="" ref="0x2b08bbec0db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b08bbeb4728" loc="27:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b08bbeb4728"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08bbeb4a78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x2b08bbeb1020" loc="28:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x2b08bbeb1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08bbab6020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b08bbab6378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b08bb142608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b08bbec4690"/>
        <function-ref name="fired" scoped="" ref="0x2b08bbeb06f8"/>
        <function-ref name="startAt" scoped="" ref="0x2b08bbec4088"/>
        <function-ref name="isRunning" scoped="" ref="0x2b08bbeb0b80"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b08bbec4b18"/>
        <function-ref name="start" scoped="" ref="0x2b08bbeb1d70"/>
        <function-ref name="stop" scoped="" ref="0x2b08bbeb0270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b08bbfc77c8" loc="61:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b08bbfc77c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08bbab6020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b08bbab6378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b08bb142608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b08bbfc4020"/>
        <function-ref name="fired" scoped="" ref="0x2b08bbfc5020"/>
        <function-ref name="startAt" scoped="" ref="0x2b08bbfc5930"/>
        <function-ref name="isRunning" scoped="" ref="0x2b08bbfc54a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b08bbfc44a8"/>
        <function-ref name="start" scoped="" ref="0x2b08bbfc6578"/>
        <function-ref name="stop" scoped="" ref="0x2b08bbfc6a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b08bbfc7020" loc="60:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b08bbfc7020"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2b08bba27388"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2b08bba27388"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08bbfc7370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b08bbfc4a90" loc="62:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b08bbfc4a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08bbab6020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b08bbab6378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b08bb142608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b08bbfc2828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b08bbfc1190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b08bbfc2cb0"/>
        <function-ref name="overflow" scoped="" ref="0x2b08bbfc1618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x2b08bdb930c0" loc="66:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b08bdb930c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b08bdb93410"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b08bdb93598"/>
        <function-ref name="getControlA" scoped="" ref="0x2b08bdb93720"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b08bdb938a8"/>
        <function-ref name="setControlB" scoped="" ref="0x2b08bdb93a30"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b08bdb93bb8"/>
        <function-ref name="getControlB" scoped="" ref="0x2b08bdb93d40"/>
        <function-ref name="setControlA" scoped="" ref="0x2b08bdb92020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b08bdb9e020" loc="61:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b08bdb9e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08bbab6020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b08bbab6378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b08bb142608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b08bdb9c690"/>
        <function-ref name="fired" scoped="" ref="0x2b08bdb9d6f8"/>
        <function-ref name="startAt" scoped="" ref="0x2b08bdb9c088"/>
        <function-ref name="isRunning" scoped="" ref="0x2b08bdb9db80"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b08bdb9cb18"/>
        <function-ref name="start" scoped="" ref="0x2b08bdb9ed70"/>
        <function-ref name="stop" scoped="" ref="0x2b08bdb9d270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b08bdba07b8" loc="60:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b08bdba07b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08bdba0b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b08bdb9b128" loc="62:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b08bdb9b128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08bbab6020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b08bbab6378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b08bb142608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b08bdb9be78"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b08bdb997b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b08bdb99330"/>
        <function-ref name="overflow" scoped="" ref="0x2b08bdb99c40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x2b08bdb8e510" loc="68:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2b08bdb8e510"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x2b08bdb8e860"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x2b08bdb8e9e8"/>
        <function-ref name="controlABusy" scoped="" ref="0x2b08bdb8eb70"/>
        <function-ref name="controlBBusy" scoped="" ref="0x2b08bdb8ecf8"/>
        <function-ref name="countBusy" scoped="" ref="0x2b08bdb8ee80"/>
        <function-ref name="compareABusy" scoped="" ref="0x2b08bdb8d030"/>
        <function-ref name="getAssr" scoped="" ref="0x2b08bdb8d1b8"/>
        <function-ref name="setAssr" scoped="" ref="0x2b08bdb8d340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x2b08bdb923b0" loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b08bdb923b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b08bdb90c20"/>
        <function-ref name="fired" scoped="" ref="0x2b08bdb91980"/>
        <function-ref name="get" scoped="" ref="0x2b08bdb91020"/>
        <function-ref name="reset" scoped="" ref="0x2b08bdb91e08"/>
        <function-ref name="isOn" scoped="" ref="0x2b08bdb8e0f8"/>
        <function-ref name="set" scoped="" ref="0x2b08bdb914a8"/>
        <function-ref name="start" scoped="" ref="0x2b08bdb90310"/>
        <function-ref name="stop" scoped="" ref="0x2b08bdb90798"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b08bdb98228" loc="65:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b08bdb98228"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b08bdb94310"/>
        <function-ref name="test" scoped="" ref="0x2b08bdb96998"/>
        <function-ref name="get" scoped="" ref="0x2b08bdb98da8"/>
        <function-ref name="setScale" scoped="" ref="0x2b08bdb94798"/>
        <function-ref name="getScale" scoped="" ref="0x2b08bdb94c70"/>
        <function-ref name="reset" scoped="" ref="0x2b08bdb97bd0"/>
        <function-ref name="overflow" scoped="" ref="0x2b08bdb97748"/>
        <function-ref name="isOn" scoped="" ref="0x2b08bdb96e20"/>
        <function-ref name="set" scoped="" ref="0x2b08bdb97270"/>
        <function-ref name="start" scoped="" ref="0x2b08bdb96088"/>
        <function-ref name="stop" scoped="" ref="0x2b08bdb96510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b08bbf5b3c0" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b08bbf5b3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b08bbf5b710"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b08bbf5b898"/>
        <function-ref name="getControlA" scoped="" ref="0x2b08bbf5ba20"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b08bbf5bba8"/>
        <function-ref name="setControlB" scoped="" ref="0x2b08bbf5bd30"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b08bbf5a020"/>
        <function-ref name="getControlB" scoped="" ref="0x2b08bbf5a1a8"/>
        <function-ref name="setControlA" scoped="" ref="0x2b08bbf5a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x2b08bbf569e8" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2b08bbf569e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x2b08bbf56d38"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x2b08bbf55020"/>
        <function-ref name="controlABusy" scoped="" ref="0x2b08bbf551a8"/>
        <function-ref name="controlBBusy" scoped="" ref="0x2b08bbf55330"/>
        <function-ref name="countBusy" scoped="" ref="0x2b08bbf554b8"/>
        <function-ref name="compareABusy" scoped="" ref="0x2b08bbf55640"/>
        <function-ref name="getAssr" scoped="" ref="0x2b08bbf557c8"/>
        <function-ref name="setAssr" scoped="" ref="0x2b08bbf55950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b08bbf5a7f8" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b08bbf5a7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b08bbf56020"/>
        <function-ref name="fired" scoped="" ref="0x2b08bbf59d08"/>
        <function-ref name="get" scoped="" ref="0x2b08bbf593a8"/>
        <function-ref name="reset" scoped="" ref="0x2b08bbf571f8"/>
        <function-ref name="isOn" scoped="" ref="0x2b08bbf564a8"/>
        <function-ref name="set" scoped="" ref="0x2b08bbf59830"/>
        <function-ref name="start" scoped="" ref="0x2b08bbf57680"/>
        <function-ref name="stop" scoped="" ref="0x2b08bbf57b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b08bbf42288" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b08bbf42288"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b08bbf3e4a8"/>
        <function-ref name="test" scoped="" ref="0x2b08bbf3fa40"/>
        <function-ref name="get" scoped="" ref="0x2b08bbf42e08"/>
        <function-ref name="setScale" scoped="" ref="0x2b08bbf3e930"/>
        <function-ref name="getScale" scoped="" ref="0x2b08bbf3ee08"/>
        <function-ref name="reset" scoped="" ref="0x2b08bbf41c70"/>
        <function-ref name="overflow" scoped="" ref="0x2b08bbf417e8"/>
        <function-ref name="isOn" scoped="" ref="0x2b08bbf3e020"/>
        <function-ref name="set" scoped="" ref="0x2b08bbf41310"/>
        <function-ref name="start" scoped="" ref="0x2b08bbf3f130"/>
        <function-ref name="stop" scoped="" ref="0x2b08bbf3f5b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b08bbf69020" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b08bbf69020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b08bbf69370"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b08bbf694f8"/>
        <function-ref name="getControlA" scoped="" ref="0x2b08bbf69680"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b08bbf69808"/>
        <function-ref name="setControlB" scoped="" ref="0x2b08bbf69990"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b08bbf69b18"/>
        <function-ref name="getControlB" scoped="" ref="0x2b08bbf69ca0"/>
        <function-ref name="setControlA" scoped="" ref="0x2b08bbf69e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2b08bbf65578" loc="85:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b08bbf65578"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b08bbf658c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x2b08bbf65c78" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2b08bbf65c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x2b08bbf63020"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x2b08bbf631a8"/>
        <function-ref name="controlABusy" scoped="" ref="0x2b08bbf63330"/>
        <function-ref name="controlBBusy" scoped="" ref="0x2b08bbf634b8"/>
        <function-ref name="countBusy" scoped="" ref="0x2b08bbf63640"/>
        <function-ref name="compareABusy" scoped="" ref="0x2b08bbf637c8"/>
        <function-ref name="getAssr" scoped="" ref="0x2b08bbf63950"/>
        <function-ref name="setAssr" scoped="" ref="0x2b08bbf63ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b08bbf68340" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b08bbf68340"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b08bbf66c20"/>
        <function-ref name="fired" scoped="" ref="0x2b08bbf67980"/>
        <function-ref name="get" scoped="" ref="0x2b08bbf67020"/>
        <function-ref name="reset" scoped="" ref="0x2b08bbf67e08"/>
        <function-ref name="isOn" scoped="" ref="0x2b08bbf650f8"/>
        <function-ref name="set" scoped="" ref="0x2b08bbf674a8"/>
        <function-ref name="start" scoped="" ref="0x2b08bbf66310"/>
        <function-ref name="stop" scoped="" ref="0x2b08bbf66798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b08bbf54e00" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b08bbf54e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b08bbf4d0f8"/>
        <function-ref name="test" scoped="" ref="0x2b08bbf4e798"/>
        <function-ref name="get" scoped="" ref="0x2b08bbf51a18"/>
        <function-ref name="setScale" scoped="" ref="0x2b08bbf4d580"/>
        <function-ref name="getScale" scoped="" ref="0x2b08bbf4da58"/>
        <function-ref name="reset" scoped="" ref="0x2b08bbf4f980"/>
        <function-ref name="overflow" scoped="" ref="0x2b08bbf4f4f8"/>
        <function-ref name="isOn" scoped="" ref="0x2b08bbf4ec20"/>
        <function-ref name="set" scoped="" ref="0x2b08bbf4f020"/>
        <function-ref name="start" scoped="" ref="0x2b08bbf4fe08"/>
        <function-ref name="stop" scoped="" ref="0x2b08bbf4e310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2b08bbff0020" loc="74:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x2b08bbff0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b08bbff0370"/>
        <function-ref name="runTask" scoped="" ref="0x2b08bbff04f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2b08bbff4020" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b08bbff4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08bbab6020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b08bbab6378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b08bb142608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b08bbff2690"/>
        <function-ref name="fired" scoped="" ref="0x2b08bbff36f8"/>
        <function-ref name="startAt" scoped="" ref="0x2b08bbff2088"/>
        <function-ref name="isRunning" scoped="" ref="0x2b08bbff3b80"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b08bbff2b18"/>
        <function-ref name="start" scoped="" ref="0x2b08bbff4d70"/>
        <function-ref name="stop" scoped="" ref="0x2b08bbff3270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b08bbfdad88" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b08bbfdad88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08bbab6020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b08bbab6378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b08bbff5088"/>
        <function-ref name="fired" scoped="" ref="0x2b08bbff86c8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b08bbff7470"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b08bbff7020"/>
        <function-ref name="getdt" scoped="" ref="0x2b08bbff5928"/>
        <function-ref name="gett0" scoped="" ref="0x2b08bbff54d8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b08bbff8b18"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b08bbff9908"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b08bbff7a40"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b08bbff9da8"/>
        <function-ref name="stop" scoped="" ref="0x2b08bbff8278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2b08bc04b020" loc="71:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x2b08bc04b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b08bc04b370"/>
        <function-ref name="runTask" scoped="" ref="0x2b08bc04b4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2b08bc030e80" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x2b08bc030e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08bbab6020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b08bbab6378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b08bc04c238"/>
        <function-ref name="fired" scoped="" ref="0x2b08bc02d910"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b08bc04e648"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b08bc04e1f8"/>
        <function-ref name="getdt" scoped="" ref="0x2b08bc04cad8"/>
        <function-ref name="gett0" scoped="" ref="0x2b08bc04c688"/>
        <function-ref name="isRunning" scoped="" ref="0x2b08bc02dd60"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b08bc02e9f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b08bc04ec18"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b08bc02d020"/>
        <function-ref name="stop" scoped="" ref="0x2b08bc02d4c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b08bc035af8" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b08bc035af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08bbab6020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b08bbab6378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b08bc030020"/>
        <function-ref name="fired" scoped="" ref="0x2b08bc033530"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b08bc0312d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b08bc033e10"/>
        <function-ref name="getdt" scoped="" ref="0x2b08bc030900"/>
        <function-ref name="gett0" scoped="" ref="0x2b08bc030490"/>
        <function-ref name="isRunning" scoped="" ref="0x2b08bc0339a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b08bc0346f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b08bc0318c8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b08bc034bb0"/>
        <function-ref name="stop" scoped="" ref="0x2b08bc0330c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b08bc048440" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b08bc048440"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08bbab6020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b08bbab6378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b08bc03f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b08bc03f648" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b08bc03f648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08bbab6020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b08bbab6378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b08bb142608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b08bc03e3f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b08bc03ed00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b08bc03e878"/>
        <function-ref name="overflow" scoped="" ref="0x2b08bc05e1f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b08bc052140" loc="41:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b08bc052140"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b08bc052490"/>
        <function-ref name="stopDone" scoped="" ref="0x2b08bc052618"/>
        <function-ref name="start" scoped="" ref="0x2b08bc0527a0"/>
        <function-ref name="stop" scoped="" ref="0x2b08bc052928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b08bc065270" loc="46:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2b08bc065270"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b08bbdaed78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b08bc0655c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b08bc07a698" loc="48:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b08bc07a698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08bc07a9e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b08bc07ab70"/>
        <function-ref name="getPayload" scoped="" ref="0x2b08bc07acf8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08bc07ae80"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b08bc060030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b08bc068688" loc="43:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b08bc068688"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08bc0689d8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b08bc068b60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08bc068ce8"/>
        <function-ref name="cancel" scoped="" ref="0x2b08bc068e70"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08bc050020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b08bc069d10" loc="45:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b08bc069d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08bc0670a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b08bc0a4418" loc="52:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b08bc0a4418"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b08bc0a4768"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b08bc0a48f0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b08bc0a4a78"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b08bc0a4c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b08bc0691c8" loc="44:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b08bc0691c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08bc069518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b08bc089cb0" loc="51:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b08bc089cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b08bc08d0a0"/>
        <function-ref name="noAck" scoped="" ref="0x2b08bc08d228"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b08bc08d3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b08bc09c1d8" loc="53:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2b08bc09c1d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b08bc09c528"/>
        <function-ref name="setRetries" scoped="" ref="0x2b08bc09c6b0"/>
        <function-ref name="getRetries" scoped="" ref="0x2b08bc09c838"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b08bc09c9c0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b08bc09cb48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b08bc08ec28" loc="49:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b08bc08ec28"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b08bc082020"/>
        <function-ref name="source" scoped="" ref="0x2b08bc0821a8"/>
        <function-ref name="address" scoped="" ref="0x2b08bc082330"/>
        <function-ref name="destination" scoped="" ref="0x2b08bc0824b8"/>
        <function-ref name="setSource" scoped="" ref="0x2b08bc082640"/>
        <function-ref name="setDestination" scoped="" ref="0x2b08bc0827c8"/>
        <function-ref name="type" scoped="" ref="0x2b08bc082950"/>
        <function-ref name="setType" scoped="" ref="0x2b08bc082ad8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b08bc082c60"/>
        <function-ref name="setGroup" scoped="" ref="0x2b08bc082de8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b08bc07b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x2b08bc09bc48" loc="54:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x2b08bc09bc48"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x2b08bc083020"/>
        <function-ref name="setChannel" scoped="" ref="0x2b08bc0831a8"/>
        <function-ref name="getChannel" scoped="" ref="0x2b08bc083330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMicro" ref="0x2b08bc0b68c0" loc="56:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x2b08bc0b68c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08bbab4430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b08bbab4788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b08bb142608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b08bc09dd40"/>
        <function-ref name="clear" scoped="" ref="0x2b08bc097458"/>
        <function-ref name="isValid" scoped="" ref="0x2b08bc09d660"/>
        <function-ref name="set" scoped="" ref="0x2b08bc097b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b08bc0b5758" loc="57:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b08bc0b5758"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08bbab6020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b08bbab6378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b08bb142608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b08bc0b4cc0"/>
        <function-ref name="clear" scoped="" ref="0x2b08bc0b2420"/>
        <function-ref name="isValid" scoped="" ref="0x2b08bc0b45e0"/>
        <function-ref name="set" scoped="" ref="0x2b08bc0b2b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b08bc0b1d10" loc="45:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b08bc0b1d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b08bc0ae0a0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b08bc0ae228"/>
        <function-ref name="start" scoped="" ref="0x2b08bc0ae3b0"/>
        <function-ref name="stop" scoped="" ref="0x2b08bc0ae538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x2b08bc0bc0c8" loc="66:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x2b08bc0bc0c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08bc0bb6a0"/>
        <function-ref name="get" scoped="" ref="0x2b08bc0bb190"/>
        <function-ref name="isSet" scoped="" ref="0x2b08bc0bcc48"/>
        <function-ref name="set" scoped="" ref="0x2b08bc0bbbb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b08bc0d5478" loc="71:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b08bc0d5478"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08bbab6020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b08bbab6378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b08bb142608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b08bc0d4900"/>
        <function-ref name="clear" scoped="" ref="0x2b08bc0d3020"/>
        <function-ref name="isValid" scoped="" ref="0x2b08bc0d4220"/>
        <function-ref name="set" scoped="" ref="0x2b08bc0d3700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b08bc0aa4e8" loc="50:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2b08bc0aa4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b08bbdaed78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b08bc0aa838"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b08bc0a8360" loc="56:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b08bc0a8360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08bc0a86b0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b08bc0a8838"/>
        <function-ref name="getPayload" scoped="" ref="0x2b08bc0a89c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08bc0a8b48"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b08bc0a8cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b08bc0aecb0" loc="47:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b08bc0aecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b08bbdaed78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08bc0ad0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b08bc0ad228"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08bc0ad3b0"/>
        <function-ref name="cancel" scoped="" ref="0x2b08bc0ad538"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08bc0ad6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b08bc0ac9b8" loc="49:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b08bc0ac9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b08bbdaed78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08bc0acd08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x2b08bc0c0d80" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b08bc0c0d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08bc0bd388"/>
        <function-ref name="get" scoped="" ref="0x2b08bc0bfe38"/>
        <function-ref name="isSet" scoped="" ref="0x2b08bc0bf928"/>
        <function-ref name="set" scoped="" ref="0x2b08bc0bd898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b08bc0c9020" loc="60:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b08bc0c9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b08bc0c9370"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b08bc0c94f8"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b08bc0c9680"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b08bc0c9808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b08bc0ade40" loc="48:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b08bc0ade40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b08bbdaed78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08bc0ac1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x2b08bc0d95d0" loc="70:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b08bc0d95d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08bbab4430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b08bbda3708"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b08bb142608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b08bc0d8a88"/>
        <function-ref name="clear" scoped="" ref="0x2b08bc0d7190"/>
        <function-ref name="isValid" scoped="" ref="0x2b08bc0d83a8"/>
        <function-ref name="set" scoped="" ref="0x2b08bc0d7870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x2b08bc0dc1d8" loc="69:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b08bc0dc1d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08bbab4430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b08bbda3708"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b08bc0dcd58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x2b08bc0c1930" loc="64:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b08bc0c1930"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08bc0c0020"/>
        <function-ref name="get" scoped="" ref="0x2b08bc0c69f0"/>
        <function-ref name="isSet" scoped="" ref="0x2b08bc0c64e0"/>
        <function-ref name="set" scoped="" ref="0x2b08bc0c0530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b08bc0ca658" loc="59:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b08bc0ca658"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b08bc0ca9a8"/>
        <function-ref name="noAck" scoped="" ref="0x2b08bc0cab30"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b08bc0cacb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x2b08bc0a91c8" loc="53:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x2b08bc0a91c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b08bbdaed78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08bc0a9518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b08bc0c9ab8" loc="61:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2b08bc0c9ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b08bc0c9e08"/>
        <function-ref name="setRetries" scoped="" ref="0x2b08bc0c8020"/>
        <function-ref name="getRetries" scoped="" ref="0x2b08bc0c81a8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b08bc0c8330"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b08bc0c84b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b08bc0a7020" loc="57:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b08bc0a7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b08bc0a7370"/>
        <function-ref name="source" scoped="" ref="0x2b08bc0a74f8"/>
        <function-ref name="address" scoped="" ref="0x2b08bc0a7680"/>
        <function-ref name="destination" scoped="" ref="0x2b08bc0a7808"/>
        <function-ref name="setSource" scoped="" ref="0x2b08bc0a7990"/>
        <function-ref name="setDestination" scoped="" ref="0x2b08bc0a7b18"/>
        <function-ref name="type" scoped="" ref="0x2b08bc0a7ca0"/>
        <function-ref name="setType" scoped="" ref="0x2b08bc0a7e28"/>
        <function-ref name="isForMe" scoped="" ref="0x2b08bc0ca020"/>
        <function-ref name="setGroup" scoped="" ref="0x2b08bc0ca1a8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b08bc0ca330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x2b08bc0c8780" loc="62:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x2b08bc0c8780"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x2b08bc0c8bd0"/>
        <function-ref name="setChannel" scoped="" ref="0x2b08bc0c8d58"/>
        <function-ref name="getChannel" scoped="" ref="0x2b08bc0c7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b08bc0da990" loc="67:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b08bc0da990"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b08bc0dace0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x2b08bc0a9d58" loc="54:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x2b08bc0a9d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b08bbdaed78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08bc0a80d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b08bc0d1810" loc="41:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b08bc0d1810"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b08bc0d1b60"/>
        <function-ref name="stopDone" scoped="" ref="0x2b08bc0d1ce8"/>
        <function-ref name="start" scoped="" ref="0x2b08bc0d1e70"/>
        <function-ref name="stop" scoped="" ref="0x2b08bc0ce020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x2b08bc113600" loc="80:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x2b08bc113600"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08bc112bf0"/>
        <function-ref name="get" scoped="" ref="0x2b08bc1126e0"/>
        <function-ref name="isSet" scoped="" ref="0x2b08bc1121d0"/>
        <function-ref name="set" scoped="" ref="0x2b08bc110130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Notifier" ref="0x2b08bc0e8218" loc="60:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Notifier" scoped="" ref="0x2b08bc0e8218"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b08bc0e8568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendResource" ref="0x2b08bc0e2208" loc="62:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendResource" scoped="" ref="0x2b08bc0e2208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b08bc0e2658"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b08bc0e27e0"/>
        <function-ref name="request" scoped="" ref="0x2b08bc0e2968"/>
        <function-ref name="granted" scoped="" ref="0x2b08bc0e2af0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b08bc0e2c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b08bc0cb020" loc="47:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2b08bc0cb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b08bbdaed78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b08bc0cb370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b08bc0ce798" loc="44:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b08bc0ce798"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b08bbdaed78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08bc0ceae8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b08bc0cec70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08bc0cedf8"/>
        <function-ref name="cancel" scoped="" ref="0x2b08bc0cd020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08bc0cd1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b08bc0cc498" loc="46:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b08bc0cc498"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b08bbdaed78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08bc0cc7e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x2b08bc100020" loc="64:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x2b08bc100020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x2b08bc100370"/>
        <function-ref name="address" scoped="" ref="0x2b08bc1004f8"/>
        <function-ref name="destination" scoped="" ref="0x2b08bc100680"/>
        <function-ref name="setSource" scoped="" ref="0x2b08bc100808"/>
        <function-ref name="setDestination" scoped="" ref="0x2b08bc100990"/>
        <function-ref name="pan" scoped="" ref="0x2b08bc100b18"/>
        <function-ref name="setPan" scoped="" ref="0x2b08bc100ca0"/>
        <function-ref name="isForMe" scoped="" ref="0x2b08bc100e28"/>
        <function-ref name="localPan" scoped="" ref="0x2b08bc0ff020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForIeee154Message" ref="0x2b08bc0ff3d0" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForIeee154Message" scoped="" ref="0x2b08bc0ff3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08bc0ff720"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b08bc0ff8a8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b08bc0ffa30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08bc0ffbb8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b08bc0ffd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x2b08bc0f12d0" loc="79:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b08bc0f12d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08bc0f0898"/>
        <function-ref name="get" scoped="" ref="0x2b08bc0f0388"/>
        <function-ref name="isSet" scoped="" ref="0x2b08bc0f1e50"/>
        <function-ref name="set" scoped="" ref="0x2b08bc0f0da8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b08bc0f7a18" loc="69:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b08bc0f7a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b08bc0f7d68"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b08bc0f6020"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b08bc0f61a8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b08bc0f6330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForActiveMessage" ref="0x2b08bc0eb550" loc="54:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForActiveMessage" scoped="" ref="0x2b08bc0eb550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08bc0eb8a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b08bc0eba28"/>
        <function-ref name="getPayload" scoped="" ref="0x2b08bc0ebbb0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08bc0ebd38"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b08bc0ea020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b08bc0cd928" loc="45:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b08bc0cd928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b08bbdaed78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08bc0cdc78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x2b08bc10e3f8" loc="84:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b08bc10e3f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08bbab4430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b08bbda3708"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b08bb142608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b08bc10da88"/>
        <function-ref name="clear" scoped="" ref="0x2b08bc10b190"/>
        <function-ref name="isValid" scoped="" ref="0x2b08bc10d3a8"/>
        <function-ref name="set" scoped="" ref="0x2b08bc10b870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x2b08bc10f020" loc="83:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b08bc10f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08bbab4430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b08bbda3708"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b08bc10fba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x2b08bc0f5e40" loc="78:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b08bc0f5e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08bc0f3530"/>
        <function-ref name="get" scoped="" ref="0x2b08bc0f3020"/>
        <function-ref name="isSet" scoped="" ref="0x2b08bc0f4a18"/>
        <function-ref name="set" scoped="" ref="0x2b08bc0f3a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b08bc0f70c0" loc="68:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b08bc0f70c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b08bc0f7410"/>
        <function-ref name="noAck" scoped="" ref="0x2b08bc0f7598"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b08bc0f7720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x2b08bc0e3d80" loc="58:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x2b08bc0e3d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08bc0e9170"/>
        <function-ref name="getPayload" scoped="" ref="0x2b08bc0e92f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08bc0e9480"/>
        <function-ref name="cancel" scoped="" ref="0x2b08bc0e9608"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08bc0e9790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x2b08bc0cbbe0" loc="50:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x2b08bc0cbbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b08bbdaed78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08bc0ee020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b08bc0f65e0" loc="70:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2b08bc0f65e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b08bc0f6930"/>
        <function-ref name="setRetries" scoped="" ref="0x2b08bc0f6ab8"/>
        <function-ref name="getRetries" scoped="" ref="0x2b08bc0f6c40"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b08bc0f6dc8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b08bc0f5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x2b08bc0f52e8" loc="76:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x2b08bc0f52e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x2b08bc0f5638"/>
        <function-ref name="setChannel" scoped="" ref="0x2b08bc0f57c0"/>
        <function-ref name="getChannel" scoped="" ref="0x2b08bc0f5948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b08bc0eee50" loc="53:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b08bc0eee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b08bc0ec1e8"/>
        <function-ref name="source" scoped="" ref="0x2b08bc0ec370"/>
        <function-ref name="address" scoped="" ref="0x2b08bc0ec4f8"/>
        <function-ref name="destination" scoped="" ref="0x2b08bc0ec680"/>
        <function-ref name="setSource" scoped="" ref="0x2b08bc0ec808"/>
        <function-ref name="setDestination" scoped="" ref="0x2b08bc0ec990"/>
        <function-ref name="type" scoped="" ref="0x2b08bc0ecb18"/>
        <function-ref name="setType" scoped="" ref="0x2b08bc0ecca0"/>
        <function-ref name="isForMe" scoped="" ref="0x2b08bc0ece28"/>
        <function-ref name="setGroup" scoped="" ref="0x2b08bc0eb020"/>
        <function-ref name="localGroup" scoped="" ref="0x2b08bc0eb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b08bc10a478" loc="85:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b08bc10a478"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08bbab6020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b08bbab6378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b08bb142608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b08bc109900"/>
        <function-ref name="clear" scoped="" ref="0x2b08bc107020"/>
        <function-ref name="isValid" scoped="" ref="0x2b08bc109220"/>
        <function-ref name="set" scoped="" ref="0x2b08bc107700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x2b08bc0e9af0" loc="59:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x2b08bc0e9af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08bc0e9e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b08bc110778" loc="81:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b08bc110778"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b08bc110ac8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x2b08bc0ee860" loc="51:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x2b08bc0ee860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b08bbdaed78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08bc0eebb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DummyConfig" ref="0x2b08bc14a300" loc="51:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DummyConfig" scoped="" ref="0x2b08bc14a300"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x2b08bc14a650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrafficMonitorConfig" ref="0x2b08bc139c00" loc="47:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficMonitorConfig" scoped="" ref="0x2b08bc139c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getBytes" scoped="" ref="0x2b08bc11a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageConfig" ref="0x2b08bc14c760" loc="50:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageConfig" scoped="" ref="0x2b08bc14c760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b08bc14cab0"/>
        <function-ref name="checkFrame" scoped="" ref="0x2b08bc14cc38"/>
        <function-ref name="source" scoped="" ref="0x2b08bc14cdc0"/>
        <function-ref name="destination" scoped="" ref="0x2b08bc133020"/>
        <function-ref name="setSource" scoped="" ref="0x2b08bc1331a8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b08bc133330"/>
        <function-ref name="setGroup" scoped="" ref="0x2b08bc1334b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlottedCollisionConfig" ref="0x2b08bc12e570" loc="49:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SlottedCollisionConfig" scoped="" ref="0x2b08bc12e570"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getInitialDelay" scoped="" ref="0x2b08bc12e8c0"/>
        <function-ref name="getScheduleExponent" scoped="" ref="0x2b08bc12ea48"/>
        <function-ref name="getCollisionWindowLength" scoped="" ref="0x2b08bc12ebd0"/>
        <function-ref name="getTransmitTime" scoped="" ref="0x2b08bc12ed58"/>
        <function-ref name="getCollisionWindowStart" scoped="" ref="0x2b08bc115020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x2b08bc1513f0" loc="61:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2b08bc1513f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b08bc151740"/>
        <function-ref name="wait" scoped="" ref="0x2b08bc1518c8"/>
        <function-ref name="cancel" scoped="" ref="0x2b08bc151a50"/>
        <function-ref name="isFree" scoped="" ref="0x2b08bc151bd8"/>
        <function-ref name="getNow" scoped="" ref="0x2b08bc151d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RF230Packet" ref="0x2b08bc170688" loc="62:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230Packet" scoped="" ref="0x2b08bc170688"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08bc1709d8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b08bc170b60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08bc170ce8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b08bc170e70"/>
        <function-ref name="headerLength" scoped="" ref="0x2b08bc154020"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b08bc1541a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2b08bc154730" loc="64:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b08bc154730"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08bbab4430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b08bbda3708"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b08bb142608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b08bc14fcc0"/>
        <function-ref name="clear" scoped="" ref="0x2b08bc16f420"/>
        <function-ref name="isValid" scoped="" ref="0x2b08bc14f5e0"/>
        <function-ref name="set" scoped="" ref="0x2b08bc16fb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RF230DriverConfig" ref="0x2b08bc124e48" loc="43:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230DriverConfig" scoped="" ref="0x2b08bc124e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08bc1031c0"/>
        <function-ref name="headerLength" scoped="" ref="0x2b08bc103348"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b08bc1034d0"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x2b08bc103658"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x2b08bc1037e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaConfig" ref="0x2b08bc1146c0" loc="46:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaConfig" scoped="" ref="0x2b08bc1146c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="requiresSoftwareCCA" scoped="" ref="0x2b08bc114a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareAckConfig" ref="0x2b08bc11baf0" loc="44:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0x2b08bc11baf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x2b08bc11be40"/>
        <function-ref name="createAckPacket" scoped="" ref="0x2b08bc102020"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2b08bc1021a8"/>
        <function-ref name="isAckPacket" scoped="" ref="0x2b08bc102330"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x2b08bc1024b8"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x2b08bc102640"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2b08bc1027c8"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2b08bc102950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x2b08bc1575e8" loc="60:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b08bc1575e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x2b08bc157938"/>
        <function-ref name="getDSN" scoped="" ref="0x2b08bc157ac0"/>
        <function-ref name="setFCF" scoped="" ref="0x2b08bc157c48"/>
        <function-ref name="isAckFrame" scoped="" ref="0x2b08bc157dd0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x2b08bc12d020"/>
        <function-ref name="createDataFrame" scoped="" ref="0x2b08bc12d1a8"/>
        <function-ref name="setDSN" scoped="" ref="0x2b08bc12d330"/>
        <function-ref name="createAckReply" scoped="" ref="0x2b08bc12d4b8"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x2b08bc12d640"/>
        <function-ref name="isDataFrame" scoped="" ref="0x2b08bc12d7c8"/>
        <function-ref name="getAckRequired" scoped="" ref="0x2b08bc12d950"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x2b08bc12dad8"/>
        <function-ref name="localAddr" scoped="" ref="0x2b08bc12dc60"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2b08bc14b020"/>
        <function-ref name="localPan" scoped="" ref="0x2b08bc14b1a8"/>
        <function-ref name="setDestAddr" scoped="" ref="0x2b08bc14b330"/>
        <function-ref name="createAckFrame" scoped="" ref="0x2b08bc14b4b8"/>
        <function-ref name="setFramePending" scoped="" ref="0x2b08bc14b640"/>
        <function-ref name="setDestPan" scoped="" ref="0x2b08bc14b7c8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b08bc14b950"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2b08bc14bad8"/>
        <function-ref name="getFCF" scoped="" ref="0x2b08bc14bc60"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2b08bc14bde8"/>
        <function-ref name="getDestAddr" scoped="" ref="0x2b08bc156020"/>
        <function-ref name="getFramePending" scoped="" ref="0x2b08bc1561a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UniqueConfig" ref="0x2b08bc116b40" loc="45:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x2b08bc116b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x2b08bc123020"/>
        <function-ref name="reportChannelError" scoped="" ref="0x2b08bc1231a8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x2b08bc123330"/>
        <function-ref name="getSender" scoped="" ref="0x2b08bc1234b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RandomCollisionConfig" ref="0x2b08bc1340d0" loc="48:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RandomCollisionConfig" scoped="" ref="0x2b08bc1340d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x2b08bc134420"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x2b08bc1345a8"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x2b08bc134730"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x2b08bc1348b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x2b08bc1b5910" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2b08bc1b5910"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b08bc1b5c80"/>
        <function-ref name="wait" scoped="" ref="0x2b08bc1b5e08"/>
        <function-ref name="cancel" scoped="" ref="0x2b08bc1f7020"/>
        <function-ref name="isFree" scoped="" ref="0x2b08bc1f71a8"/>
        <function-ref name="getNow" scoped="" ref="0x2b08bc1f7330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2b08bc1f7958" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b08bc1f7958"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b08bba276f0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b08bba276f0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08bbab4430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b08bbda3708"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x2b08bbda3b08"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b08bc1f4020"/>
        <function-ref name="fired" scoped="" ref="0x2b08bc1f50c0"/>
        <function-ref name="startAt" scoped="" ref="0x2b08bc1f59d0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b08bc1f5548"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b08bc1f44a8"/>
        <function-ref name="start" scoped="" ref="0x2b08bc1f6730"/>
        <function-ref name="stop" scoped="" ref="0x2b08bc1f6c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x2b08bdc3bb78" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2b08bdc3bb78"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b08bdc3a020"/>
        <function-ref name="wait" scoped="" ref="0x2b08bdc3a1a8"/>
        <function-ref name="cancel" scoped="" ref="0x2b08bdc3a330"/>
        <function-ref name="isFree" scoped="" ref="0x2b08bdc3a4b8"/>
        <function-ref name="getNow" scoped="" ref="0x2b08bdc3a640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2b08bdc3aaf8" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b08bdc3aaf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08bbab4430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b08bbda3708"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x2b08bbda3b08"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b08bdc36190"/>
        <function-ref name="fired" scoped="" ref="0x2b08bdc38230"/>
        <function-ref name="startAt" scoped="" ref="0x2b08bdc38b40"/>
        <function-ref name="isRunning" scoped="" ref="0x2b08bdc386b8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b08bdc36618"/>
        <function-ref name="start" scoped="" ref="0x2b08bdc39878"/>
        <function-ref name="stop" scoped="" ref="0x2b08bdc39d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x2b08bdc369f0" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x2b08bdc369f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x2b08bdc36d40"/>
        <function-ref name="suspend" scoped="" ref="0x2b08bdc35020"/>
        <function-ref name="resume" scoped="" ref="0x2b08bdc351a8"/>
        <function-ref name="run" scoped="" ref="0x2b08bdc35330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Tasklet" ref="0x2b08bc1da220" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/TaskletC.nc">
      <component-ref qname="TaskletC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x2b08bc1da220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x2b08bc1da570"/>
        <function-ref name="suspend" scoped="" ref="0x2b08bc1da6f8"/>
        <function-ref name="resume" scoped="" ref="0x2b08bc1da880"/>
        <function-ref name="run" scoped="" ref="0x2b08bc1daa08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b08bc2992a8" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b08bc2992a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08bc2995f8"/>
        <function-ref name="cancel" scoped="" ref="0x2b08bc299780"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08bc299908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b08bc299b90" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b08bc299b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08bc297020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b08bc29b020" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2b08bc29b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b08bbdaed78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b08bc29b390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b08bc29e578" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b08bc29e578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08bc29e8c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b08bc29ea50"/>
        <function-ref name="getPayload" scoped="" ref="0x2b08bc29ebd8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08bc29ed60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b08bc29d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b08bc29d388" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b08bc29d388"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b08bbdaed78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08bc29d6f8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b08bc29d880"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08bc29da08"/>
        <function-ref name="cancel" scoped="" ref="0x2b08bc29db90"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08bc29dd18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b08bc29c7e0" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b08bc29c7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b08bbdaed78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08bc29cb50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b08bc29a4d0" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b08bc29a4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08bc29a820"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b08bc29a9a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08bc29ab30"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b08bc29acb8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b08bc29ae40"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b08bc299020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b08bc2972a8" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b08bc2972a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b08bc2975f8"/>
        <function-ref name="checkFrame" scoped="" ref="0x2b08bc297780"/>
        <function-ref name="source" scoped="" ref="0x2b08bc297908"/>
        <function-ref name="destination" scoped="" ref="0x2b08bc297a90"/>
        <function-ref name="setSource" scoped="" ref="0x2b08bc297c18"/>
        <function-ref name="setDestination" scoped="" ref="0x2b08bc297da0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b08bc296020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b08bc29c0c8" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b08bc29c0c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b08bbdaed78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08bc29c438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x2b08bc29b738" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x2b08bc29b738"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b08bbdaed78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08bc29baa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b08bc29f020" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b08bc29f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b08bc29f370"/>
        <function-ref name="source" scoped="" ref="0x2b08bc29f4f8"/>
        <function-ref name="address" scoped="" ref="0x2b08bc29f680"/>
        <function-ref name="destination" scoped="" ref="0x2b08bc29f808"/>
        <function-ref name="setSource" scoped="" ref="0x2b08bc29f990"/>
        <function-ref name="setDestination" scoped="" ref="0x2b08bc29fb18"/>
        <function-ref name="type" scoped="" ref="0x2b08bc29fca0"/>
        <function-ref name="setType" scoped="" ref="0x2b08bc29fe28"/>
        <function-ref name="isForMe" scoped="" ref="0x2b08bc29e020"/>
        <function-ref name="setGroup" scoped="" ref="0x2b08bc29e1a8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b08bc29e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x2b08bc29be50" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x2b08bc29be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b08bbdaed78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08bc29a1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b08bdc17060" loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b08bdc17060"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08bdc173b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b08bdc18740" loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b08bdc18740"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08bdc18a90"/>
        <function-ref name="cancel" scoped="" ref="0x2b08bdc18c18"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08bdc18da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b08bdc1a388" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2b08bdc1a388"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b08bbdaed78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b08bdc1a6f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b08bdc1d888" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b08bdc1d888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08bdc1dbd8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b08bdc1dd60"/>
        <function-ref name="getPayload" scoped="" ref="0x2b08bdc1c020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08bdc1c1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b08bdc1c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b08bdc1c698" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b08bdc1c698"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b08bbdaed78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08bdc1ca08"/>
        <function-ref name="getPayload" scoped="" ref="0x2b08bdc1cb90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08bdc1cd18"/>
        <function-ref name="cancel" scoped="" ref="0x2b08bdc1b020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08bdc1b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b08bdc1bc28" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b08bdc1bc28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b08bbdaed78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08bdc1a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b08bdc1f470" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b08bdc1f470"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08bdc1f7c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b08bdc1f948"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08bdc1fad0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b08bdc1fc58"/>
        <function-ref name="headerLength" scoped="" ref="0x2b08bdc1fde0"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b08bdc1e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b08bdc17638" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b08bdc17638"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b08bdc17a88"/>
        <function-ref name="checkFrame" scoped="" ref="0x2b08bdc17c10"/>
        <function-ref name="source" scoped="" ref="0x2b08bdc17d98"/>
        <function-ref name="destination" scoped="" ref="0x2b08bdc15020"/>
        <function-ref name="setSource" scoped="" ref="0x2b08bdc151a8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b08bdc15330"/>
        <function-ref name="setGroup" scoped="" ref="0x2b08bdc154b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x2b08bdc15700" loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b08bdc15700"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2b08bdc15a50"/>
        <function-ref name="changed" scoped="" ref="0x2b08bdc15bd8"/>
        <function-ref name="amGroup" scoped="" ref="0x2b08bdc15d60"/>
        <function-ref name="setAddress" scoped="" ref="0x2b08bdc14020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b08bdc19838" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b08bdc19838"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08bdc19b88"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b08bdc19d10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08bdc18020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b08bdc181a8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b08bdc18330"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b08bdc184b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b08bdc1b510" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b08bdc1b510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b08bbdaed78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08bdc1b880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x2b08bdc1aaa0" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x2b08bdc1aaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b08bbdaed78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08bdc1ae10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b08bdc1e268" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b08bdc1e268"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b08bdc1e5b8"/>
        <function-ref name="source" scoped="" ref="0x2b08bdc1e740"/>
        <function-ref name="address" scoped="" ref="0x2b08bdc1e8c8"/>
        <function-ref name="destination" scoped="" ref="0x2b08bdc1ea50"/>
        <function-ref name="setSource" scoped="" ref="0x2b08bdc1ebd8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b08bdc1ed60"/>
        <function-ref name="type" scoped="" ref="0x2b08bdc1d020"/>
        <function-ref name="setType" scoped="" ref="0x2b08bdc1d1a8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b08bdc1d330"/>
        <function-ref name="setGroup" scoped="" ref="0x2b08bdc1d4b8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b08bdc1d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x2b08bdc191e0" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x2b08bdc191e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b08bbdaed78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08bdc19550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x2b08bc289560" loc="54:/opt/tinyos-2.1.2/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b08bc289560"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2b08bc2898b0"/>
        <function-ref name="changed" scoped="" ref="0x2b08bc289a38"/>
        <function-ref name="amGroup" scoped="" ref="0x2b08bc289bc0"/>
        <function-ref name="setAddress" scoped="" ref="0x2b08bc289d48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b08bc2bca48" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b08bc2bca48"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08bc2bcd98"/>
        <function-ref name="cancel" scoped="" ref="0x2b08bc2ad020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08bc2ad1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2b08bc2ad3f0" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b08bc2ad3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b08bc2ad740"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b08bc2ad8c8"/>
        <function-ref name="request" scoped="" ref="0x2b08bc2ada50"/>
        <function-ref name="granted" scoped="" ref="0x2b08bc2adbd8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b08bc2add60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x2b08bc2bc100" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x2b08bc2bc100"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08bc2bc450"/>
        <function-ref name="cancel" scoped="" ref="0x2b08bc2bc5d8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08bc2bc760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b08bc328020" loc="86:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b08bc328020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b08bc328390"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b08bc328518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b08bc327020" loc="89:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b08bc327020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b08bc327390"/>
        <function-ref name="configure" scoped="" ref="0x2b08bc327518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b08bc329200" loc="85:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b08bc329200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b08bc329570"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b08bc3296f8"/>
        <function-ref name="request" scoped="" ref="0x2b08bc329880"/>
        <function-ref name="granted" scoped="" ref="0x2b08bc329a08"/>
        <function-ref name="isOwner" scoped="" ref="0x2b08bc329b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b08bc328760" loc="87:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b08bc328760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b08bc328ab0"/>
        <function-ref name="userId" scoped="" ref="0x2b08bc328c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b08bdc59398" loc="44:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b08bdc59398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08bdc596e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2b08bdc59970" loc="45:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x2b08bdc59970"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b08bdc59cc0"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b08bdc59e48"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b08bdc58020"/>
        <function-ref name="dequeue" scoped="" ref="0x2b08bdc581a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b08bdc56510" loc="52:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b08bdc56510"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b08bdc56880"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b08bdc56a08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b08bdc55570" loc="56:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b08bdc55570"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b08bdc558e0"/>
        <function-ref name="configure" scoped="" ref="0x2b08bdc55a68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b08bdc55cf0" loc="57:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b08bdc55cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b08bdc530a0"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b08bdc53228"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b08bdc533b0"/>
        <function-ref name="dequeue" scoped="" ref="0x2b08bdc53538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b08bdc57720" loc="51:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b08bdc57720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b08bdc57a90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b08bdc57c18"/>
        <function-ref name="request" scoped="" ref="0x2b08bdc57da0"/>
        <function-ref name="granted" scoped="" ref="0x2b08bdc56020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b08bdc561a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b08bdc56c50" loc="53:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b08bdc56c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b08bdc55020"/>
        <function-ref name="userId" scoped="" ref="0x2b08bdc551a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2b08bdc53800" loc="69:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2b08bdc53800"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b08bdc53b50"/>
        <function-ref name="runTask" scoped="" ref="0x2b08bdc53cd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b08bc34dba0" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b08bc34dba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08bc34c020"/>
        <function-ref name="cancel" scoped="" ref="0x2b08bc34c1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08bc34c330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b08bc34c5b8" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b08bc34c5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08bc34c908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b08bc351840" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2b08bc351840"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b08bc351b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b08bc324980" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b08bc324980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08bc324cd0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b08bc324e58"/>
        <function-ref name="getPayload" scoped="" ref="0x2b08bc352020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08bc3521a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b08bc352330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x2b08bc34ed98" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b08bc34ed98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08bc34d170"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b08bc34d2f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08bc34d480"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b08bc34d608"/>
        <function-ref name="headerLength" scoped="" ref="0x2b08bc34d790"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b08bc34d918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x2b08bc351e38" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b08bc351e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x2b08bc3501c0"/>
        <function-ref name="getDSN" scoped="" ref="0x2b08bc350348"/>
        <function-ref name="setFCF" scoped="" ref="0x2b08bc3504d0"/>
        <function-ref name="isAckFrame" scoped="" ref="0x2b08bc350658"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x2b08bc3507e0"/>
        <function-ref name="createDataFrame" scoped="" ref="0x2b08bc350968"/>
        <function-ref name="setDSN" scoped="" ref="0x2b08bc350af0"/>
        <function-ref name="createAckReply" scoped="" ref="0x2b08bc350c78"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x2b08bc350e00"/>
        <function-ref name="isDataFrame" scoped="" ref="0x2b08bc34f020"/>
        <function-ref name="getAckRequired" scoped="" ref="0x2b08bc34f1a8"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x2b08bc34f330"/>
        <function-ref name="localAddr" scoped="" ref="0x2b08bc34f4b8"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2b08bc34f740"/>
        <function-ref name="localPan" scoped="" ref="0x2b08bc34f8c8"/>
        <function-ref name="setDestAddr" scoped="" ref="0x2b08bc34fa50"/>
        <function-ref name="createAckFrame" scoped="" ref="0x2b08bc34fbd8"/>
        <function-ref name="setFramePending" scoped="" ref="0x2b08bc34fd60"/>
        <function-ref name="setDestPan" scoped="" ref="0x2b08bc34e020"/>
        <function-ref name="isForMe" scoped="" ref="0x2b08bc34e1a8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2b08bc34e330"/>
        <function-ref name="getFCF" scoped="" ref="0x2b08bc34e4b8"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2b08bc34e640"/>
        <function-ref name="getDestAddr" scoped="" ref="0x2b08bc34e7c8"/>
        <function-ref name="getFramePending" scoped="" ref="0x2b08bc34e950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x2b08bc352578" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x2b08bc352578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08bc3528c8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b08bc352a50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08bc352bd8"/>
        <function-ref name="cancel" scoped="" ref="0x2b08bc352d60"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08bc351020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x2b08bc3512a8" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x2b08bc3512a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08bc3515f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b08bc39f490" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b08bc39f490"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08bc39f7e0"/>
        <function-ref name="cancel" scoped="" ref="0x2b08bc39f968"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08bc39faf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b08bc39fd78" loc="70:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b08bc39fd78"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08bc39d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x2b08bc3a2880" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x2b08bc3a2880"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08bc3a2bd0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b08bc3a2d58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08bc3a1020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b08bc3a11a8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b08bc3a1330"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b08bc3a14b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosReceive" ref="0x2b08bc3a0060" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosReceive" scoped="" ref="0x2b08bc3a0060"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08bc3a03b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b08bc39d378" loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b08bc39d378"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08bc39d6c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b08bc39d850"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08bc39d9d8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b08bc39db60"/>
        <function-ref name="headerLength" scoped="" ref="0x2b08bc39dce8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b08bc39de70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosSend" ref="0x2b08bc3a1740" loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosSend" scoped="" ref="0x2b08bc3a1740"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08bc3a1a90"/>
        <function-ref name="cancel" scoped="" ref="0x2b08bc3a1c18"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08bc3a1da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x2b08bc346838" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x2b08bc346838"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08bc346b88"/>
        <function-ref name="cancel" scoped="" ref="0x2b08bc346d10"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08bc3a2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x2b08bc3a22a8" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x2b08bc3a22a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08bc3a25f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosPacket" ref="0x2b08bc3a0638" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosPacket" scoped="" ref="0x2b08bc3a0638"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08bc3a0988"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b08bc3a0b10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08bc3a0c98"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b08bc3a0e20"/>
        <function-ref name="headerLength" scoped="" ref="0x2b08bc39f020"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b08bc39f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x2b08bc431900" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x2b08bc431900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x2b08bc431c50"/>
        <function-ref name="address" scoped="" ref="0x2b08bc431dd8"/>
        <function-ref name="destination" scoped="" ref="0x2b08bc430020"/>
        <function-ref name="setSource" scoped="" ref="0x2b08bc4301a8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b08bc430330"/>
        <function-ref name="pan" scoped="" ref="0x2b08bc4304b8"/>
        <function-ref name="setPan" scoped="" ref="0x2b08bc430640"/>
        <function-ref name="isForMe" scoped="" ref="0x2b08bc4307c8"/>
        <function-ref name="localPan" scoped="" ref="0x2b08bc430950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b08bc430b98" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b08bc430b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08bc42f020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b08bc42f1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08bc42f330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b08bc42f4b8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b08bc42f640"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b08bc42f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x2b08bc434980" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b08bc434980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x2b08bc434cd0"/>
        <function-ref name="getDSN" scoped="" ref="0x2b08bc434e58"/>
        <function-ref name="setFCF" scoped="" ref="0x2b08bc433020"/>
        <function-ref name="isAckFrame" scoped="" ref="0x2b08bc4331a8"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x2b08bc433330"/>
        <function-ref name="createDataFrame" scoped="" ref="0x2b08bc4334b8"/>
        <function-ref name="setDSN" scoped="" ref="0x2b08bc433640"/>
        <function-ref name="createAckReply" scoped="" ref="0x2b08bc4337c8"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x2b08bc433950"/>
        <function-ref name="isDataFrame" scoped="" ref="0x2b08bc433ad8"/>
        <function-ref name="getAckRequired" scoped="" ref="0x2b08bc433c60"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x2b08bc433de8"/>
        <function-ref name="localAddr" scoped="" ref="0x2b08bc432020"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2b08bc4322a8"/>
        <function-ref name="localPan" scoped="" ref="0x2b08bc432430"/>
        <function-ref name="setDestAddr" scoped="" ref="0x2b08bc4325b8"/>
        <function-ref name="createAckFrame" scoped="" ref="0x2b08bc432740"/>
        <function-ref name="setFramePending" scoped="" ref="0x2b08bc4328c8"/>
        <function-ref name="setDestPan" scoped="" ref="0x2b08bc432a50"/>
        <function-ref name="isForMe" scoped="" ref="0x2b08bc432bd8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2b08bc432d60"/>
        <function-ref name="getFCF" scoped="" ref="0x2b08bc431020"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2b08bc4311a8"/>
        <function-ref name="getDestAddr" scoped="" ref="0x2b08bc431330"/>
        <function-ref name="getFramePending" scoped="" ref="0x2b08bc4314b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b08bc42fab0" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b08bc42fab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08bc42fe00"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b08bc42e020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08bc42e1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b08bc42e330"/>
        <function-ref name="headerLength" scoped="" ref="0x2b08bc42e4b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b08bc42e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x2b08bdd15d98" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x2b08bdd15d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x2b08bdd14170"/>
        <function-ref name="address" scoped="" ref="0x2b08bdd142f8"/>
        <function-ref name="destination" scoped="" ref="0x2b08bdd14480"/>
        <function-ref name="setSource" scoped="" ref="0x2b08bdd14608"/>
        <function-ref name="setDestination" scoped="" ref="0x2b08bdd14790"/>
        <function-ref name="pan" scoped="" ref="0x2b08bdd14918"/>
        <function-ref name="setPan" scoped="" ref="0x2b08bdd14aa0"/>
        <function-ref name="isForMe" scoped="" ref="0x2b08bdd14c28"/>
        <function-ref name="localPan" scoped="" ref="0x2b08bdd14db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b08bdd13020" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b08bdd13020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08bdd13370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b08bdd134f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08bdd13680"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b08bdd13808"/>
        <function-ref name="headerLength" scoped="" ref="0x2b08bdd13990"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b08bdd13b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x2b08bdd1bd50" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b08bdd1bd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x2b08bdd170d8"/>
        <function-ref name="getDSN" scoped="" ref="0x2b08bdd17260"/>
        <function-ref name="setFCF" scoped="" ref="0x2b08bdd173e8"/>
        <function-ref name="isAckFrame" scoped="" ref="0x2b08bdd17570"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x2b08bdd176f8"/>
        <function-ref name="createDataFrame" scoped="" ref="0x2b08bdd17880"/>
        <function-ref name="setDSN" scoped="" ref="0x2b08bdd17a08"/>
        <function-ref name="createAckReply" scoped="" ref="0x2b08bdd17b90"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x2b08bdd17d18"/>
        <function-ref name="isDataFrame" scoped="" ref="0x2b08bdd16020"/>
        <function-ref name="getAckRequired" scoped="" ref="0x2b08bdd161a8"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x2b08bdd16330"/>
        <function-ref name="localAddr" scoped="" ref="0x2b08bdd164b8"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2b08bdd16740"/>
        <function-ref name="localPan" scoped="" ref="0x2b08bdd168c8"/>
        <function-ref name="setDestAddr" scoped="" ref="0x2b08bdd16a50"/>
        <function-ref name="createAckFrame" scoped="" ref="0x2b08bdd16bd8"/>
        <function-ref name="setFramePending" scoped="" ref="0x2b08bdd16d60"/>
        <function-ref name="setDestPan" scoped="" ref="0x2b08bdd15020"/>
        <function-ref name="isForMe" scoped="" ref="0x2b08bdd151a8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2b08bdd15330"/>
        <function-ref name="getFCF" scoped="" ref="0x2b08bdd154b8"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2b08bdd15640"/>
        <function-ref name="getDestAddr" scoped="" ref="0x2b08bdd157c8"/>
        <function-ref name="getFramePending" scoped="" ref="0x2b08bdd15950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x2b08bdd13dc0" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b08bdd13dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2b08bdd11170"/>
        <function-ref name="changed" scoped="" ref="0x2b08bdd112f8"/>
        <function-ref name="amGroup" scoped="" ref="0x2b08bdd11480"/>
        <function-ref name="setAddress" scoped="" ref="0x2b08bdd11608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b08bdd11890" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b08bdd11890"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08bdd11be0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b08bdd11d68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08bdd10020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b08bdd101a8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b08bdd10330"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b08bdd104b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b08bc490510" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b08bc490510"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08bc490860"/>
        <function-ref name="cancel" scoped="" ref="0x2b08bc4909e8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08bc490b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b08bc490df8" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b08bc490df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08bc48f170"/>
        <function-ref name="header" scoped="" ref="0x2b08bc48f2f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b08bc491470" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b08bc491470"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08bc4917c0"/>
        <function-ref name="cancel" scoped="" ref="0x2b08bc491948"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08bc491ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b08bc48f580" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b08bc48f580"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x2b08bc48f8d0"/>
        <function-ref name="reportChannelError" scoped="" ref="0x2b08bc48fa58"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x2b08bc48fbe0"/>
        <function-ref name="getSender" scoped="" ref="0x2b08bc48fd68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2b08bc491d18" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b08bc491d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08bc4900a0"/>
        <function-ref name="header" scoped="" ref="0x2b08bc490228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b08bdd59458" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b08bdd59458"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08bdd597a8"/>
        <function-ref name="cancel" scoped="" ref="0x2b08bdd59930"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08bdd59ab8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b08bdd59d40" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b08bdd59d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08bdd580d8"/>
        <function-ref name="header" scoped="" ref="0x2b08bdd58260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0x2b08bdd57bd8" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2b08bdd57bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08bdd56020"/>
        <function-ref name="clearAll" scoped="" ref="0x2b08bdd561a8"/>
        <function-ref name="get" scoped="" ref="0x2b08bdd56330"/>
        <function-ref name="set" scoped="" ref="0x2b08bdd564b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b08bdd5eda0" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b08bdd5eda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08bdd5b170"/>
        <function-ref name="cancel" scoped="" ref="0x2b08bdd5b2f8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08bdd5b480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0x2b08bdd57020" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x2b08bdd57020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x2b08bdd57370"/>
        <function-ref name="insertNode" scoped="" ref="0x2b08bdd574f8"/>
        <function-ref name="getNode" scoped="" ref="0x2b08bdd57680"/>
        <function-ref name="evicted" scoped="" ref="0x2b08bdd57808"/>
        <function-ref name="getIndex" scoped="" ref="0x2b08bdd57990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2b08bdd5b6c8" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b08bdd5b6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08bdd5ba18"/>
        <function-ref name="header" scoped="" ref="0x2b08bdd5bba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b08bdd5bde8" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b08bdd5bde8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08bdd59170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UniqueConfig" ref="0x2b08bdd584a8" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x2b08bdd584a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x2b08bdd587f8"/>
        <function-ref name="reportChannelError" scoped="" ref="0x2b08bdd58980"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x2b08bdd58b08"/>
        <function-ref name="getSender" scoped="" ref="0x2b08bdd58c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x2b08bc460d58" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <component-ref qname="NeighborhoodC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x2b08bc460d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x2b08bc45d0d8"/>
        <function-ref name="insertNode" scoped="" ref="0x2b08bc45d260"/>
        <function-ref name="getNode" scoped="" ref="0x2b08bc45d3e8"/>
        <function-ref name="evicted" scoped="" ref="0x2b08bc45d570"/>
        <function-ref name="getIndex" scoped="" ref="0x2b08bc45d6f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x2b08bc458b18" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2b08bc458b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08bc458e68"/>
        <function-ref name="clearAll" scoped="" ref="0x2b08bc457020"/>
        <function-ref name="get" scoped="" ref="0x2b08bc4571a8"/>
        <function-ref name="set" scoped="" ref="0x2b08bc457330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x2b08bc459850" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x2b08bc459850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x2b08bc459ba0"/>
        <function-ref name="insertNode" scoped="" ref="0x2b08bc459d28"/>
        <function-ref name="getNode" scoped="" ref="0x2b08bc458020"/>
        <function-ref name="evicted" scoped="" ref="0x2b08bc4581a8"/>
        <function-ref name="getIndex" scoped="" ref="0x2b08bc458330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b08bc459238" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b08bc459238"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08bc459588"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x2b08bdd54140" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.NeighborhoodFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2b08bdd54140"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08bdd54490"/>
        <function-ref name="clearAll" scoped="" ref="0x2b08bdd54618"/>
        <function-ref name="get" scoped="" ref="0x2b08bdd547a0"/>
        <function-ref name="set" scoped="" ref="0x2b08bdd54928"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b08bc4b3c38" loc="85:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b08bc4b3c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08bc4b2020"/>
        <function-ref name="cancel" scoped="" ref="0x2b08bc4b21a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08bc4b2330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b08bc4b25b8" loc="86:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b08bc4b25b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08bc4b2908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedPacketAcks" ref="0x2b08bc4af100" loc="93:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x2b08bc4af100"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b08bc4af450"/>
        <function-ref name="noAck" scoped="" ref="0x2b08bc4af5d8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b08bc4af760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b08bc4822e8" loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b08bc4822e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08bc482638"/>
        <function-ref name="cancel" scoped="" ref="0x2b08bc4827c0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08bc482948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b08bc4b4e20" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b08bc4b4e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08bc4b31a8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b08bc4b3330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08bc4b34b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b08bc4b3640"/>
        <function-ref name="headerLength" scoped="" ref="0x2b08bc4b37c8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b08bc4b3950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b08bc4b2b90" loc="87:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b08bc4b2b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08bc4b1020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b08bc4b11a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08bc4b1330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b08bc4b14b8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b08bc4b1640"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b08bc4b17c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UnconnectedPacketLink" ref="0x2b08bc4b0470" loc="92:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x2b08bc4b0470"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b08bc4b07c0"/>
        <function-ref name="setRetries" scoped="" ref="0x2b08bc4b0948"/>
        <function-ref name="getRetries" scoped="" ref="0x2b08bc4b0ad0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b08bc4b0c58"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b08bc4b0de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b08bc482bd0" loc="78:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b08bc482bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08bc4b4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x2b08bc4b1a10" loc="88:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b08bc4b1a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b08bc4b1d60"/>
        <function-ref name="noAck" scoped="" ref="0x2b08bc4b0020"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b08bc4b01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b08bc4b4268" loc="79:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2b08bc4b4268"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b08bc4b45b8"/>
        <function-ref name="setRetries" scoped="" ref="0x2b08bc4b4740"/>
        <function-ref name="getRetries" scoped="" ref="0x2b08bc4b48c8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b08bc4b4a50"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b08bc4b4bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b08bc4a9988" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b08bc4a9988"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b08bc4a9cd8"/>
        <function-ref name="stopDone" scoped="" ref="0x2b08bc4a9e60"/>
        <function-ref name="start" scoped="" ref="0x2b08bc4c9020"/>
        <function-ref name="stop" scoped="" ref="0x2b08bc4c91a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b08bc4c65c8" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b08bc4c65c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08bc4c6918"/>
        <function-ref name="cancel" scoped="" ref="0x2b08bc4c6aa0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08bc4c6c28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b08bc4c4020" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b08bc4c4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08bc4c4370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b08bc4c9430" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b08bc4c9430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08bc4c9780"/>
        <function-ref name="cancel" scoped="" ref="0x2b08bc4c9908"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08bc4c9a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b08bc4c82e8" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b08bc4c82e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08bc4c8638"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b08bc4c87c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08bc4c8948"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b08bc4c8ad0"/>
        <function-ref name="headerLength" scoped="" ref="0x2b08bc4c8c58"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b08bc4c8de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b08bc4c7060" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b08bc4c7060"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b08bc4c73b0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b08bc4c7538"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b08bc4c76c0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b08bc4c7848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2b08bc4c7b30" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x2b08bc4c7b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b08bc4c7e80"/>
        <function-ref name="stopDone" scoped="" ref="0x2b08bc4c6030"/>
        <function-ref name="start" scoped="" ref="0x2b08bc4c61b8"/>
        <function-ref name="stop" scoped="" ref="0x2b08bc4c6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b08bc4c9d18" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b08bc4c9d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08bc4c80a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b08bc4c45f8" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b08bc4c45f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08bc4c4948"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b08bc4c4ad0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08bc4c4c58"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b08bc4c4de0"/>
        <function-ref name="headerLength" scoped="" ref="0x2b08bc4c3020"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b08bc4c31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b08bdd31458" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b08bdd31458"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b08bdd317a8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b08bdd31930"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b08bdd31ab8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b08bdd31c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b08bc52c270" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b08bc52c270"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b08bc52c5c0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b08bc52c748"/>
        <function-ref name="start" scoped="" ref="0x2b08bc52c8d0"/>
        <function-ref name="stop" scoped="" ref="0x2b08bc52ca58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x2b08bc5295d8" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2b08bc5295d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2b08bc529928"/>
        <function-ref name="turnOn" scoped="" ref="0x2b08bc529ab0"/>
        <function-ref name="setChannel" scoped="" ref="0x2b08bc529c38"/>
        <function-ref name="done" scoped="" ref="0x2b08bc529dc0"/>
        <function-ref name="standby" scoped="" ref="0x2b08bc528020"/>
        <function-ref name="getChannel" scoped="" ref="0x2b08bc5281a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b08bc52cce0" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b08bc52cce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08bc52a0a0"/>
        <function-ref name="cancel" scoped="" ref="0x2b08bc52a228"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08bc52a3b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x2b08bc528c98" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b08bc528c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08bc527020"/>
        <function-ref name="header" scoped="" ref="0x2b08bc5271a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b08bc52a638" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b08bc52a638"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08bc52a988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x2b08bc5283f0" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2b08bc5283f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08bc528740"/>
        <function-ref name="ready" scoped="" ref="0x2b08bc5288c8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08bc528a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x2b08bc52abd0" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x2b08bc52abd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x2b08bc529020"/>
        <function-ref name="setChannel" scoped="" ref="0x2b08bc5291a8"/>
        <function-ref name="getChannel" scoped="" ref="0x2b08bc529330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b08bddc0870" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b08bddc0870"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b08bddc0bc0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b08bddc0d48"/>
        <function-ref name="start" scoped="" ref="0x2b08bddbf020"/>
        <function-ref name="stop" scoped="" ref="0x2b08bddbf1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x2b08bddbf430" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b08bddbf430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08bddbf780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x2b08bddbd450" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2b08bddbd450"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2b08bddbd7a0"/>
        <function-ref name="turnOn" scoped="" ref="0x2b08bddbd928"/>
        <function-ref name="setChannel" scoped="" ref="0x2b08bddbdab0"/>
        <function-ref name="done" scoped="" ref="0x2b08bddbdc38"/>
        <function-ref name="standby" scoped="" ref="0x2b08bddbddc0"/>
        <function-ref name="getChannel" scoped="" ref="0x2b08bddbc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b08bddbfa08" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b08bddbfa08"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08bddbfd58"/>
        <function-ref name="cancel" scoped="" ref="0x2b08bddbe020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08bddbe1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x2b08bddb94f0" loc="189:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x2b08bddb94f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b08bddb9840"/>
        <function-ref name="runTask" scoped="" ref="0x2b08bddb99c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x2b08bddbb578" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b08bddbb578"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08bddbb8c8"/>
        <function-ref name="header" scoped="" ref="0x2b08bddbba50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stateDoneTask" ref="0x2b08bddb9c90" loc="144:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stateDoneTask" scoped="" ref="0x2b08bddb9c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b08bddb8020"/>
        <function-ref name="runTask" scoped="" ref="0x2b08bddb81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b08bddbe430" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b08bddbe430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08bddbe780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="deliverTask" ref="0x2b08bddbbd18" loc="322:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="deliverTask" scoped="" ref="0x2b08bddbbd18"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b08bddb90a0"/>
        <function-ref name="runTask" scoped="" ref="0x2b08bddb9228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x2b08bddbcc98" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2b08bddbcc98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08bddbb020"/>
        <function-ref name="ready" scoped="" ref="0x2b08bddbb1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08bddbb330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x2b08bddbe9c8" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x2b08bddbe9c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x2b08bddbed18"/>
        <function-ref name="setChannel" scoped="" ref="0x2b08bddbd020"/>
        <function-ref name="getChannel" scoped="" ref="0x2b08bddbd1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x2b08bddbc268" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x2b08bddbc268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x2b08bddbc5b8"/>
        <function-ref name="suspend" scoped="" ref="0x2b08bddbc740"/>
        <function-ref name="resume" scoped="" ref="0x2b08bddbc8c8"/>
        <function-ref name="run" scoped="" ref="0x2b08bddbca50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b08bc579a28" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b08bc579a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08bc579d78"/>
        <function-ref name="ready" scoped="" ref="0x2b08bc578020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08bc5781a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b08bc578430" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b08bc578430"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08bc578780"/>
        <function-ref name="header" scoped="" ref="0x2b08bc578908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x2b08bc578b50" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2b08bc578b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b08bc576020"/>
        <function-ref name="wait" scoped="" ref="0x2b08bc5761a8"/>
        <function-ref name="cancel" scoped="" ref="0x2b08bc576330"/>
        <function-ref name="isFree" scoped="" ref="0x2b08bc5764b8"/>
        <function-ref name="getNow" scoped="" ref="0x2b08bc576640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b08bc5768c8" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b08bc5768c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x2b08bc576c18"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x2b08bc576da0"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x2b08bc575020"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x2b08bc5751a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2b08bc579268" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b08bc579268"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08bc5795b8"/>
        <function-ref name="header" scoped="" ref="0x2b08bc579740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2b08bc589988" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2b08bc589988"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08bc589cd8"/>
        <function-ref name="ready" scoped="" ref="0x2b08bc589e60"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08bc579020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b08bdd82d38" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b08bdd82d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08bdd810d8"/>
        <function-ref name="ready" scoped="" ref="0x2b08bdd81260"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08bdd813e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b08bdd81670" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b08bdd81670"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08bdd819c0"/>
        <function-ref name="header" scoped="" ref="0x2b08bdd81b48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x2b08bdd81d90" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2b08bdd81d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b08bdd80170"/>
        <function-ref name="wait" scoped="" ref="0x2b08bdd802f8"/>
        <function-ref name="cancel" scoped="" ref="0x2b08bdd80480"/>
        <function-ref name="isFree" scoped="" ref="0x2b08bdd80608"/>
        <function-ref name="getNow" scoped="" ref="0x2b08bdd80790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2b08bdd809d8" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2b08bdd809d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b08bdd80d28"/>
        <function-ref name="rand32" scoped="" ref="0x2b08bdd7f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b08bdd7f2a8" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b08bdd7f2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x2b08bdd7f5f8"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x2b08bdd7f780"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x2b08bdd7f908"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x2b08bdd7fa90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2b08bdd82578" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b08bdd82578"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08bdd828c8"/>
        <function-ref name="header" scoped="" ref="0x2b08bdd82a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2b08bdd84b58" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2b08bdd84b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08bdd82020"/>
        <function-ref name="ready" scoped="" ref="0x2b08bdd821a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08bdd82330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="calcNextRandom" ref="0x2b08bdd7fd58" loc="78:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="calcNextRandom" scoped="" ref="0x2b08bdd7fd58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b08bdd7e0d8"/>
        <function-ref name="runTask" scoped="" ref="0x2b08bdd7e260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2b08bc555080" loc="46:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2b08bc555080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b08bc5553d0"/>
        <function-ref name="rand32" scoped="" ref="0x2b08bc555558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2b08bc558020" loc="45:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x2b08bc558020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08bc558b68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b08bc5592b0" loc="44:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b08bc5592b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08bc559600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2b08bc586020" loc="48:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2b08bc586020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b08bc586370"/>
        <function-ref name="rand32" scoped="" ref="0x2b08bc5864f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2b08bc588e48" loc="47:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x2b08bc588e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08bc5879e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b08bc5885f0" loc="46:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b08bc5885f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08bc588940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b08bc5b6d38" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b08bc5b6d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08bc5b50d8"/>
        <function-ref name="ready" scoped="" ref="0x2b08bc5b5260"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08bc5b53e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b08bc5b5670" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b08bc5b5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08bc5b59c0"/>
        <function-ref name="header" scoped="" ref="0x2b08bc5b5b48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x2b08bc5b5d90" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2b08bc5b5d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b08bc5b4170"/>
        <function-ref name="wait" scoped="" ref="0x2b08bc5b42f8"/>
        <function-ref name="cancel" scoped="" ref="0x2b08bc5b4480"/>
        <function-ref name="isFree" scoped="" ref="0x2b08bc5b4608"/>
        <function-ref name="getNow" scoped="" ref="0x2b08bc5b4790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AckReceivedFlag" ref="0x2b08bc5b3bd8" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AckReceivedFlag" scoped="" ref="0x2b08bc5b3bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08bc5b2020"/>
        <function-ref name="get" scoped="" ref="0x2b08bc5b21a8"/>
        <function-ref name="setValue" scoped="" ref="0x2b08bc5b2330"/>
        <function-ref name="set" scoped="" ref="0x2b08bc5b24b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b08bc5b4a18" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b08bc5b4a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x2b08bc5b4d68"/>
        <function-ref name="createAckPacket" scoped="" ref="0x2b08bc5b3020"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2b08bc5b31a8"/>
        <function-ref name="isAckPacket" scoped="" ref="0x2b08bc5b3330"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x2b08bc5b34b8"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x2b08bc5b3640"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2b08bc5b37c8"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2b08bc5b3950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2b08bc571b50" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b08bc571b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08bc5b6020"/>
        <function-ref name="header" scoped="" ref="0x2b08bc5b61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2b08bc5712a8" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2b08bc5712a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08bc5715f8"/>
        <function-ref name="ready" scoped="" ref="0x2b08bc571780"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08bc571908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b08bc5b63f0" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b08bc5b63f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b08bc5b6740"/>
        <function-ref name="noAck" scoped="" ref="0x2b08bc5b68c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b08bc5b6a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b08bc5d2978" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b08bc5d2978"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b08bc5d2cc8"/>
        <function-ref name="stopDone" scoped="" ref="0x2b08bc5d2e50"/>
        <function-ref name="start" scoped="" ref="0x2b08bc5d1020"/>
        <function-ref name="stop" scoped="" ref="0x2b08bc5d11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x2b08bc5ce020" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x2b08bc5ce020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2b08bc5ce370"/>
        <function-ref name="request" scoped="" ref="0x2b08bc5ce4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b08bc5c95b8" loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b08bc5c95b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08bc5c9908"/>
        <function-ref name="ready" scoped="" ref="0x2b08bc5c9a90"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08bc5c9c18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b08bc5c8020" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b08bc5c8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08bc5c8370"/>
        <function-ref name="header" scoped="" ref="0x2b08bc5c84f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x2b08bc5d0268" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2b08bc5d0268"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2b08bc5d05b8"/>
        <function-ref name="turnOn" scoped="" ref="0x2b08bc5d0740"/>
        <function-ref name="setChannel" scoped="" ref="0x2b08bc5d08c8"/>
        <function-ref name="done" scoped="" ref="0x2b08bc5d0a50"/>
        <function-ref name="standby" scoped="" ref="0x2b08bc5d0bd8"/>
        <function-ref name="getChannel" scoped="" ref="0x2b08bc5d0d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b08bc5ce740" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b08bc5ce740"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08bc5cea90"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b08bc5cec18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08bc5ceda0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b08bc5cd020"/>
        <function-ref name="headerLength" scoped="" ref="0x2b08bc5cd1a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b08bc5cd330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x2b08bc5ca638" loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x2b08bc5ca638"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2b08bc5caa88"/>
        <function-ref name="turnOn" scoped="" ref="0x2b08bc5cac10"/>
        <function-ref name="setChannel" scoped="" ref="0x2b08bc5cad98"/>
        <function-ref name="done" scoped="" ref="0x2b08bc5c9020"/>
        <function-ref name="standby" scoped="" ref="0x2b08bc5c91a8"/>
        <function-ref name="getChannel" scoped="" ref="0x2b08bc5c9330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x2b08bc5cd5b8" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x2b08bc5cd5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x2b08bc5cd908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2b08bc5cf8c8" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b08bc5cf8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08bc5cfc18"/>
        <function-ref name="header" scoped="" ref="0x2b08bc5cfda0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x2b08bc5ca060" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x2b08bc5ca060"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08bc5ca3b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2b08bc5cdbf0" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x2b08bc5cdbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b08bc5cc020"/>
        <function-ref name="stopDone" scoped="" ref="0x2b08bc5cc1a8"/>
        <function-ref name="start" scoped="" ref="0x2b08bc5cc330"/>
        <function-ref name="stop" scoped="" ref="0x2b08bc5cc4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b08bc5c7020" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b08bc5c7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08bc5c7370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b08bc5c74f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08bc5c7680"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b08bc5c7808"/>
        <function-ref name="headerLength" scoped="" ref="0x2b08bc5c7990"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b08bc5c7b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x2b08bc5d1c98" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x2b08bc5d1c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08bc5d0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b08bc5c7da0" loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b08bc5c7da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x2b08bc5c6170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x2b08bc5cc740" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x2b08bc5cc740"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08bc5cca90"/>
        <function-ref name="cancel" scoped="" ref="0x2b08bc5ccc18"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08bc5ccda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2b08bc5cf020" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2b08bc5cf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08bc5cf370"/>
        <function-ref name="ready" scoped="" ref="0x2b08bc5cf4f8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08bc5cf680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x2b08bc5c8780" loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x2b08bc5c8780"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2b08bc5c8ad0"/>
        <function-ref name="request" scoped="" ref="0x2b08bc5c8c58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x2b08bc5d13f0" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x2b08bc5d13f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08bc5d1740"/>
        <function-ref name="cancel" scoped="" ref="0x2b08bc5d18c8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08bc5d1a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x2b08bc6498c8" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x2b08bc6498c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08bc649c18"/>
        <function-ref name="get" scoped="" ref="0x2b08bc649da0"/>
        <function-ref name="setValue" scoped="" ref="0x2b08bc648020"/>
        <function-ref name="set" scoped="" ref="0x2b08bc6481a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b08bc64d9f8" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b08bc64d9f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08bc64dd48"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b08bc64b020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08bc64b1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b08bc64b330"/>
        <function-ref name="headerLength" scoped="" ref="0x2b08bc64b4b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b08bc64b640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b08bc64a9f0" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b08bc64a9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08bc64ad40"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b08bc649020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08bc6491a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b08bc649330"/>
        <function-ref name="headerLength" scoped="" ref="0x2b08bc6494b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b08bc649640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x2b08bc64f020" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b08bc64f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08bbab4430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b08bbda3708"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b08bb142608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b08bc64e478"/>
        <function-ref name="clear" scoped="" ref="0x2b08bc64eb58"/>
        <function-ref name="isValid" scoped="" ref="0x2b08bc64fd70"/>
        <function-ref name="set" scoped="" ref="0x2b08bc64d278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x2b08bc64ba30" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b08bc64ba30"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08bbab4430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b08bbda3708"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b08bc64a5d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b08bc619270" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b08bc619270"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08bbab6020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b08bbab6378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b08bb142608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b08bc618700"/>
        <function-ref name="clear" scoped="" ref="0x2b08bc618de0"/>
        <function-ref name="isValid" scoped="" ref="0x2b08bc618020"/>
        <function-ref name="set" scoped="" ref="0x2b08bc6504f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x2b08bddc8e00" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x2b08bddc8e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08bddc71a8"/>
        <function-ref name="get" scoped="" ref="0x2b08bddc7330"/>
        <function-ref name="setValue" scoped="" ref="0x2b08bddc74b8"/>
        <function-ref name="set" scoped="" ref="0x2b08bddc7640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b08bddc8020" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b08bddc8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08bddc8370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b08bddc84f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08bddc8680"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b08bddc8808"/>
        <function-ref name="headerLength" scoped="" ref="0x2b08bddc8990"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b08bddc8b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b08bde5daa8" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b08bde5daa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08bde5ddf8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b08bde5c020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08bde5c1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b08bde5c330"/>
        <function-ref name="headerLength" scoped="" ref="0x2b08bde5c4b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b08bde5c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x2b08bddcc558" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b08bddcc558"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08bbab4430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b08bbda3708"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b08bb142608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b08bddcba88"/>
        <function-ref name="clear" scoped="" ref="0x2b08bddc9190"/>
        <function-ref name="isValid" scoped="" ref="0x2b08bddcb3a8"/>
        <function-ref name="set" scoped="" ref="0x2b08bddc9870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x2b08bddc79d0" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b08bddc79d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08bbab4430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b08bbda3708"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b08bde5f598"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x2b08bde5fab8" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x2b08bde5fab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08bbab6020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b08bbab6378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b08bde5d690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b08bddcf888" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b08bddcf888"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08bbab6020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b08bbab6378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b08bb142608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b08bddced40"/>
        <function-ref name="clear" scoped="" ref="0x2b08bddcd458"/>
        <function-ref name="isValid" scoped="" ref="0x2b08bddce660"/>
        <function-ref name="set" scoped="" ref="0x2b08bddcdb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b08bc621dc0" loc="20:/opt/tinyos-2.1.2/tos/system/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b08bc621dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08bbab6020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b08bbab6378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b08bc61c968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b08bc65f0e0" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b08bc65f0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08bc65f430"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b08bc65f5b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08bc65f740"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b08bc65f8c8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b08bc65fa50"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b08bc65fbd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b08bc65e020" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b08bc65e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08bc65e370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b08bc65e4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08bc65e680"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b08bc65e808"/>
        <function-ref name="headerLength" scoped="" ref="0x2b08bc65e990"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b08bc65eb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0x2b08bc643660" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0x2b08bc643660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08bc6439d0"/>
        <function-ref name="get" scoped="" ref="0x2b08bc643b58"/>
        <function-ref name="setValue" scoped="" ref="0x2b08bc643ce0"/>
        <function-ref name="set" scoped="" ref="0x2b08bc643e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b08bc65cb78" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b08bc65cb78"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b08bc65a020"/>
        <function-ref name="stopDone" scoped="" ref="0x2b08bc65a1a8"/>
        <function-ref name="start" scoped="" ref="0x2b08bc65a330"/>
        <function-ref name="stop" scoped="" ref="0x2b08bc65a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x2b08bc6573f0" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x2b08bc6573f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2b08bc657740"/>
        <function-ref name="request" scoped="" ref="0x2b08bc6578c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b08bc6528c8" loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b08bc6528c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08bc652c18"/>
        <function-ref name="ready" scoped="" ref="0x2b08bc652da0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08bc651020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b08bc6512a8" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b08bc6512a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08bc6515f8"/>
        <function-ref name="header" scoped="" ref="0x2b08bc651780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x2b08bc6595b8" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2b08bc6595b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2b08bc659908"/>
        <function-ref name="turnOn" scoped="" ref="0x2b08bc659a90"/>
        <function-ref name="setChannel" scoped="" ref="0x2b08bc659c18"/>
        <function-ref name="done" scoped="" ref="0x2b08bc659da0"/>
        <function-ref name="standby" scoped="" ref="0x2b08bc658020"/>
        <function-ref name="getChannel" scoped="" ref="0x2b08bc6581a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b08bc657b10" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b08bc657b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08bc657e60"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b08bc656020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08bc6561a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b08bc656330"/>
        <function-ref name="headerLength" scoped="" ref="0x2b08bc6564b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b08bc656640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x2b08bc654a08" loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x2b08bc654a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2b08bc654e58"/>
        <function-ref name="turnOn" scoped="" ref="0x2b08bc652020"/>
        <function-ref name="setChannel" scoped="" ref="0x2b08bc6521a8"/>
        <function-ref name="done" scoped="" ref="0x2b08bc652330"/>
        <function-ref name="standby" scoped="" ref="0x2b08bc6524b8"/>
        <function-ref name="getChannel" scoped="" ref="0x2b08bc652640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x2b08bc6568c8" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x2b08bc6568c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x2b08bc656c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2b08bc658c98" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b08bc658c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08bc657020"/>
        <function-ref name="header" scoped="" ref="0x2b08bc6571a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x2b08bc654430" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x2b08bc654430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08bc654780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2b08bc655020" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x2b08bc655020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b08bc655370"/>
        <function-ref name="stopDone" scoped="" ref="0x2b08bc6554f8"/>
        <function-ref name="start" scoped="" ref="0x2b08bc655680"/>
        <function-ref name="stop" scoped="" ref="0x2b08bc655808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b08bc68a2a8" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b08bc68a2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08bc68a5f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b08bc68a780"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08bc68a908"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b08bc68aa90"/>
        <function-ref name="headerLength" scoped="" ref="0x2b08bc68ac18"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b08bc68ada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x2b08bc659020" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x2b08bc659020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08bc659370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b08bc689060" loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b08bc689060"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x2b08bc6893b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x2b08bc655a90" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x2b08bc655a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08bc655de0"/>
        <function-ref name="cancel" scoped="" ref="0x2b08bc654020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08bc6541a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2b08bc6583f0" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2b08bc6583f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08bc658740"/>
        <function-ref name="ready" scoped="" ref="0x2b08bc6588c8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08bc658a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x2b08bc651a08" loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x2b08bc651a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2b08bc651d58"/>
        <function-ref name="request" scoped="" ref="0x2b08bc68a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x2b08bc65a700" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x2b08bc65a700"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08bc65aa50"/>
        <function-ref name="cancel" scoped="" ref="0x2b08bc65abd8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08bc65ad60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x2b08bc681448" loc="45:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x2b08bc681448"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2b08bc681798"/>
        <function-ref name="request" scoped="" ref="0x2b08bc681920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x2b08bc67c0c8" loc="49:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x2b08bc67c0c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08bc67b6a0"/>
        <function-ref name="get" scoped="" ref="0x2b08bc67b190"/>
        <function-ref name="isSet" scoped="" ref="0x2b08bc67cc48"/>
        <function-ref name="set" scoped="" ref="0x2b08bc67bbb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x2b08bc6a2020" loc="64:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x2b08bc6a2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08bc6a2370"/>
        <function-ref name="get" scoped="" ref="0x2b08bc6a24f8"/>
        <function-ref name="setValue" scoped="" ref="0x2b08bc6a2680"/>
        <function-ref name="set" scoped="" ref="0x2b08bc6a2808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2b08bc6a7730" loc="61:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b08bc6a7730"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08bbab4430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b08bbda3708"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b08bb142608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b08bc6a6c58"/>
        <function-ref name="clear" scoped="" ref="0x2b08bc6a4380"/>
        <function-ref name="isValid" scoped="" ref="0x2b08bc6a6578"/>
        <function-ref name="set" scoped="" ref="0x2b08bc6a4a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x2b08bc6853e0" loc="42:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2b08bc6853e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2b08bc685730"/>
        <function-ref name="turnOn" scoped="" ref="0x2b08bc6858b8"/>
        <function-ref name="setChannel" scoped="" ref="0x2b08bc685a40"/>
        <function-ref name="done" scoped="" ref="0x2b08bc685bc8"/>
        <function-ref name="standby" scoped="" ref="0x2b08bc685d50"/>
        <function-ref name="getChannel" scoped="" ref="0x2b08bc682020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x2b08bc6a1768" loc="66:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2b08bc6a1768"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b08bc6a1ab8"/>
        <function-ref name="wait" scoped="" ref="0x2b08bc6a1c40"/>
        <function-ref name="cancel" scoped="" ref="0x2b08bc6a1dc8"/>
        <function-ref name="isFree" scoped="" ref="0x2b08bc6a0020"/>
        <function-ref name="getNow" scoped="" ref="0x2b08bc6a01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x2b08bc680cd0" loc="48:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b08bc680cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08bc67d388"/>
        <function-ref name="get" scoped="" ref="0x2b08bc67fe00"/>
        <function-ref name="isSet" scoped="" ref="0x2b08bc67f8f0"/>
        <function-ref name="set" scoped="" ref="0x2b08bc67d898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b08bc681bd8" loc="46:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b08bc681bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08bc680020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b08bc6801a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08bc680330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b08bc6804b8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b08bc680640"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b08bc6807c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b08bc6a85c8" loc="60:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b08bc6a85c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08bc6a8a18"/>
        <function-ref name="headerLength" scoped="" ref="0x2b08bc6a8ba0"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b08bc6a8d28"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x2b08bc6a7020"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x2b08bc6a71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2b08bc682bf0" loc="44:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b08bc682bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08bc681020"/>
        <function-ref name="header" scoped="" ref="0x2b08bc6811a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b08bc6714b8" loc="55:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b08bc6714b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08bbab4430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b08bbda3708"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x2b08bbda3b08"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b08bc66eb18"/>
        <function-ref name="fired" scoped="" ref="0x2b08bc670b90"/>
        <function-ref name="startAt" scoped="" ref="0x2b08bc66e510"/>
        <function-ref name="isRunning" scoped="" ref="0x2b08bc66e088"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b08bc6a8020"/>
        <function-ref name="start" scoped="" ref="0x2b08bc670230"/>
        <function-ref name="stop" scoped="" ref="0x2b08bc670708"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2b08bc679458" loc="50:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b08bc679458"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08bc678a40"/>
        <function-ref name="get" scoped="" ref="0x2b08bc678530"/>
        <function-ref name="isSet" scoped="" ref="0x2b08bc678020"/>
        <function-ref name="set" scoped="" ref="0x2b08bc676020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x2b08bc672220" loc="54:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b08bc672220"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08bbab4430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b08bbda3708"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b08bc672da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2b08bc6822c8" loc="43:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2b08bc6822c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08bc682618"/>
        <function-ref name="ready" scoped="" ref="0x2b08bc6827a0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08bc682928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x2b08bc676860" loc="51:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b08bc676860"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08bc675e30"/>
        <function-ref name="get" scoped="" ref="0x2b08bc675920"/>
        <function-ref name="isSet" scoped="" ref="0x2b08bc675410"/>
        <function-ref name="set" scoped="" ref="0x2b08bc673388"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x2b08bc6a2b78" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x2b08bc6a2b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08bc6a1020"/>
        <function-ref name="get" scoped="" ref="0x2b08bc6a11a8"/>
        <function-ref name="setValue" scoped="" ref="0x2b08bc6a1330"/>
        <function-ref name="set" scoped="" ref="0x2b08bc6a14b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x2b08bc6a3378" loc="63:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x2b08bc6a3378"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08bc6a36c8"/>
        <function-ref name="get" scoped="" ref="0x2b08bc6a3850"/>
        <function-ref name="setValue" scoped="" ref="0x2b08bc6a39d8"/>
        <function-ref name="set" scoped="" ref="0x2b08bc6a3b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b08bc6739d0" loc="52:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b08bc6739d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b08bc673d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x2b08bc6972c0" loc="52:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x2b08bc6972c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2b08bc697610"/>
        <function-ref name="request" scoped="" ref="0x2b08bc697798"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x2b08bc6b4c60" loc="74:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x2b08bc6b4c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08bbab4430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b08bbab4788"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2b08bc6b99f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x2b08bc692020" loc="56:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x2b08bc692020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08bc690608"/>
        <function-ref name="get" scoped="" ref="0x2b08bc6900f8"/>
        <function-ref name="isSet" scoped="" ref="0x2b08bc692ba0"/>
        <function-ref name="set" scoped="" ref="0x2b08bc690b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x2b08bc6b2988" loc="80:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x2b08bc6b2988"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08bc6b2cd8"/>
        <function-ref name="get" scoped="" ref="0x2b08bc6b2e60"/>
        <function-ref name="setValue" scoped="" ref="0x2b08bc6b1020"/>
        <function-ref name="set" scoped="" ref="0x2b08bc6b11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x2b08bc69abf0" loc="47:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b08bc69abf0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b08bba276f0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b08bba276f0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08bc699020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2b08bc6af2b0" loc="83:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b08bc6af2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08bbab4430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b08bbda3708"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b08bb142608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b08bc6ae910"/>
        <function-ref name="clear" scoped="" ref="0x2b08bc6ad020"/>
        <function-ref name="isValid" scoped="" ref="0x2b08bc6ae230"/>
        <function-ref name="set" scoped="" ref="0x2b08bc6ad700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x2b08bc6c1e70" loc="70:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x2b08bc6c1e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bc6c01e8"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bc6c0370"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bc6c04f8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bc6c0680"/>
        <function-ref name="get" scoped="" ref="0x2b08bc6c0808"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bc6c0990"/>
        <function-ref name="set" scoped="" ref="0x2b08bc6c0b18"/>
        <function-ref name="clr" scoped="" ref="0x2b08bc6c0ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x2b08bc6abab8" loc="86:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2b08bc6abab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b08bc6abe08"/>
        <function-ref name="wait" scoped="" ref="0x2b08bc6aa020"/>
        <function-ref name="cancel" scoped="" ref="0x2b08bc6aa1a8"/>
        <function-ref name="isFree" scoped="" ref="0x2b08bc6aa330"/>
        <function-ref name="getNow" scoped="" ref="0x2b08bc6aa4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x2b08bc6992d0" loc="49:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2b08bc6992d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2b08bc699620"/>
        <function-ref name="turnOn" scoped="" ref="0x2b08bc6997a8"/>
        <function-ref name="setChannel" scoped="" ref="0x2b08bc699930"/>
        <function-ref name="done" scoped="" ref="0x2b08bc699ab8"/>
        <function-ref name="standby" scoped="" ref="0x2b08bc699c40"/>
        <function-ref name="getChannel" scoped="" ref="0x2b08bc699dc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x2b08bc6b5020" loc="75:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b08bc6b5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08bbab4430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b08bbda3708"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b08bc6b5ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x2b08bc696b48" loc="55:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b08bc696b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08bc693190"/>
        <function-ref name="get" scoped="" ref="0x2b08bc695c38"/>
        <function-ref name="isSet" scoped="" ref="0x2b08bc695728"/>
        <function-ref name="set" scoped="" ref="0x2b08bc6936a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b08bc697a50" loc="53:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b08bc697a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08bc697da0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b08bc696020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08bc6961a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b08bc696330"/>
        <function-ref name="headerLength" scoped="" ref="0x2b08bc6964b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b08bc696640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SLP_TR" ref="0x2b08bc6bcd00" loc="69:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x2b08bc6bcd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bc6c10a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bc6c1228"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bc6c13b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bc6c1538"/>
        <function-ref name="get" scoped="" ref="0x2b08bc6c16c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bc6c1848"/>
        <function-ref name="set" scoped="" ref="0x2b08bc6c19d0"/>
        <function-ref name="clr" scoped="" ref="0x2b08bc6c1b58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b08bc6b3100" loc="77:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b08bc6b3100"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08bc6b3450"/>
        <function-ref name="headerLength" scoped="" ref="0x2b08bc6b35d8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b08bc6b3760"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x2b08bc6b38e8"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x2b08bc6b3a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2b08bc6989e8" loc="51:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b08bc6989e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08bc698d38"/>
        <function-ref name="header" scoped="" ref="0x2b08bc697020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="releaseSpi" ref="0x2b08bc751d98" loc="847:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="releaseSpi" scoped="" ref="0x2b08bc751d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b08bc750170"/>
        <function-ref name="runTask" scoped="" ref="0x2b08bc7502f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2b08bc68f3b0" loc="57:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b08bc68f3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08bc68ea40"/>
        <function-ref name="get" scoped="" ref="0x2b08bc68e530"/>
        <function-ref name="isSet" scoped="" ref="0x2b08bc68e020"/>
        <function-ref name="set" scoped="" ref="0x2b08bc68c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b08bc69a138" loc="46:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b08bc69a138"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b08bba276f0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b08bba276f0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08bc69a488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2b08bc6c34f8" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x2b08bc6c34f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b08bc6c3848"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b08bc6c39d0"/>
        <function-ref name="request" scoped="" ref="0x2b08bc6c3b58"/>
        <function-ref name="granted" scoped="" ref="0x2b08bc6c3ce0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b08bc6c3e68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SELN" ref="0x2b08bc6c4130" loc="64:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x2b08bc6c4130"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bc6c4580"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bc6c4708"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bc6c4890"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bc6c4a18"/>
        <function-ref name="get" scoped="" ref="0x2b08bc6c4ba0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bc6c4d28"/>
        <function-ref name="set" scoped="" ref="0x2b08bc6c3020"/>
        <function-ref name="clr" scoped="" ref="0x2b08bc6c31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x2b08bc68c860" loc="58:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b08bc68c860"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08bc68be30"/>
        <function-ref name="get" scoped="" ref="0x2b08bc68b920"/>
        <function-ref name="isSet" scoped="" ref="0x2b08bc68b410"/>
        <function-ref name="set" scoped="" ref="0x2b08bc6c5388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2b08bc6980c0" loc="50:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2b08bc6980c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08bc698410"/>
        <function-ref name="ready" scoped="" ref="0x2b08bc698598"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08bc698720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IRQ" ref="0x2b08bc6b75e8" loc="72:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x2b08bc6b75e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2b08bc6b7938"/>
        <function-ref name="disable" scoped="" ref="0x2b08bc6b7ac0"/>
        <function-ref name="captured" scoped="" ref="0x2b08bc6b7c48"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2b08bc6b7dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FastSpiByte" ref="0x2b08bc6bc1f0" loc="67:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x2b08bc6bc1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2b08bc6bc540"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2b08bc6bc6c8"/>
        <function-ref name="splitRead" scoped="" ref="0x2b08bc6bc850"/>
        <function-ref name="write" scoped="" ref="0x2b08bc6bc9d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x2b08bc6b1518" loc="81:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x2b08bc6b1518"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08bc6b1868"/>
        <function-ref name="get" scoped="" ref="0x2b08bc6b19f0"/>
        <function-ref name="setValue" scoped="" ref="0x2b08bc6b1b78"/>
        <function-ref name="set" scoped="" ref="0x2b08bc6b1d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x2b08bc6b3e10" loc="79:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x2b08bc6b3e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08bc6b21a8"/>
        <function-ref name="get" scoped="" ref="0x2b08bc6b2330"/>
        <function-ref name="setValue" scoped="" ref="0x2b08bc6b24b8"/>
        <function-ref name="set" scoped="" ref="0x2b08bc6b2640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b08bc6c59d0" loc="59:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b08bc6c59d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b08bc6c5d20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x2b08bc6ab020" loc="85:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x2b08bc6ab020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x2b08bc6ab370"/>
        <function-ref name="suspend" scoped="" ref="0x2b08bc6ab4f8"/>
        <function-ref name="resume" scoped="" ref="0x2b08bc6ab680"/>
        <function-ref name="run" scoped="" ref="0x2b08bc6ab808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x2b08bc78a338" loc="46:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x2b08bc78a338"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bc78a688"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bc78a810"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bc78a998"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bc78ab20"/>
        <function-ref name="get" scoped="" ref="0x2b08bc78aca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bc78ae30"/>
        <function-ref name="set" scoped="" ref="0x2b08bc789020"/>
        <function-ref name="clr" scoped="" ref="0x2b08bc7891a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SLP_TR" ref="0x2b08bc78b140" loc="45:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x2b08bc78b140"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bc78b490"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bc78b618"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bc78b7a0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bc78b928"/>
        <function-ref name="get" scoped="" ref="0x2b08bc78bab0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bc78bc38"/>
        <function-ref name="set" scoped="" ref="0x2b08bc78bdc0"/>
        <function-ref name="clr" scoped="" ref="0x2b08bc78a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b08bc7882e0" loc="49:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b08bc7882e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08bbab4430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b08bbda3708"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b08bc785928"/>
        <function-ref name="fired" scoped="" ref="0x2b08bc7869e8"/>
        <function-ref name="startAt" scoped="" ref="0x2b08bc785320"/>
        <function-ref name="isRunning" scoped="" ref="0x2b08bc786e70"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b08bc785db0"/>
        <function-ref name="start" scoped="" ref="0x2b08bc786088"/>
        <function-ref name="stop" scoped="" ref="0x2b08bc786560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiResource" ref="0x2b08bc78d990" loc="42:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x2b08bc78d990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b08bc78dce0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b08bc78de68"/>
        <function-ref name="request" scoped="" ref="0x2b08bc78c020"/>
        <function-ref name="granted" scoped="" ref="0x2b08bc78c1a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b08bc78c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SELN" ref="0x2b08bc790710" loc="41:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x2b08bc790710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bc790a60"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bc790be8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bc790d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bc78d020"/>
        <function-ref name="get" scoped="" ref="0x2b08bc78d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bc78d330"/>
        <function-ref name="set" scoped="" ref="0x2b08bc78d4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b08bc78d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x2b08bc7894c0" loc="48:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x2b08bc7894c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2b08bc789810"/>
        <function-ref name="disable" scoped="" ref="0x2b08bc789998"/>
        <function-ref name="captured" scoped="" ref="0x2b08bc789b20"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2b08bc789ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2b08bc78c5e8" loc="43:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x2b08bc78c5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2b08bc78c938"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2b08bc78cac0"/>
        <function-ref name="splitRead" scoped="" ref="0x2b08bc78cc48"/>
        <function-ref name="write" scoped="" ref="0x2b08bc78cdd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x2b08bc784438" loc="50:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b08bc784438"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08bbab4430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b08bbda3708"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b08bc783020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortCLKM" ref="0x2b08bc7b4c18" loc="46:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortCLKM" scoped="" ref="0x2b08bc7b4c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bc7b3020"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bc7b31a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bc7b3330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bc7b34b8"/>
        <function-ref name="get" scoped="" ref="0x2b08bc7b3640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bc7b37c8"/>
        <function-ref name="set" scoped="" ref="0x2b08bc7b3950"/>
        <function-ref name="clr" scoped="" ref="0x2b08bc7b3ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Capture" ref="0x2b08bc7b6540" loc="45:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2b08bc7b6540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2b08bc7b46f8"/>
        <function-ref name="test" scoped="" ref="0x2b08bc7b5db8"/>
        <function-ref name="get" scoped="" ref="0x2b08bc7bd0f8"/>
        <function-ref name="captured" scoped="" ref="0x2b08bc7bda58"/>
        <function-ref name="reset" scoped="" ref="0x2b08bc7b5020"/>
        <function-ref name="isOn" scoped="" ref="0x2b08bc7b4270"/>
        <function-ref name="set" scoped="" ref="0x2b08bc7bd580"/>
        <function-ref name="start" scoped="" ref="0x2b08bc7b54a8"/>
        <function-ref name="stop" scoped="" ref="0x2b08bc7b5930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortIRQ" ref="0x2b08bc7b3e08" loc="47:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortIRQ" scoped="" ref="0x2b08bc7b3e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bc7b21a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bc7b2330"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bc7b24b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bc7b2640"/>
        <function-ref name="get" scoped="" ref="0x2b08bc7b27c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bc7b2950"/>
        <function-ref name="set" scoped="" ref="0x2b08bc7b2ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b08bc7b2c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b08bc77f870" loc="40:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b08bc77f870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08bc77fbc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x2b08bc783cd8" loc="39:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x2b08bc783cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2b08bc77f0a0"/>
        <function-ref name="disable" scoped="" ref="0x2b08bc77f228"/>
        <function-ref name="captured" scoped="" ref="0x2b08bc77f3b0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2b08bc77f538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2b08bc7d81d8" loc="84:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x2b08bc7d81d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08bc7d8528"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08bc7d86b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2b08bc7a0388" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x2b08bc7a0388"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b08bc7a06d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b08bc780cd0" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b08bc780cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08bc7a30a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2b08bc7a09d0" loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x2b08bc7a09d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2b08bc7a0d20"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2b08bc7a2020"/>
        <function-ref name="splitRead" scoped="" ref="0x2b08bc7a21a8"/>
        <function-ref name="write" scoped="" ref="0x2b08bc7a2330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b08bc7d8e80" loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b08bc7d8e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b08bc7a11f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b08bc7a1380"/>
        <function-ref name="request" scoped="" ref="0x2b08bc7a1508"/>
        <function-ref name="granted" scoped="" ref="0x2b08bc7a1690"/>
        <function-ref name="isOwner" scoped="" ref="0x2b08bc7a1818"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x2b08bc817b58" loc="296:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x2b08bc817b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b08bc816020"/>
        <function-ref name="runTask" scoped="" ref="0x2b08bc8161a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2b08bc7d4120" loc="94:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x2b08bc7d4120"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08bc7d4470"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08bc7d45f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x2b08bc7f73c8" loc="99:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x2b08bc7f73c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b08bc7f7718"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b08bc7f78a0"/>
        <function-ref name="request" scoped="" ref="0x2b08bc7f7a28"/>
        <function-ref name="granted" scoped="" ref="0x2b08bc7f7bb0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b08bc7f7d38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2b08bc7d5020" loc="92:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x2b08bc7d5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b08bc7d5370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b08bc7d9a18" loc="91:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b08bc7d9a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08bc7d9d68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x2b08bc7f8150" loc="98:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x2b08bc7f8150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x2b08bc7f84a0"/>
        <function-ref name="sleep" scoped="" ref="0x2b08bc7d1950"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x2b08bc7f87b0"/>
        <function-ref name="dataReady" scoped="" ref="0x2b08bc7d1ad8"/>
        <function-ref name="initMaster" scoped="" ref="0x2b08bc7f8ac0"/>
        <function-ref name="setMasterBit" scoped="" ref="0x2b08bc7f8c48"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2b08bc7f8dd0"/>
        <function-ref name="read" scoped="" ref="0x2b08bc7d2020"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x2b08bc7d21a8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2b08bc7d2330"/>
        <function-ref name="setClock" scoped="" ref="0x2b08bc7d24b8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b08bc7d2640"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x2b08bc7d27c8"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x2b08bc7d2a50"/>
        <function-ref name="setDataOrder" scoped="" ref="0x2b08bc7d2bd8"/>
        <function-ref name="write" scoped="" ref="0x2b08bc7d2d60"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b08bc7d1020"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x2b08bc7d11a8"/>
        <function-ref name="getClockPhase" scoped="" ref="0x2b08bc7d1330"/>
        <function-ref name="getClock" scoped="" ref="0x2b08bc7d14b8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2b08bc7d1640"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x2b08bc7f8628"/>
        <function-ref name="setClockPhase" scoped="" ref="0x2b08bc7f8938"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x2b08bc7d17c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2b08bc7d5628" loc="93:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x2b08bc7d5628"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2b08bc7d5978"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2b08bc7d5b00"/>
        <function-ref name="splitRead" scoped="" ref="0x2b08bc7d5c88"/>
        <function-ref name="write" scoped="" ref="0x2b08bc7d5e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b08bc7d4d88" loc="95:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b08bc7d4d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b08bc7d3170"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b08bc7d32f8"/>
        <function-ref name="request" scoped="" ref="0x2b08bc7d3480"/>
        <function-ref name="granted" scoped="" ref="0x2b08bc7d3608"/>
        <function-ref name="isOwner" scoped="" ref="0x2b08bc7d3790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b08bc7f5020" loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b08bc7f5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b08bc7f5370"/>
        <function-ref name="userId" scoped="" ref="0x2b08bc7f54f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x2b08bc7f57c8" loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b08bc7f57c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b08bc7f5b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x2b08bc82e020" loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x2b08bc82e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x2b08bc82e370"/>
        <function-ref name="sleep" scoped="" ref="0x2b08bc82c7c8"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x2b08bc82e680"/>
        <function-ref name="dataReady" scoped="" ref="0x2b08bc82c950"/>
        <function-ref name="initMaster" scoped="" ref="0x2b08bc82e990"/>
        <function-ref name="setMasterBit" scoped="" ref="0x2b08bc82eb18"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2b08bc82eca0"/>
        <function-ref name="read" scoped="" ref="0x2b08bc82ee28"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x2b08bc82d020"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2b08bc82d1a8"/>
        <function-ref name="setClock" scoped="" ref="0x2b08bc82d330"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b08bc82d4b8"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x2b08bc82d640"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x2b08bc82d8c8"/>
        <function-ref name="setDataOrder" scoped="" ref="0x2b08bc82da50"/>
        <function-ref name="write" scoped="" ref="0x2b08bc82dbd8"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b08bc82dd60"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x2b08bc82c020"/>
        <function-ref name="getClockPhase" scoped="" ref="0x2b08bc82c1a8"/>
        <function-ref name="getClock" scoped="" ref="0x2b08bc82c330"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2b08bc82c4b8"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x2b08bc82e4f8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x2b08bc82e808"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x2b08bc82c640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x2b08bc860190" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x2b08bc860190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bc8604e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bc860668"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bc8607f0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bc860978"/>
        <function-ref name="get" scoped="" ref="0x2b08bc860b00"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bc860c88"/>
        <function-ref name="set" scoped="" ref="0x2b08bc860e10"/>
        <function-ref name="clr" scoped="" ref="0x2b08bc85f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x2b08bc824de0" loc="79:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x2b08bc824de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bc822170"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bc8222f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bc822480"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bc822608"/>
        <function-ref name="get" scoped="" ref="0x2b08bc822790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bc822918"/>
        <function-ref name="set" scoped="" ref="0x2b08bc822aa0"/>
        <function-ref name="clr" scoped="" ref="0x2b08bc822c28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x2b08bc820c70" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x2b08bc820c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bc824020"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bc8241a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bc824330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bc8244b8"/>
        <function-ref name="get" scoped="" ref="0x2b08bc824640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bc8247c8"/>
        <function-ref name="set" scoped="" ref="0x2b08bc824950"/>
        <function-ref name="clr" scoped="" ref="0x2b08bc824ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x2b08bc820438" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b08bc820438"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b08bc820788"/>
        <function-ref name="stop" scoped="" ref="0x2b08bc820910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x2b08bc85f350" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x2b08bc85f350"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b08bc85f6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x2b08bc82adc0" loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x2b08bc82adc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x2b08bc827170"/>
        <function-ref name="sleep" scoped="" ref="0x2b08bc825640"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x2b08bc827480"/>
        <function-ref name="dataReady" scoped="" ref="0x2b08bc8257c8"/>
        <function-ref name="initMaster" scoped="" ref="0x2b08bc827790"/>
        <function-ref name="setMasterBit" scoped="" ref="0x2b08bc827918"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2b08bc827aa0"/>
        <function-ref name="read" scoped="" ref="0x2b08bc827c28"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x2b08bc827db0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2b08bc826020"/>
        <function-ref name="setClock" scoped="" ref="0x2b08bc8261a8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b08bc826330"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x2b08bc8264b8"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x2b08bc826740"/>
        <function-ref name="setDataOrder" scoped="" ref="0x2b08bc8268c8"/>
        <function-ref name="write" scoped="" ref="0x2b08bc826a50"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b08bc826bd8"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x2b08bc826d60"/>
        <function-ref name="getClockPhase" scoped="" ref="0x2b08bc825020"/>
        <function-ref name="getClock" scoped="" ref="0x2b08bc8251a8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2b08bc825330"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x2b08bc8272f8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x2b08bc827608"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x2b08bc8254b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x2b08bc861020" loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x2b08bc861020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bc861370"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bc8614f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bc861680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bc861808"/>
        <function-ref name="get" scoped="" ref="0x2b08bc861990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bc861b18"/>
        <function-ref name="set" scoped="" ref="0x2b08bc861ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b08bc861e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b08bc89c510" loc="86:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b08bc89c510"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b08bc89c880"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b08bc89ca08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b08bc89b550" loc="89:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b08bc89b550"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b08bc89b8c0"/>
        <function-ref name="configure" scoped="" ref="0x2b08bc89ba48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b08bc89d748" loc="85:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b08bc89d748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b08bc89dab8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b08bc89dc40"/>
        <function-ref name="request" scoped="" ref="0x2b08bc89ddc8"/>
        <function-ref name="granted" scoped="" ref="0x2b08bc89c020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b08bc89c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b08bc89cc50" loc="87:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b08bc89cc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b08bc89b020"/>
        <function-ref name="userId" scoped="" ref="0x2b08bc89b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b08bde155e8" loc="44:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b08bde155e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08bde15938"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2b08bde15bc0" loc="45:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x2b08bde15bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b08bde14020"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b08bde141a8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b08bde14330"/>
        <function-ref name="dequeue" scoped="" ref="0x2b08bde144b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b08bdebd820" loc="52:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b08bdebd820"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b08bdebdb90"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b08bdebdd18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b08bdebc8c0" loc="56:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b08bdebc8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b08bdebcc30"/>
        <function-ref name="configure" scoped="" ref="0x2b08bdebcdb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b08bdebb0a0" loc="57:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b08bdebb0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b08bdebb3f0"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b08bdebb578"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b08bdebb700"/>
        <function-ref name="dequeue" scoped="" ref="0x2b08bdebb888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b08bdebea28" loc="51:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b08bdebea28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b08bdebed98"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b08bdebd020"/>
        <function-ref name="request" scoped="" ref="0x2b08bdebd1a8"/>
        <function-ref name="granted" scoped="" ref="0x2b08bdebd330"/>
        <function-ref name="isOwner" scoped="" ref="0x2b08bdebd4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b08bdebc020" loc="53:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b08bdebc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b08bdebc370"/>
        <function-ref name="userId" scoped="" ref="0x2b08bdebc4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2b08bdebbb50" loc="69:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2b08bdebbb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b08bdeba020"/>
        <function-ref name="runTask" scoped="" ref="0x2b08bdeba1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b08bc8c65e8" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b08bc8c65e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x2b08bc8c6938"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b08bc8c6ac0"/>
        <function-ref name="getControlA" scoped="" ref="0x2b08bc8c6c48"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b08bc8c6dd0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b08bc88a020"/>
        <function-ref name="setControlB" scoped="" ref="0x2b08bc88a1a8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b08bc88a330"/>
        <function-ref name="getControlB" scoped="" ref="0x2b08bc88a4b8"/>
        <function-ref name="setControlC" scoped="" ref="0x2b08bc88a640"/>
        <function-ref name="setControlA" scoped="" ref="0x2b08bc88a7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b08bc88aca0" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2b08bc88aca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2b08bc8c3e20"/>
        <function-ref name="test" scoped="" ref="0x2b08bc8c3510"/>
        <function-ref name="get" scoped="" ref="0x2b08bc889858"/>
        <function-ref name="captured" scoped="" ref="0x2b08bc8c5238"/>
        <function-ref name="reset" scoped="" ref="0x2b08bc8c5710"/>
        <function-ref name="isOn" scoped="" ref="0x2b08bc8c3998"/>
        <function-ref name="set" scoped="" ref="0x2b08bc889ce0"/>
        <function-ref name="start" scoped="" ref="0x2b08bc8c5b98"/>
        <function-ref name="stop" scoped="" ref="0x2b08bc8c3088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b08bc8c2a20" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b08bc8c2a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b08bc8be270"/>
        <function-ref name="fired" scoped="" ref="0x2b08bc8bf020"/>
        <function-ref name="get" scoped="" ref="0x2b08bc8c15d8"/>
        <function-ref name="reset" scoped="" ref="0x2b08bc8bf4a8"/>
        <function-ref name="isOn" scoped="" ref="0x2b08bc8be6f8"/>
        <function-ref name="set" scoped="" ref="0x2b08bc8c1a60"/>
        <function-ref name="start" scoped="" ref="0x2b08bc8bf930"/>
        <function-ref name="stop" scoped="" ref="0x2b08bc8bfdb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b08bc8936e0" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b08bc8936e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b08bc88d930"/>
        <function-ref name="test" scoped="" ref="0x2b08bc88d020"/>
        <function-ref name="get" scoped="" ref="0x2b08bc8903a8"/>
        <function-ref name="setScale" scoped="" ref="0x2b08bc88ddb8"/>
        <function-ref name="getScale" scoped="" ref="0x2b08bc88c2f0"/>
        <function-ref name="reset" scoped="" ref="0x2b08bc88e1f8"/>
        <function-ref name="overflow" scoped="" ref="0x2b08bc890d08"/>
        <function-ref name="isOn" scoped="" ref="0x2b08bc88d4a8"/>
        <function-ref name="set" scoped="" ref="0x2b08bc890830"/>
        <function-ref name="start" scoped="" ref="0x2b08bc88e680"/>
        <function-ref name="stop" scoped="" ref="0x2b08bc88eb08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b08bc8b6c90" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b08bc8b6c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x2b08bc8b4020"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b08bc8b41a8"/>
        <function-ref name="getControlA" scoped="" ref="0x2b08bc8b4330"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b08bc8b44b8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b08bc8b4640"/>
        <function-ref name="setControlB" scoped="" ref="0x2b08bc8b47c8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b08bc8b4950"/>
        <function-ref name="getControlB" scoped="" ref="0x2b08bc8b4ad8"/>
        <function-ref name="setControlC" scoped="" ref="0x2b08bc8b4c60"/>
        <function-ref name="setControlA" scoped="" ref="0x2b08bc8b4de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x2b08bc8afc48" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x2b08bc8afc48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b08bc8ac4a8"/>
        <function-ref name="fired" scoped="" ref="0x2b08bc8ad1d0"/>
        <function-ref name="get" scoped="" ref="0x2b08bc8ae820"/>
        <function-ref name="reset" scoped="" ref="0x2b08bc8ad658"/>
        <function-ref name="isOn" scoped="" ref="0x2b08bc8ac930"/>
        <function-ref name="set" scoped="" ref="0x2b08bc8aeca8"/>
        <function-ref name="start" scoped="" ref="0x2b08bc8adae0"/>
        <function-ref name="stop" scoped="" ref="0x2b08bc8ac020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b08bc8b3350" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2b08bc8b3350"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2b08bc8af580"/>
        <function-ref name="test" scoped="" ref="0x2b08bc8b1c20"/>
        <function-ref name="get" scoped="" ref="0x2b08bc8b2020"/>
        <function-ref name="captured" scoped="" ref="0x2b08bc8b2980"/>
        <function-ref name="reset" scoped="" ref="0x2b08bc8b2e58"/>
        <function-ref name="isOn" scoped="" ref="0x2b08bc8af0f8"/>
        <function-ref name="set" scoped="" ref="0x2b08bc8b24a8"/>
        <function-ref name="start" scoped="" ref="0x2b08bc8b1310"/>
        <function-ref name="stop" scoped="" ref="0x2b08bc8b1798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x2b08bc8aa020" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x2b08bc8aa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b08bc8a87a8"/>
        <function-ref name="fired" scoped="" ref="0x2b08bc8a9560"/>
        <function-ref name="get" scoped="" ref="0x2b08bc8aaba0"/>
        <function-ref name="reset" scoped="" ref="0x2b08bc8a99e8"/>
        <function-ref name="isOn" scoped="" ref="0x2b08bc8a8c30"/>
        <function-ref name="set" scoped="" ref="0x2b08bc8a9088"/>
        <function-ref name="start" scoped="" ref="0x2b08bc8a9e70"/>
        <function-ref name="stop" scoped="" ref="0x2b08bc8a8320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x2b08bc8a6360" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x2b08bc8a6360"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b08bc8e8c20"/>
        <function-ref name="fired" scoped="" ref="0x2b08bc8a5980"/>
        <function-ref name="get" scoped="" ref="0x2b08bc8a5020"/>
        <function-ref name="reset" scoped="" ref="0x2b08bc8a5e08"/>
        <function-ref name="isOn" scoped="" ref="0x2b08bc8e70f8"/>
        <function-ref name="set" scoped="" ref="0x2b08bc8a54a8"/>
        <function-ref name="start" scoped="" ref="0x2b08bc8e8310"/>
        <function-ref name="stop" scoped="" ref="0x2b08bc8e8798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b08bc8bdbe0" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b08bc8bdbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b08bc8b7db8"/>
        <function-ref name="test" scoped="" ref="0x2b08bc8b74a8"/>
        <function-ref name="get" scoped="" ref="0x2b08bc8b97a0"/>
        <function-ref name="setScale" scoped="" ref="0x2b08bc8b6270"/>
        <function-ref name="getScale" scoped="" ref="0x2b08bc8b6748"/>
        <function-ref name="reset" scoped="" ref="0x2b08bc8b85b8"/>
        <function-ref name="overflow" scoped="" ref="0x2b08bc8b8130"/>
        <function-ref name="isOn" scoped="" ref="0x2b08bc8b7930"/>
        <function-ref name="set" scoped="" ref="0x2b08bc8b9c28"/>
        <function-ref name="start" scoped="" ref="0x2b08bc8b8a40"/>
        <function-ref name="stop" scoped="" ref="0x2b08bc8b7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b08bc97fb68" loc="30:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="HplRF230C.AlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b08bc97fb68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08bbab4430"/>
            <typename><typedef-ref name="TOne" ref="0x2b08bbb029f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b08bc97c238"/>
        <function-ref name="fired" scoped="" ref="0x2b08bc97d2b0"/>
        <function-ref name="startAt" scoped="" ref="0x2b08bc97dbc0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b08bc97d738"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b08bc97c6c0"/>
        <function-ref name="start" scoped="" ref="0x2b08bc97e8f8"/>
        <function-ref name="stop" scoped="" ref="0x2b08bc97edd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b08bc939dc0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b08bc939dc0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2b08bba27388"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2b08bba27388"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08bc938170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b08bc938540" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b08bc938540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b08bc96e6f8"/>
        <function-ref name="test" scoped="" ref="0x2b08bc970db8"/>
        <function-ref name="get" scoped="" ref="0x2b08bc9710f8"/>
        <function-ref name="setScale" scoped="" ref="0x2b08bc96eb80"/>
        <function-ref name="getScale" scoped="" ref="0x2b08bc96d088"/>
        <function-ref name="reset" scoped="" ref="0x2b08bc970020"/>
        <function-ref name="overflow" scoped="" ref="0x2b08bc971a58"/>
        <function-ref name="isOn" scoped="" ref="0x2b08bc96e270"/>
        <function-ref name="set" scoped="" ref="0x2b08bc971580"/>
        <function-ref name="start" scoped="" ref="0x2b08bc9704a8"/>
        <function-ref name="stop" scoped="" ref="0x2b08bc970930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b08bde929d8" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b08bde929d8"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x2b08bba27020"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x2b08bba27020"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08bbab4430"/>
            <typename><typedef-ref name="TOne" ref="0x2b08bbb029f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b08bde8e088"/>
        <function-ref name="fired" scoped="" ref="0x2b08bde8f0f8"/>
        <function-ref name="startAt" scoped="" ref="0x2b08bde8fa08"/>
        <function-ref name="isRunning" scoped="" ref="0x2b08bde8f580"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b08bde8e510"/>
        <function-ref name="start" scoped="" ref="0x2b08bde90768"/>
        <function-ref name="stop" scoped="" ref="0x2b08bde90c40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x2b08bde89a80" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x2b08bde89a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b08bde85270"/>
        <function-ref name="fired" scoped="" ref="0x2b08bde87020"/>
        <function-ref name="get" scoped="" ref="0x2b08bde88658"/>
        <function-ref name="reset" scoped="" ref="0x2b08bde874a8"/>
        <function-ref name="isOn" scoped="" ref="0x2b08bde856f8"/>
        <function-ref name="set" scoped="" ref="0x2b08bde88ae0"/>
        <function-ref name="start" scoped="" ref="0x2b08bde87930"/>
        <function-ref name="stop" scoped="" ref="0x2b08bde87db8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x2b08bde8ea30" loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x2b08bde8ea30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b08bde8ab80"/>
        <function-ref name="test" scoped="" ref="0x2b08bde8a270"/>
        <function-ref name="get" scoped="" ref="0x2b08bde8d5d8"/>
        <function-ref name="setScale" scoped="" ref="0x2b08bde89088"/>
        <function-ref name="getScale" scoped="" ref="0x2b08bde89560"/>
        <function-ref name="reset" scoped="" ref="0x2b08bde8c4a8"/>
        <function-ref name="overflow" scoped="" ref="0x2b08bde8c020"/>
        <function-ref name="isOn" scoped="" ref="0x2b08bde8a6f8"/>
        <function-ref name="set" scoped="" ref="0x2b08bde8da60"/>
        <function-ref name="start" scoped="" ref="0x2b08bde8c930"/>
        <function-ref name="stop" scoped="" ref="0x2b08bde8cdb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b08bc977400" loc="39:/opt/tinyos-2.1.2/tos/platforms/iris/LocalTimeMicroC.nc">
      <component-ref qname="LocalTimeMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b08bc977400"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08bbab4430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b08bbab4788"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b08bc976020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b08bc9bb108" loc="24:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b08bc9bb108"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08bbab4430"/>
            <typename><typedef-ref name="TOne" ref="0x2b08bbb029f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b08bc9bbe58"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b08bc9ba798"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b08bc9ba310"/>
        <function-ref name="overflow" scoped="" ref="0x2b08bc9bac20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b08bc9b7e08" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b08bc9b7e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08bbab4430"/>
            <typename><typedef-ref name="TOne" ref="0x2b08bbb029f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b08bc9a5be8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b08bc9a4548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b08bc9a40c0"/>
        <function-ref name="overflow" scoped="" ref="0x2b08bc9a49d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b08bc9a3020" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b08bc9a3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b08bc99f0f8"/>
        <function-ref name="test" scoped="" ref="0x2b08bc9a07a8"/>
        <function-ref name="get" scoped="" ref="0x2b08bc9a3ba0"/>
        <function-ref name="setScale" scoped="" ref="0x2b08bc99f580"/>
        <function-ref name="getScale" scoped="" ref="0x2b08bc99fa58"/>
        <function-ref name="reset" scoped="" ref="0x2b08bc9a29e8"/>
        <function-ref name="overflow" scoped="" ref="0x2b08bc9a2560"/>
        <function-ref name="isOn" scoped="" ref="0x2b08bc9a0c30"/>
        <function-ref name="set" scoped="" ref="0x2b08bc9a2088"/>
        <function-ref name="start" scoped="" ref="0x2b08bc9a2e70"/>
        <function-ref name="stop" scoped="" ref="0x2b08bc9a0320"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2b08bc9c7450" loc="63:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x2b08bc9c7450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08bbab4430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b08bbab4788"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b08bc9c51d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b08bc9c5ae0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b08bc9c5658"/>
        <function-ref name="overflow" scoped="" ref="0x2b08bc9c4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b08bc9c9270" loc="62:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b08bc9c9270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08bbab4430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b08bbab4788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b08bb142608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b08bc9c8020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b08bc9c8930"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b08bc9c84a8"/>
        <function-ref name="overflow" scoped="" ref="0x2b08bc9c8db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b08bc9c3c38" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b08bc9c3c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08bbab4430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b08bbab4788"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b08bc9c2820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b08bc9c2e48" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b08bc9c2e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08bbab4430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b08bbab4788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b08bb142608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b08bc9c0be8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b08bc9bf548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b08bc9bf0c0"/>
        <function-ref name="overflow" scoped="" ref="0x2b08bc9bf9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x2b08bc9ff3c0" loc="36:/opt/tinyos-2.1.2/tos/platforms/micaz/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x2b08bc9ff3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08bbab4430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b08bbab4788"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2b08bc9fe150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CMC" ref="0x2b08bca4be08" loc="24:../../CMC/CMCSocket.nc">
      <component-ref qname="CMCTestC.CMC0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CMC" scoped="" ref="0x2b08bca4be08"/></type-interface>
      <instance>
        <interfacedef-ref qname="CMC"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08bca4a1a8"/>
        <function-ref name="init" scoped="" ref="0x2b08bca4a330"/>
        <function-ref name="bind" scoped="" ref="0x2b08bca4a4b8"/>
        <function-ref name="connect" scoped="" ref="0x2b08bca4a640"/>
        <function-ref name="recv" scoped="" ref="0x2b08bca4a7c8"/>
        <function-ref name="connected" scoped="" ref="0x2b08bca4a950"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08bca4aad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CMC" ref="0x2b08bca464c0" loc="26:../../CMC/CMCC.nc">
      <component-ref qname="CMCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CMC" scoped="" ref="0x2b08bca464c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CMC"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08bca46810"/>
        <function-ref name="init" scoped="" ref="0x2b08bca46998"/>
        <function-ref name="bind" scoped="" ref="0x2b08bca46b20"/>
        <function-ref name="connect" scoped="" ref="0x2b08bca46ca8"/>
        <function-ref name="recv" scoped="" ref="0x2b08bca46e30"/>
        <function-ref name="connected" scoped="" ref="0x2b08bca45020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08bca451a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b08bca43420" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="CMCC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b08bca43420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08bbab6020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b08bbab6378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b08bca3f6c8"/>
        <function-ref name="fired" scoped="" ref="0x2b08bca42db0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b08bca41ad8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b08bca41688"/>
        <function-ref name="getdt" scoped="" ref="0x2b08bca3e020"/>
        <function-ref name="gett0" scoped="" ref="0x2b08bca3fb18"/>
        <function-ref name="isRunning" scoped="" ref="0x2b08bca41238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b08bca42020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b08bca3f0f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b08bca424c0"/>
        <function-ref name="stop" scoped="" ref="0x2b08bca42960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CMC" ref="0x2b08bca3db70" loc="46:../../CMC/CMCP.nc">
      <component-ref qname="CMCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CMC" scoped="" ref="0x2b08bca3db70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CMC"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08bca3a020"/>
        <function-ref name="init" scoped="" ref="0x2b08bca3a1a8"/>
        <function-ref name="bind" scoped="" ref="0x2b08bca3a330"/>
        <function-ref name="connect" scoped="" ref="0x2b08bca3a4b8"/>
        <function-ref name="recv" scoped="" ref="0x2b08bca3a640"/>
        <function-ref name="connected" scoped="" ref="0x2b08bca3a7c8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08bca3a950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2b08bca392f8" loc="49:../../CMC/CMCP.nc">
      <component-ref qname="CMCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b08bca392f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b08bca39648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SHA1" ref="0x2b08bca695a8" loc="65:../../CMC/CMCP.nc">
      <component-ref qname="CMCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHA1" scoped="" ref="0x2b08bca695a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SHA1"/>
      </instance>
      <interface-functions>
        <function-ref name="reset" scoped="" ref="0x2b08bca699f8"/>
        <function-ref name="update" scoped="" ref="0x2b08bca69b80"/>
        <function-ref name="digest" scoped="" ref="0x2b08bca69d08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2b08bca322a8" loc="54:../../CMC/CMCP.nc">
      <component-ref qname="CMCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b08bca322a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08bca325f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b08bca32780"/>
        <function-ref name="getPayload" scoped="" ref="0x2b08bca32908"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08bca32a90"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b08bca32c18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x2b08bca31020" loc="55:../../CMC/CMCP.nc">
      <component-ref qname="CMCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b08bca31020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08bca31370"/>
        <function-ref name="getPayload" scoped="" ref="0x2b08bca314f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08bca31680"/>
        <function-ref name="cancel" scoped="" ref="0x2b08bca31808"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08bca31990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ECC" ref="0x2b08bca6ca30" loc="62:../../CMC/CMCP.nc">
      <component-ref qname="CMCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ECC" scoped="" ref="0x2b08bca6ca30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ECC"/>
      </instance>
      <interface-functions>
        <function-ref name="get_param" scoped="" ref="0x2b08bca6cd80"/>
        <function-ref name="point2octet" scoped="" ref="0x2b08bca6b020"/>
        <function-ref name="win_mul" scoped="" ref="0x2b08bca6b1a8"/>
        <function-ref name="gen_private_key" scoped="" ref="0x2b08bca6b330"/>
        <function-ref name="win_mul_Z" scoped="" ref="0x2b08bca6b4b8"/>
        <function-ref name="octet2point" scoped="" ref="0x2b08bca6b640"/>
        <function-ref name="init" scoped="" ref="0x2b08bca6b7c8"/>
        <function-ref name="add_proj" scoped="" ref="0x2b08bca6b950"/>
        <function-ref name="point_is_zero" scoped="" ref="0x2b08bca6bad8"/>
        <function-ref name="mul" scoped="" ref="0x2b08bca6bc60"/>
        <function-ref name="dbl_proj" scoped="" ref="0x2b08bca6bde8"/>
        <function-ref name="win_mul_base" scoped="" ref="0x2b08bca6a020"/>
        <function-ref name="check_point" scoped="" ref="0x2b08bca6a1a8"/>
        <function-ref name="win_precompute_Z" scoped="" ref="0x2b08bca6a430"/>
        <function-ref name="add" scoped="" ref="0x2b08bca6a5b8"/>
        <function-ref name="gen_public_key" scoped="" ref="0x2b08bca6a740"/>
        <function-ref name="win_precompute" scoped="" ref="0x2b08bca6a8c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2b08bca34a60" loc="52:../../CMC/CMCP.nc">
      <component-ref qname="CMCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2b08bca34a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b08bca34db0"/>
        <function-ref name="rand32" scoped="" ref="0x2b08bca32020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b08bca3ac08" loc="47:../../CMC/CMCP.nc">
      <component-ref qname="CMCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b08bca3ac08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08bca39020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x2b08bca31c20" loc="56:../../CMC/CMCP.nc">
      <component-ref qname="CMCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b08bca31c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08bca30020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OCBMode" ref="0x2b08bca6f6e0" loc="59:../../CMC/CMCP.nc">
      <component-ref qname="CMCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OCBMode" scoped="" ref="0x2b08bca6f6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OCBMode"/>
      </instance>
      <interface-functions>
        <function-ref name="decrypt" scoped="" ref="0x2b08bca6fa30"/>
        <function-ref name="init" scoped="" ref="0x2b08bca6fbb8"/>
        <function-ref name="set_counter" scoped="" ref="0x2b08bca6fd40"/>
        <function-ref name="get_counter" scoped="" ref="0x2b08bca79020"/>
        <function-ref name="encrypt" scoped="" ref="0x2b08bca791a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NN" ref="0x2b08bca79408" loc="61:../../CMC/CMCP.nc">
      <component-ref qname="CMCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NN" scoped="" ref="0x2b08bca79408"/></type-interface>
      <instance>
        <interfacedef-ref qname="NN"/>
      </instance>
      <interface-functions>
        <function-ref name="ModSqr" scoped="" ref="0x2b08bca79758"/>
        <function-ref name="LShift" scoped="" ref="0x2b08bca798e0"/>
        <function-ref name="ModSmall" scoped="" ref="0x2b08bca79a68"/>
        <function-ref name="Gcd" scoped="" ref="0x2b08bca79bf0"/>
        <function-ref name="ModExp" scoped="" ref="0x2b08bca79d78"/>
        <function-ref name="ModNeg" scoped="" ref="0x2b08bca78020"/>
        <function-ref name="AddDigitMult" scoped="" ref="0x2b08bca781a8"/>
        <function-ref name="ModBarrett" scoped="" ref="0x2b08bca78330"/>
        <function-ref name="Digits" scoped="" ref="0x2b08bca784b8"/>
        <function-ref name="ModSub" scoped="" ref="0x2b08bca78640"/>
        <function-ref name="ModDiv" scoped="" ref="0x2b08bca787c8"/>
        <function-ref name="Cmp" scoped="" ref="0x2b08bca78950"/>
        <function-ref name="ModBarrettInit" scoped="" ref="0x2b08bca78ad8"/>
        <function-ref name="AssignDigit" scoped="" ref="0x2b08bca78d60"/>
        <function-ref name="BarrettSetBuf" scoped="" ref="0x2b08bca6e020"/>
        <function-ref name="ModMult" scoped="" ref="0x2b08bca6e1a8"/>
        <function-ref name="Sub" scoped="" ref="0x2b08bca6e330"/>
        <function-ref name="Mult" scoped="" ref="0x2b08bca6e4b8"/>
        <function-ref name="ModMultOpt" scoped="" ref="0x2b08bca6e640"/>
        <function-ref name="Assign" scoped="" ref="0x2b08bca6e7c8"/>
        <function-ref name="Decode" scoped="" ref="0x2b08bca6e950"/>
        <function-ref name="Encode" scoped="" ref="0x2b08bca6ead8"/>
        <function-ref name="Assign2Exp" scoped="" ref="0x2b08bca6ec60"/>
        <function-ref name="Mod" scoped="" ref="0x2b08bca6ede8"/>
        <function-ref name="ModSqrRootOpt" scoped="" ref="0x2b08bca6d020"/>
        <function-ref name="Div" scoped="" ref="0x2b08bca6d3a8"/>
        <function-ref name="Add" scoped="" ref="0x2b08bca6d530"/>
        <function-ref name="ModAdd" scoped="" ref="0x2b08bca6d6b8"/>
        <function-ref name="One" scoped="" ref="0x2b08bca6d840"/>
        <function-ref name="Bits" scoped="" ref="0x2b08bca6d9c8"/>
        <function-ref name="TestBit" scoped="" ref="0x2b08bca6db50"/>
        <function-ref name="Equal" scoped="" ref="0x2b08bca6dcd8"/>
        <function-ref name="ModSqrOpt" scoped="" ref="0x2b08bca6de60"/>
        <function-ref name="AssignZero" scoped="" ref="0x2b08bca6c020"/>
        <function-ref name="RShift" scoped="" ref="0x2b08bca6c1a8"/>
        <function-ref name="ModDivOpt" scoped="" ref="0x2b08bca6c330"/>
        <function-ref name="ModInv" scoped="" ref="0x2b08bca6c4b8"/>
        <function-ref name="Even" scoped="" ref="0x2b08bca6c640"/>
        <function-ref name="Zero" scoped="" ref="0x2b08bca6c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b08bca5c760" loc="68:../../CMC/CMCP.nc">
      <component-ref qname="CMCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b08bca5c760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b08bca5cab0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b08bca5cc38"/>
        <function-ref name="led1On" scoped="" ref="0x2b08bca5cdc0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b08bca67020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b08bca671a8"/>
        <function-ref name="get" scoped="" ref="0x2b08bca67330"/>
        <function-ref name="led1Off" scoped="" ref="0x2b08bca674b8"/>
        <function-ref name="led2Off" scoped="" ref="0x2b08bca67ad8"/>
        <function-ref name="set" scoped="" ref="0x2b08bca67640"/>
        <function-ref name="led0On" scoped="" ref="0x2b08bca677c8"/>
        <function-ref name="led2On" scoped="" ref="0x2b08bca67950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ECIES" ref="0x2b08bca6ab48" loc="63:../../CMC/CMCP.nc">
      <component-ref qname="CMCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ECIES" scoped="" ref="0x2b08bca6ab48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ECIES"/>
      </instance>
      <interface-functions>
        <function-ref name="decrypt" scoped="" ref="0x2b08bca69020"/>
        <function-ref name="init" scoped="" ref="0x2b08bca691a8"/>
        <function-ref name="encrypt" scoped="" ref="0x2b08bca69330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b08bca39a10" loc="50:../../CMC/CMCP.nc">
      <component-ref qname="CMCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b08bca39a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08bbab6020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b08bbab6378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b08bca35d60"/>
        <function-ref name="fired" scoped="" ref="0x2b08bca36470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b08bca351c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b08bca36d10"/>
        <function-ref name="getdt" scoped="" ref="0x2b08bca34648"/>
        <function-ref name="gett0" scoped="" ref="0x2b08bca341f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b08bca368c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b08bca375a0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b08bca35790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b08bca37a40"/>
        <function-ref name="stop" scoped="" ref="0x2b08bca36020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b08bcb92c20" loc="49:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="CMCC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b08bcb92c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08bcb91020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b08bcb911a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08bcb91330"/>
        <function-ref name="cancel" scoped="" ref="0x2b08bcb914b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08bcb91640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b08bcb91888" loc="50:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="CMCC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b08bcb91888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08bcb91bd8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b08bcb91d60"/>
        <function-ref name="getPayload" scoped="" ref="0x2b08bcb90020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08bcb901a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b08bcb90330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b08bcb90578" loc="51:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="CMCC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b08bcb90578"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b08bcb908c8"/>
        <function-ref name="source" scoped="" ref="0x2b08bcb90a50"/>
        <function-ref name="address" scoped="" ref="0x2b08bcb90bd8"/>
        <function-ref name="destination" scoped="" ref="0x2b08bcb90d60"/>
        <function-ref name="setSource" scoped="" ref="0x2b08bcb8f020"/>
        <function-ref name="setDestination" scoped="" ref="0x2b08bcb8f1a8"/>
        <function-ref name="type" scoped="" ref="0x2b08bcb8f330"/>
        <function-ref name="setType" scoped="" ref="0x2b08bcb8f4b8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b08bcb8f640"/>
        <function-ref name="setGroup" scoped="" ref="0x2b08bcb8f7c8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b08bcb8f950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b08bcb8fbd8" loc="52:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="CMCC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2b08bcb8fbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b08bcb8e020"/>
        <function-ref name="noAck" scoped="" ref="0x2b08bcb8e1a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b08bcb8e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b08bdee85e8" loc="49:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CMCC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b08bdee85e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08bdee8938"/>
        <function-ref name="getPayload" scoped="" ref="0x2b08bdee8ac0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08bdee8c48"/>
        <function-ref name="cancel" scoped="" ref="0x2b08bdee8dd0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08bdee7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b08bdee7268" loc="50:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CMCC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b08bdee7268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08bdee75b8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b08bdee7740"/>
        <function-ref name="getPayload" scoped="" ref="0x2b08bdee78c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08bdee7a50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b08bdee7bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b08bdee7e20" loc="51:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CMCC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b08bdee7e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b08bdee61a8"/>
        <function-ref name="source" scoped="" ref="0x2b08bdee6330"/>
        <function-ref name="address" scoped="" ref="0x2b08bdee64b8"/>
        <function-ref name="destination" scoped="" ref="0x2b08bdee6640"/>
        <function-ref name="setSource" scoped="" ref="0x2b08bdee67c8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b08bdee6950"/>
        <function-ref name="type" scoped="" ref="0x2b08bdee6ad8"/>
        <function-ref name="setType" scoped="" ref="0x2b08bdee6c60"/>
        <function-ref name="isForMe" scoped="" ref="0x2b08bdee6de8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b08bdee5020"/>
        <function-ref name="localGroup" scoped="" ref="0x2b08bdee51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b08bdee5430" loc="52:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CMCC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2b08bdee5430"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b08bdee5780"/>
        <function-ref name="noAck" scoped="" ref="0x2b08bdee5908"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b08bdee5a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b08bdedcc18" loc="44:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CMCC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b08bdedcc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08bdedb020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b08bdedb1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08bdedb330"/>
        <function-ref name="cancel" scoped="" ref="0x2b08bdedb4b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08bdedb640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2b08bdedb8e8" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CMCC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b08bdedb8e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08bdedbc38"/>
        <function-ref name="getPayload" scoped="" ref="0x2b08bdedbdc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08bdeda020"/>
        <function-ref name="cancel" scoped="" ref="0x2b08bdeda1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08bdeda330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b08bdeda578" loc="47:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CMCC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b08bdeda578"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b08bdeda8c8"/>
        <function-ref name="source" scoped="" ref="0x2b08bdedaa50"/>
        <function-ref name="address" scoped="" ref="0x2b08bdedabd8"/>
        <function-ref name="destination" scoped="" ref="0x2b08bdedad60"/>
        <function-ref name="setSource" scoped="" ref="0x2b08bded9020"/>
        <function-ref name="setDestination" scoped="" ref="0x2b08bded91a8"/>
        <function-ref name="type" scoped="" ref="0x2b08bded9330"/>
        <function-ref name="setType" scoped="" ref="0x2b08bded94b8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b08bded9640"/>
        <function-ref name="setGroup" scoped="" ref="0x2b08bded97c8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b08bded9950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b08bcb504f8" loc="43:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b08bcb504f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08bcb50848"/>
        <function-ref name="getPayload" scoped="" ref="0x2b08bcb509d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08bcb50b58"/>
        <function-ref name="cancel" scoped="" ref="0x2b08bcb50ce0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08bcb50e68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x2b08bcba56f8" loc="48:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b08bcba56f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b08bbdaed78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08bcba5a68"/>
        <function-ref name="getPayload" scoped="" ref="0x2b08bcba5bf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08bcba5d78"/>
        <function-ref name="cancel" scoped="" ref="0x2b08bcba4020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08bcba41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b08bcba6920" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b08bcba6920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08bcba6c90"/>
        <function-ref name="getPayload" scoped="" ref="0x2b08bcba6e18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08bcba5020"/>
        <function-ref name="cancel" scoped="" ref="0x2b08bcba51a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08bcba5330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2b08bcba3a10" loc="50:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b08bcba3a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08bcba3d60"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b08bcba2020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b08bcba21a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08bcba2330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b08bcba24b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x2b08bcba2780" loc="169:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x2b08bcba2780"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b08bcba2ad0"/>
        <function-ref name="runTask" scoped="" ref="0x2b08bcba2c58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x2b08bcba1020" loc="126:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x2b08bcba1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b08bcba1370"/>
        <function-ref name="runTask" scoped="" ref="0x2b08bcba14f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b08bcba43f0" loc="49:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b08bcba43f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b08bcba4740"/>
        <function-ref name="source" scoped="" ref="0x2b08bcba48c8"/>
        <function-ref name="address" scoped="" ref="0x2b08bcba4a50"/>
        <function-ref name="destination" scoped="" ref="0x2b08bcba4bd8"/>
        <function-ref name="setSource" scoped="" ref="0x2b08bcba4d60"/>
        <function-ref name="setDestination" scoped="" ref="0x2b08bcba3020"/>
        <function-ref name="type" scoped="" ref="0x2b08bcba31a8"/>
        <function-ref name="setType" scoped="" ref="0x2b08bcba3330"/>
        <function-ref name="isForMe" scoped="" ref="0x2b08bcba34b8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b08bcba3640"/>
        <function-ref name="localGroup" scoped="" ref="0x2b08bcba37c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b08bcbd5408" loc="46:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="CMCC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b08bcbd5408"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08bcbd5758"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b08bcbd58e0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b08bcbd5a68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08bcbd5bf0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b08bcbd5d78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b08bcb8be38" loc="45:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="CMCC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b08bcb8be38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08bcbd51c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b08bcbd4020" loc="47:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="CMCC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b08bcbd4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b08bcbd4370"/>
        <function-ref name="source" scoped="" ref="0x2b08bcbd44f8"/>
        <function-ref name="address" scoped="" ref="0x2b08bcbd4680"/>
        <function-ref name="destination" scoped="" ref="0x2b08bcbd4808"/>
        <function-ref name="setSource" scoped="" ref="0x2b08bcbd4990"/>
        <function-ref name="setDestination" scoped="" ref="0x2b08bcbd4b18"/>
        <function-ref name="type" scoped="" ref="0x2b08bcbd4ca0"/>
        <function-ref name="setType" scoped="" ref="0x2b08bcbd4e28"/>
        <function-ref name="isForMe" scoped="" ref="0x2b08bcbd3020"/>
        <function-ref name="setGroup" scoped="" ref="0x2b08bcbd31a8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b08bcbd3330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ECC" ref="0x2b08bcbd1378" loc="38:../../CMC/TinyECC/ECCC.nc">
      <component-ref qname="ECCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ECC" scoped="" ref="0x2b08bcbd1378"/></type-interface>
      <instance>
        <interfacedef-ref qname="ECC"/>
      </instance>
      <interface-functions>
        <function-ref name="get_param" scoped="" ref="0x2b08bcbd16c8"/>
        <function-ref name="point2octet" scoped="" ref="0x2b08bcbd1850"/>
        <function-ref name="win_mul" scoped="" ref="0x2b08bcbd19d8"/>
        <function-ref name="gen_private_key" scoped="" ref="0x2b08bcbd1b60"/>
        <function-ref name="win_mul_Z" scoped="" ref="0x2b08bcbd1ce8"/>
        <function-ref name="octet2point" scoped="" ref="0x2b08bcbd1e70"/>
        <function-ref name="init" scoped="" ref="0x2b08bcbce020"/>
        <function-ref name="add_proj" scoped="" ref="0x2b08bcbce1a8"/>
        <function-ref name="point_is_zero" scoped="" ref="0x2b08bcbce330"/>
        <function-ref name="mul" scoped="" ref="0x2b08bcbce4b8"/>
        <function-ref name="dbl_proj" scoped="" ref="0x2b08bcbce640"/>
        <function-ref name="win_mul_base" scoped="" ref="0x2b08bcbce7c8"/>
        <function-ref name="check_point" scoped="" ref="0x2b08bcbce950"/>
        <function-ref name="win_precompute_Z" scoped="" ref="0x2b08bcbcebd8"/>
        <function-ref name="add" scoped="" ref="0x2b08bcbced60"/>
        <function-ref name="gen_public_key" scoped="" ref="0x2b08bcbcd020"/>
        <function-ref name="win_precompute" scoped="" ref="0x2b08bcbcd1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CurveParam" ref="0x2b08bcbbf558" loc="36:../../CMC/TinyECC/ECCM.nc">
      <component-ref qname="ECCM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CurveParam" scoped="" ref="0x2b08bcbbf558"/></type-interface>
      <instance>
        <interfacedef-ref qname="CurveParam"/>
      </instance>
      <interface-functions>
        <function-ref name="get_param" scoped="" ref="0x2b08bcbbf8a8"/>
        <function-ref name="omega_mul" scoped="" ref="0x2b08bcbbfa30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ECC" ref="0x2b08bcbcdbc0" loc="34:../../CMC/TinyECC/ECCM.nc">
      <component-ref qname="ECCM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ECC" scoped="" ref="0x2b08bcbcdbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ECC"/>
      </instance>
      <interface-functions>
        <function-ref name="get_param" scoped="" ref="0x2b08bcbca020"/>
        <function-ref name="point2octet" scoped="" ref="0x2b08bcbca1a8"/>
        <function-ref name="win_mul" scoped="" ref="0x2b08bcbca330"/>
        <function-ref name="gen_private_key" scoped="" ref="0x2b08bcbca4b8"/>
        <function-ref name="win_mul_Z" scoped="" ref="0x2b08bcbca640"/>
        <function-ref name="octet2point" scoped="" ref="0x2b08bcbca7c8"/>
        <function-ref name="init" scoped="" ref="0x2b08bcbca950"/>
        <function-ref name="add_proj" scoped="" ref="0x2b08bcbcaad8"/>
        <function-ref name="point_is_zero" scoped="" ref="0x2b08bcbcac60"/>
        <function-ref name="mul" scoped="" ref="0x2b08bcbcade8"/>
        <function-ref name="dbl_proj" scoped="" ref="0x2b08bcbc9020"/>
        <function-ref name="win_mul_base" scoped="" ref="0x2b08bcbc91a8"/>
        <function-ref name="check_point" scoped="" ref="0x2b08bcbc9330"/>
        <function-ref name="win_precompute_Z" scoped="" ref="0x2b08bcbc95b8"/>
        <function-ref name="add" scoped="" ref="0x2b08bcbc9740"/>
        <function-ref name="gen_public_key" scoped="" ref="0x2b08bcbc98c8"/>
        <function-ref name="win_precompute" scoped="" ref="0x2b08bcbc9a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2b08bcbbfcf8" loc="37:../../CMC/TinyECC/ECCM.nc">
      <component-ref qname="ECCM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2b08bcbbfcf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b08bcbc30a0"/>
        <function-ref name="rand32" scoped="" ref="0x2b08bcbc3228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NN" ref="0x2b08bcbc9cf0" loc="35:../../CMC/TinyECC/ECCM.nc">
      <component-ref qname="ECCM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NN" scoped="" ref="0x2b08bcbc9cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="NN"/>
      </instance>
      <interface-functions>
        <function-ref name="ModSqr" scoped="" ref="0x2b08bcbc80a0"/>
        <function-ref name="LShift" scoped="" ref="0x2b08bcbc8228"/>
        <function-ref name="ModSmall" scoped="" ref="0x2b08bcbc83b0"/>
        <function-ref name="Gcd" scoped="" ref="0x2b08bcbc8538"/>
        <function-ref name="ModExp" scoped="" ref="0x2b08bcbc86c0"/>
        <function-ref name="ModNeg" scoped="" ref="0x2b08bcbc8848"/>
        <function-ref name="AddDigitMult" scoped="" ref="0x2b08bcbc89d0"/>
        <function-ref name="ModBarrett" scoped="" ref="0x2b08bcbc8b58"/>
        <function-ref name="Digits" scoped="" ref="0x2b08bcbc8ce0"/>
        <function-ref name="ModSub" scoped="" ref="0x2b08bcbc8e68"/>
        <function-ref name="ModDiv" scoped="" ref="0x2b08bcbc7020"/>
        <function-ref name="Cmp" scoped="" ref="0x2b08bcbc71a8"/>
        <function-ref name="ModBarrettInit" scoped="" ref="0x2b08bcbc7330"/>
        <function-ref name="AssignDigit" scoped="" ref="0x2b08bcbc75b8"/>
        <function-ref name="BarrettSetBuf" scoped="" ref="0x2b08bcbc7740"/>
        <function-ref name="ModMult" scoped="" ref="0x2b08bcbc78c8"/>
        <function-ref name="Sub" scoped="" ref="0x2b08bcbc7a50"/>
        <function-ref name="Mult" scoped="" ref="0x2b08bcbc7bd8"/>
        <function-ref name="ModMultOpt" scoped="" ref="0x2b08bcbc7d60"/>
        <function-ref name="Assign" scoped="" ref="0x2b08bcbc6020"/>
        <function-ref name="Decode" scoped="" ref="0x2b08bcbc61a8"/>
        <function-ref name="Encode" scoped="" ref="0x2b08bcbc6330"/>
        <function-ref name="Assign2Exp" scoped="" ref="0x2b08bcbc64b8"/>
        <function-ref name="Mod" scoped="" ref="0x2b08bcbc6640"/>
        <function-ref name="ModSqrRootOpt" scoped="" ref="0x2b08bcbc67c8"/>
        <function-ref name="Div" scoped="" ref="0x2b08bcbc6b50"/>
        <function-ref name="Add" scoped="" ref="0x2b08bcbc6cd8"/>
        <function-ref name="ModAdd" scoped="" ref="0x2b08bcbc6e60"/>
        <function-ref name="One" scoped="" ref="0x2b08bcbc5020"/>
        <function-ref name="Bits" scoped="" ref="0x2b08bcbc51a8"/>
        <function-ref name="TestBit" scoped="" ref="0x2b08bcbc5330"/>
        <function-ref name="Equal" scoped="" ref="0x2b08bcbc54b8"/>
        <function-ref name="ModSqrOpt" scoped="" ref="0x2b08bcbc5640"/>
        <function-ref name="AssignZero" scoped="" ref="0x2b08bcbc57c8"/>
        <function-ref name="RShift" scoped="" ref="0x2b08bcbc5950"/>
        <function-ref name="ModDivOpt" scoped="" ref="0x2b08bcbc5ad8"/>
        <function-ref name="ModInv" scoped="" ref="0x2b08bcbc5c60"/>
        <function-ref name="Even" scoped="" ref="0x2b08bcbc5de8"/>
        <function-ref name="Zero" scoped="" ref="0x2b08bcbc4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CurveParam" ref="0x2b08bcd6a930" loc="46:../../CMC/TinyECC/NNM.nc">
      <component-ref qname="NNM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CurveParam" scoped="" ref="0x2b08bcd6a930"/></type-interface>
      <instance>
        <interfacedef-ref qname="CurveParam"/>
      </instance>
      <interface-functions>
        <function-ref name="get_param" scoped="" ref="0x2b08bcd6ac80"/>
        <function-ref name="omega_mul" scoped="" ref="0x2b08bcd6ae08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NN" ref="0x2b08bcd6e228" loc="45:../../CMC/TinyECC/NNM.nc">
      <component-ref qname="NNM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NN" scoped="" ref="0x2b08bcd6e228"/></type-interface>
      <instance>
        <interfacedef-ref qname="NN"/>
      </instance>
      <interface-functions>
        <function-ref name="ModSqr" scoped="" ref="0x2b08bcd6e578"/>
        <function-ref name="LShift" scoped="" ref="0x2b08bcd6e700"/>
        <function-ref name="ModSmall" scoped="" ref="0x2b08bcd6e888"/>
        <function-ref name="Gcd" scoped="" ref="0x2b08bcd6ea10"/>
        <function-ref name="ModExp" scoped="" ref="0x2b08bcd6eb98"/>
        <function-ref name="ModNeg" scoped="" ref="0x2b08bcd6ed20"/>
        <function-ref name="AddDigitMult" scoped="" ref="0x2b08bcd6d020"/>
        <function-ref name="ModBarrett" scoped="" ref="0x2b08bcd6d1a8"/>
        <function-ref name="Digits" scoped="" ref="0x2b08bcd6d330"/>
        <function-ref name="ModSub" scoped="" ref="0x2b08bcd6d4b8"/>
        <function-ref name="ModDiv" scoped="" ref="0x2b08bcd6d640"/>
        <function-ref name="Cmp" scoped="" ref="0x2b08bcd6d7c8"/>
        <function-ref name="ModBarrettInit" scoped="" ref="0x2b08bcd6d950"/>
        <function-ref name="AssignDigit" scoped="" ref="0x2b08bcd6dbd8"/>
        <function-ref name="BarrettSetBuf" scoped="" ref="0x2b08bcd6dd60"/>
        <function-ref name="ModMult" scoped="" ref="0x2b08bcd6c020"/>
        <function-ref name="Sub" scoped="" ref="0x2b08bcd6c1a8"/>
        <function-ref name="Mult" scoped="" ref="0x2b08bcd6c330"/>
        <function-ref name="ModMultOpt" scoped="" ref="0x2b08bcd6c4b8"/>
        <function-ref name="Assign" scoped="" ref="0x2b08bcd6c640"/>
        <function-ref name="Decode" scoped="" ref="0x2b08bcd6c7c8"/>
        <function-ref name="Encode" scoped="" ref="0x2b08bcd6c950"/>
        <function-ref name="Assign2Exp" scoped="" ref="0x2b08bcd6cad8"/>
        <function-ref name="Mod" scoped="" ref="0x2b08bcd6cc60"/>
        <function-ref name="ModSqrRootOpt" scoped="" ref="0x2b08bcd6cde8"/>
        <function-ref name="Div" scoped="" ref="0x2b08bcd6b220"/>
        <function-ref name="Add" scoped="" ref="0x2b08bcd6b3a8"/>
        <function-ref name="ModAdd" scoped="" ref="0x2b08bcd6b530"/>
        <function-ref name="One" scoped="" ref="0x2b08bcd6b6b8"/>
        <function-ref name="Bits" scoped="" ref="0x2b08bcd6b840"/>
        <function-ref name="TestBit" scoped="" ref="0x2b08bcd6b9c8"/>
        <function-ref name="Equal" scoped="" ref="0x2b08bcd6bb50"/>
        <function-ref name="ModSqrOpt" scoped="" ref="0x2b08bcd6bcd8"/>
        <function-ref name="AssignZero" scoped="" ref="0x2b08bcd6be60"/>
        <function-ref name="RShift" scoped="" ref="0x2b08bcd6a020"/>
        <function-ref name="ModDivOpt" scoped="" ref="0x2b08bcd6a1a8"/>
        <function-ref name="ModInv" scoped="" ref="0x2b08bcd6a330"/>
        <function-ref name="Even" scoped="" ref="0x2b08bcd6a4b8"/>
        <function-ref name="Zero" scoped="" ref="0x2b08bcd6a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2b08bcf96638" loc="64:/opt/tinyos-2.1.2/tos/system/RandomLfsrC.nc">
      <component-ref qname="RandomLfsrC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2b08bcf96638"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b08bcf96988"/>
        <function-ref name="rand32" scoped="" ref="0x2b08bcf96b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b08bcf96020" loc="63:/opt/tinyos-2.1.2/tos/system/RandomLfsrC.nc">
      <component-ref qname="RandomLfsrC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b08bcf96020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08bcf96370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CurveParam" ref="0x2b08bcd6fc00" loc="35:../../CMC/TinyECC/secp128r1.nc">
      <component-ref qname="secp128r1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CurveParam" scoped="" ref="0x2b08bcd6fc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CurveParam"/>
      </instance>
      <interface-functions>
        <function-ref name="get_param" scoped="" ref="0x2b08bcf89020"/>
        <function-ref name="omega_mul" scoped="" ref="0x2b08bcf891a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NN" ref="0x2b08bcf89448" loc="36:../../CMC/TinyECC/secp128r1.nc">
      <component-ref qname="secp128r1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NN" scoped="" ref="0x2b08bcf89448"/></type-interface>
      <instance>
        <interfacedef-ref qname="NN"/>
      </instance>
      <interface-functions>
        <function-ref name="ModSqr" scoped="" ref="0x2b08bcf89798"/>
        <function-ref name="LShift" scoped="" ref="0x2b08bcf89920"/>
        <function-ref name="ModSmall" scoped="" ref="0x2b08bcf89aa8"/>
        <function-ref name="Gcd" scoped="" ref="0x2b08bcf89c30"/>
        <function-ref name="ModExp" scoped="" ref="0x2b08bcf89db8"/>
        <function-ref name="ModNeg" scoped="" ref="0x2b08bcf88020"/>
        <function-ref name="AddDigitMult" scoped="" ref="0x2b08bcf881a8"/>
        <function-ref name="ModBarrett" scoped="" ref="0x2b08bcf88330"/>
        <function-ref name="Digits" scoped="" ref="0x2b08bcf884b8"/>
        <function-ref name="ModSub" scoped="" ref="0x2b08bcf88640"/>
        <function-ref name="ModDiv" scoped="" ref="0x2b08bcf887c8"/>
        <function-ref name="Cmp" scoped="" ref="0x2b08bcf88950"/>
        <function-ref name="ModBarrettInit" scoped="" ref="0x2b08bcf88ad8"/>
        <function-ref name="AssignDigit" scoped="" ref="0x2b08bcf88d60"/>
        <function-ref name="BarrettSetBuf" scoped="" ref="0x2b08bcf87020"/>
        <function-ref name="ModMult" scoped="" ref="0x2b08bcf871a8"/>
        <function-ref name="Sub" scoped="" ref="0x2b08bcf87330"/>
        <function-ref name="Mult" scoped="" ref="0x2b08bcf874b8"/>
        <function-ref name="ModMultOpt" scoped="" ref="0x2b08bcf87640"/>
        <function-ref name="Assign" scoped="" ref="0x2b08bcf877c8"/>
        <function-ref name="Decode" scoped="" ref="0x2b08bcf87950"/>
        <function-ref name="Encode" scoped="" ref="0x2b08bcf87ad8"/>
        <function-ref name="Assign2Exp" scoped="" ref="0x2b08bcf87c60"/>
        <function-ref name="Mod" scoped="" ref="0x2b08bcf87de8"/>
        <function-ref name="ModSqrRootOpt" scoped="" ref="0x2b08bcf86020"/>
        <function-ref name="Div" scoped="" ref="0x2b08bcf863a8"/>
        <function-ref name="Add" scoped="" ref="0x2b08bcf86530"/>
        <function-ref name="ModAdd" scoped="" ref="0x2b08bcf866b8"/>
        <function-ref name="One" scoped="" ref="0x2b08bcf86840"/>
        <function-ref name="Bits" scoped="" ref="0x2b08bcf869c8"/>
        <function-ref name="TestBit" scoped="" ref="0x2b08bcf86b50"/>
        <function-ref name="Equal" scoped="" ref="0x2b08bcf86cd8"/>
        <function-ref name="ModSqrOpt" scoped="" ref="0x2b08bcf86e60"/>
        <function-ref name="AssignZero" scoped="" ref="0x2b08bcf85020"/>
        <function-ref name="RShift" scoped="" ref="0x2b08bcf851a8"/>
        <function-ref name="ModDivOpt" scoped="" ref="0x2b08bcf85330"/>
        <function-ref name="ModInv" scoped="" ref="0x2b08bcf854b8"/>
        <function-ref name="Even" scoped="" ref="0x2b08bcf85640"/>
        <function-ref name="Zero" scoped="" ref="0x2b08bcf857c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CurveParam" ref="0x2b08bcffd020" loc="37:../../CMC/TinyECC/secp128r2.nc">
      <component-ref qname="secp128r2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CurveParam" scoped="" ref="0x2b08bcffd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CurveParam"/>
      </instance>
      <interface-functions>
        <function-ref name="get_param" scoped="" ref="0x2b08bcffd370"/>
        <function-ref name="omega_mul" scoped="" ref="0x2b08bcffd4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NN" ref="0x2b08bcffd798" loc="38:../../CMC/TinyECC/secp128r2.nc">
      <component-ref qname="secp128r2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NN" scoped="" ref="0x2b08bcffd798"/></type-interface>
      <instance>
        <interfacedef-ref qname="NN"/>
      </instance>
      <interface-functions>
        <function-ref name="ModSqr" scoped="" ref="0x2b08bcffdae8"/>
        <function-ref name="LShift" scoped="" ref="0x2b08bcffdc70"/>
        <function-ref name="ModSmall" scoped="" ref="0x2b08bcffddf8"/>
        <function-ref name="Gcd" scoped="" ref="0x2b08bcffb020"/>
        <function-ref name="ModExp" scoped="" ref="0x2b08bcffb1a8"/>
        <function-ref name="ModNeg" scoped="" ref="0x2b08bcffb330"/>
        <function-ref name="AddDigitMult" scoped="" ref="0x2b08bcffb4b8"/>
        <function-ref name="ModBarrett" scoped="" ref="0x2b08bcffb640"/>
        <function-ref name="Digits" scoped="" ref="0x2b08bcffb7c8"/>
        <function-ref name="ModSub" scoped="" ref="0x2b08bcffb950"/>
        <function-ref name="ModDiv" scoped="" ref="0x2b08bcffbad8"/>
        <function-ref name="Cmp" scoped="" ref="0x2b08bcffbc60"/>
        <function-ref name="ModBarrettInit" scoped="" ref="0x2b08bcffbde8"/>
        <function-ref name="AssignDigit" scoped="" ref="0x2b08bcffa120"/>
        <function-ref name="BarrettSetBuf" scoped="" ref="0x2b08bcffa2a8"/>
        <function-ref name="ModMult" scoped="" ref="0x2b08bcffa430"/>
        <function-ref name="Sub" scoped="" ref="0x2b08bcffa5b8"/>
        <function-ref name="Mult" scoped="" ref="0x2b08bcffa740"/>
        <function-ref name="ModMultOpt" scoped="" ref="0x2b08bcffa8c8"/>
        <function-ref name="Assign" scoped="" ref="0x2b08bcffaa50"/>
        <function-ref name="Decode" scoped="" ref="0x2b08bcffabd8"/>
        <function-ref name="Encode" scoped="" ref="0x2b08bcffad60"/>
        <function-ref name="Assign2Exp" scoped="" ref="0x2b08bcff9020"/>
        <function-ref name="Mod" scoped="" ref="0x2b08bcff91a8"/>
        <function-ref name="ModSqrRootOpt" scoped="" ref="0x2b08bcff9330"/>
        <function-ref name="Div" scoped="" ref="0x2b08bcff96b8"/>
        <function-ref name="Add" scoped="" ref="0x2b08bcff9840"/>
        <function-ref name="ModAdd" scoped="" ref="0x2b08bcff99c8"/>
        <function-ref name="One" scoped="" ref="0x2b08bcff9b50"/>
        <function-ref name="Bits" scoped="" ref="0x2b08bcff9cd8"/>
        <function-ref name="TestBit" scoped="" ref="0x2b08bcff9e60"/>
        <function-ref name="Equal" scoped="" ref="0x2b08bcff8020"/>
        <function-ref name="ModSqrOpt" scoped="" ref="0x2b08bcff81a8"/>
        <function-ref name="AssignZero" scoped="" ref="0x2b08bcff8330"/>
        <function-ref name="RShift" scoped="" ref="0x2b08bcff84b8"/>
        <function-ref name="ModDivOpt" scoped="" ref="0x2b08bcff8640"/>
        <function-ref name="ModInv" scoped="" ref="0x2b08bcff87c8"/>
        <function-ref name="Even" scoped="" ref="0x2b08bcff8950"/>
        <function-ref name="Zero" scoped="" ref="0x2b08bcff8ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CurveParam" ref="0x2b08bd015200" loc="37:../../CMC/TinyECC/secp160k1.nc">
      <component-ref qname="secp160k1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CurveParam" scoped="" ref="0x2b08bd015200"/></type-interface>
      <instance>
        <interfacedef-ref qname="CurveParam"/>
      </instance>
      <interface-functions>
        <function-ref name="get_param" scoped="" ref="0x2b08bd015550"/>
        <function-ref name="omega_mul" scoped="" ref="0x2b08bd0156d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NN" ref="0x2b08bd015978" loc="38:../../CMC/TinyECC/secp160k1.nc">
      <component-ref qname="secp160k1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NN" scoped="" ref="0x2b08bd015978"/></type-interface>
      <instance>
        <interfacedef-ref qname="NN"/>
      </instance>
      <interface-functions>
        <function-ref name="ModSqr" scoped="" ref="0x2b08bd015cc8"/>
        <function-ref name="LShift" scoped="" ref="0x2b08bd015e50"/>
        <function-ref name="ModSmall" scoped="" ref="0x2b08bd014020"/>
        <function-ref name="Gcd" scoped="" ref="0x2b08bd0141a8"/>
        <function-ref name="ModExp" scoped="" ref="0x2b08bd014330"/>
        <function-ref name="ModNeg" scoped="" ref="0x2b08bd0144b8"/>
        <function-ref name="AddDigitMult" scoped="" ref="0x2b08bd014640"/>
        <function-ref name="ModBarrett" scoped="" ref="0x2b08bd0147c8"/>
        <function-ref name="Digits" scoped="" ref="0x2b08bd014950"/>
        <function-ref name="ModSub" scoped="" ref="0x2b08bd014ad8"/>
        <function-ref name="ModDiv" scoped="" ref="0x2b08bd014c60"/>
        <function-ref name="Cmp" scoped="" ref="0x2b08bd014de8"/>
        <function-ref name="ModBarrettInit" scoped="" ref="0x2b08bd013020"/>
        <function-ref name="AssignDigit" scoped="" ref="0x2b08bd0132a8"/>
        <function-ref name="BarrettSetBuf" scoped="" ref="0x2b08bd013430"/>
        <function-ref name="ModMult" scoped="" ref="0x2b08bd0135b8"/>
        <function-ref name="Sub" scoped="" ref="0x2b08bd013740"/>
        <function-ref name="Mult" scoped="" ref="0x2b08bd0138c8"/>
        <function-ref name="ModMultOpt" scoped="" ref="0x2b08bd013a50"/>
        <function-ref name="Assign" scoped="" ref="0x2b08bd013bd8"/>
        <function-ref name="Decode" scoped="" ref="0x2b08bd013d60"/>
        <function-ref name="Encode" scoped="" ref="0x2b08bd012020"/>
        <function-ref name="Assign2Exp" scoped="" ref="0x2b08bd0121a8"/>
        <function-ref name="Mod" scoped="" ref="0x2b08bd012330"/>
        <function-ref name="ModSqrRootOpt" scoped="" ref="0x2b08bd0124b8"/>
        <function-ref name="Div" scoped="" ref="0x2b08bd012840"/>
        <function-ref name="Add" scoped="" ref="0x2b08bd0129c8"/>
        <function-ref name="ModAdd" scoped="" ref="0x2b08bd012b50"/>
        <function-ref name="One" scoped="" ref="0x2b08bd012cd8"/>
        <function-ref name="Bits" scoped="" ref="0x2b08bd012e60"/>
        <function-ref name="TestBit" scoped="" ref="0x2b08bd011020"/>
        <function-ref name="Equal" scoped="" ref="0x2b08bd0111a8"/>
        <function-ref name="ModSqrOpt" scoped="" ref="0x2b08bd011330"/>
        <function-ref name="AssignZero" scoped="" ref="0x2b08bd0114b8"/>
        <function-ref name="RShift" scoped="" ref="0x2b08bd011640"/>
        <function-ref name="ModDivOpt" scoped="" ref="0x2b08bd0117c8"/>
        <function-ref name="ModInv" scoped="" ref="0x2b08bd011950"/>
        <function-ref name="Even" scoped="" ref="0x2b08bd011ad8"/>
        <function-ref name="Zero" scoped="" ref="0x2b08bd011c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CurveParam" ref="0x2b08bcffee18" loc="35:../../CMC/TinyECC/secp160r1.nc">
      <component-ref qname="secp160r1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CurveParam" scoped="" ref="0x2b08bcffee18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CurveParam"/>
      </instance>
      <interface-functions>
        <function-ref name="get_param" scoped="" ref="0x2b08bd0961a8"/>
        <function-ref name="omega_mul" scoped="" ref="0x2b08bd096330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NN" ref="0x2b08bd0965d0" loc="36:../../CMC/TinyECC/secp160r1.nc">
      <component-ref qname="secp160r1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NN" scoped="" ref="0x2b08bd0965d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="NN"/>
      </instance>
      <interface-functions>
        <function-ref name="ModSqr" scoped="" ref="0x2b08bd096920"/>
        <function-ref name="LShift" scoped="" ref="0x2b08bd096aa8"/>
        <function-ref name="ModSmall" scoped="" ref="0x2b08bd096c30"/>
        <function-ref name="Gcd" scoped="" ref="0x2b08bd096db8"/>
        <function-ref name="ModExp" scoped="" ref="0x2b08bd095020"/>
        <function-ref name="ModNeg" scoped="" ref="0x2b08bd0951a8"/>
        <function-ref name="AddDigitMult" scoped="" ref="0x2b08bd095330"/>
        <function-ref name="ModBarrett" scoped="" ref="0x2b08bd0954b8"/>
        <function-ref name="Digits" scoped="" ref="0x2b08bd095640"/>
        <function-ref name="ModSub" scoped="" ref="0x2b08bd0957c8"/>
        <function-ref name="ModDiv" scoped="" ref="0x2b08bd095950"/>
        <function-ref name="Cmp" scoped="" ref="0x2b08bd095ad8"/>
        <function-ref name="ModBarrettInit" scoped="" ref="0x2b08bd095c60"/>
        <function-ref name="AssignDigit" scoped="" ref="0x2b08bd094020"/>
        <function-ref name="BarrettSetBuf" scoped="" ref="0x2b08bd0941a8"/>
        <function-ref name="ModMult" scoped="" ref="0x2b08bd094330"/>
        <function-ref name="Sub" scoped="" ref="0x2b08bd0944b8"/>
        <function-ref name="Mult" scoped="" ref="0x2b08bd094640"/>
        <function-ref name="ModMultOpt" scoped="" ref="0x2b08bd0947c8"/>
        <function-ref name="Assign" scoped="" ref="0x2b08bd094950"/>
        <function-ref name="Decode" scoped="" ref="0x2b08bd094ad8"/>
        <function-ref name="Encode" scoped="" ref="0x2b08bd094c60"/>
        <function-ref name="Assign2Exp" scoped="" ref="0x2b08bd094de8"/>
        <function-ref name="Mod" scoped="" ref="0x2b08bd093020"/>
        <function-ref name="ModSqrRootOpt" scoped="" ref="0x2b08bd0931a8"/>
        <function-ref name="Div" scoped="" ref="0x2b08bd093530"/>
        <function-ref name="Add" scoped="" ref="0x2b08bd0936b8"/>
        <function-ref name="ModAdd" scoped="" ref="0x2b08bd093840"/>
        <function-ref name="One" scoped="" ref="0x2b08bd0939c8"/>
        <function-ref name="Bits" scoped="" ref="0x2b08bd093b50"/>
        <function-ref name="TestBit" scoped="" ref="0x2b08bd093cd8"/>
        <function-ref name="Equal" scoped="" ref="0x2b08bd093e60"/>
        <function-ref name="ModSqrOpt" scoped="" ref="0x2b08bd092020"/>
        <function-ref name="AssignZero" scoped="" ref="0x2b08bd0921a8"/>
        <function-ref name="RShift" scoped="" ref="0x2b08bd092330"/>
        <function-ref name="ModDivOpt" scoped="" ref="0x2b08bd0924b8"/>
        <function-ref name="ModInv" scoped="" ref="0x2b08bd092640"/>
        <function-ref name="Even" scoped="" ref="0x2b08bd0927c8"/>
        <function-ref name="Zero" scoped="" ref="0x2b08bd092950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CurveParam" ref="0x2b08bd097ac8" loc="37:../../CMC/TinyECC/secp160r2.nc">
      <component-ref qname="secp160r2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CurveParam" scoped="" ref="0x2b08bd097ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CurveParam"/>
      </instance>
      <interface-functions>
        <function-ref name="get_param" scoped="" ref="0x2b08bd097e18"/>
        <function-ref name="omega_mul" scoped="" ref="0x2b08bd0ef020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NN" ref="0x2b08bd0ef2c0" loc="38:../../CMC/TinyECC/secp160r2.nc">
      <component-ref qname="secp160r2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NN" scoped="" ref="0x2b08bd0ef2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="NN"/>
      </instance>
      <interface-functions>
        <function-ref name="ModSqr" scoped="" ref="0x2b08bd0ef610"/>
        <function-ref name="LShift" scoped="" ref="0x2b08bd0ef798"/>
        <function-ref name="ModSmall" scoped="" ref="0x2b08bd0ef920"/>
        <function-ref name="Gcd" scoped="" ref="0x2b08bd0efaa8"/>
        <function-ref name="ModExp" scoped="" ref="0x2b08bd0efc30"/>
        <function-ref name="ModNeg" scoped="" ref="0x2b08bd0efdb8"/>
        <function-ref name="AddDigitMult" scoped="" ref="0x2b08bd0ee020"/>
        <function-ref name="ModBarrett" scoped="" ref="0x2b08bd0ee1a8"/>
        <function-ref name="Digits" scoped="" ref="0x2b08bd0ee330"/>
        <function-ref name="ModSub" scoped="" ref="0x2b08bd0ee4b8"/>
        <function-ref name="ModDiv" scoped="" ref="0x2b08bd0ee640"/>
        <function-ref name="Cmp" scoped="" ref="0x2b08bd0ee7c8"/>
        <function-ref name="ModBarrettInit" scoped="" ref="0x2b08bd0ee950"/>
        <function-ref name="AssignDigit" scoped="" ref="0x2b08bd0eebd8"/>
        <function-ref name="BarrettSetBuf" scoped="" ref="0x2b08bd0eed60"/>
        <function-ref name="ModMult" scoped="" ref="0x2b08bd0ed020"/>
        <function-ref name="Sub" scoped="" ref="0x2b08bd0ed1a8"/>
        <function-ref name="Mult" scoped="" ref="0x2b08bd0ed330"/>
        <function-ref name="ModMultOpt" scoped="" ref="0x2b08bd0ed4b8"/>
        <function-ref name="Assign" scoped="" ref="0x2b08bd0ed640"/>
        <function-ref name="Decode" scoped="" ref="0x2b08bd0ed7c8"/>
        <function-ref name="Encode" scoped="" ref="0x2b08bd0ed950"/>
        <function-ref name="Assign2Exp" scoped="" ref="0x2b08bd0edad8"/>
        <function-ref name="Mod" scoped="" ref="0x2b08bd0edc60"/>
        <function-ref name="ModSqrRootOpt" scoped="" ref="0x2b08bd0edde8"/>
        <function-ref name="Div" scoped="" ref="0x2b08bd0ec220"/>
        <function-ref name="Add" scoped="" ref="0x2b08bd0ec3a8"/>
        <function-ref name="ModAdd" scoped="" ref="0x2b08bd0ec530"/>
        <function-ref name="One" scoped="" ref="0x2b08bd0ec6b8"/>
        <function-ref name="Bits" scoped="" ref="0x2b08bd0ec840"/>
        <function-ref name="TestBit" scoped="" ref="0x2b08bd0ec9c8"/>
        <function-ref name="Equal" scoped="" ref="0x2b08bd0ecb50"/>
        <function-ref name="ModSqrOpt" scoped="" ref="0x2b08bd0eccd8"/>
        <function-ref name="AssignZero" scoped="" ref="0x2b08bd0ece60"/>
        <function-ref name="RShift" scoped="" ref="0x2b08bd0eb020"/>
        <function-ref name="ModDivOpt" scoped="" ref="0x2b08bd0eb1a8"/>
        <function-ref name="ModInv" scoped="" ref="0x2b08bd0eb330"/>
        <function-ref name="Even" scoped="" ref="0x2b08bd0eb4b8"/>
        <function-ref name="Zero" scoped="" ref="0x2b08bd0eb640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CurveParam" ref="0x2b08bd0f0d28" loc="37:../../CMC/TinyECC/secp192k1.nc">
      <component-ref qname="secp192k1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CurveParam" scoped="" ref="0x2b08bd0f0d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CurveParam"/>
      </instance>
      <interface-functions>
        <function-ref name="get_param" scoped="" ref="0x2b08bd15f0a0"/>
        <function-ref name="omega_mul" scoped="" ref="0x2b08bd15f228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NN" ref="0x2b08bd15f4c8" loc="38:../../CMC/TinyECC/secp192k1.nc">
      <component-ref qname="secp192k1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NN" scoped="" ref="0x2b08bd15f4c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="NN"/>
      </instance>
      <interface-functions>
        <function-ref name="ModSqr" scoped="" ref="0x2b08bd15f818"/>
        <function-ref name="LShift" scoped="" ref="0x2b08bd15f9a0"/>
        <function-ref name="ModSmall" scoped="" ref="0x2b08bd15fb28"/>
        <function-ref name="Gcd" scoped="" ref="0x2b08bd15fcb0"/>
        <function-ref name="ModExp" scoped="" ref="0x2b08bd15fe38"/>
        <function-ref name="ModNeg" scoped="" ref="0x2b08bd15d020"/>
        <function-ref name="AddDigitMult" scoped="" ref="0x2b08bd15d1a8"/>
        <function-ref name="ModBarrett" scoped="" ref="0x2b08bd15d330"/>
        <function-ref name="Digits" scoped="" ref="0x2b08bd15d4b8"/>
        <function-ref name="ModSub" scoped="" ref="0x2b08bd15d640"/>
        <function-ref name="ModDiv" scoped="" ref="0x2b08bd15d7c8"/>
        <function-ref name="Cmp" scoped="" ref="0x2b08bd15d950"/>
        <function-ref name="ModBarrettInit" scoped="" ref="0x2b08bd15dad8"/>
        <function-ref name="AssignDigit" scoped="" ref="0x2b08bd15dd60"/>
        <function-ref name="BarrettSetBuf" scoped="" ref="0x2b08bd15c020"/>
        <function-ref name="ModMult" scoped="" ref="0x2b08bd15c1a8"/>
        <function-ref name="Sub" scoped="" ref="0x2b08bd15c330"/>
        <function-ref name="Mult" scoped="" ref="0x2b08bd15c4b8"/>
        <function-ref name="ModMultOpt" scoped="" ref="0x2b08bd15c640"/>
        <function-ref name="Assign" scoped="" ref="0x2b08bd15c7c8"/>
        <function-ref name="Decode" scoped="" ref="0x2b08bd15c950"/>
        <function-ref name="Encode" scoped="" ref="0x2b08bd15cad8"/>
        <function-ref name="Assign2Exp" scoped="" ref="0x2b08bd15cc60"/>
        <function-ref name="Mod" scoped="" ref="0x2b08bd15cde8"/>
        <function-ref name="ModSqrRootOpt" scoped="" ref="0x2b08bd15b020"/>
        <function-ref name="Div" scoped="" ref="0x2b08bd15b3a8"/>
        <function-ref name="Add" scoped="" ref="0x2b08bd15b530"/>
        <function-ref name="ModAdd" scoped="" ref="0x2b08bd15b6b8"/>
        <function-ref name="One" scoped="" ref="0x2b08bd15b840"/>
        <function-ref name="Bits" scoped="" ref="0x2b08bd15b9c8"/>
        <function-ref name="TestBit" scoped="" ref="0x2b08bd15bb50"/>
        <function-ref name="Equal" scoped="" ref="0x2b08bd15bcd8"/>
        <function-ref name="ModSqrOpt" scoped="" ref="0x2b08bd15be60"/>
        <function-ref name="AssignZero" scoped="" ref="0x2b08bd15a020"/>
        <function-ref name="RShift" scoped="" ref="0x2b08bd15a1a8"/>
        <function-ref name="ModDivOpt" scoped="" ref="0x2b08bd15a330"/>
        <function-ref name="ModInv" scoped="" ref="0x2b08bd15a4b8"/>
        <function-ref name="Even" scoped="" ref="0x2b08bd15a640"/>
        <function-ref name="Zero" scoped="" ref="0x2b08bd15a7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CurveParam" ref="0x2b08bd1792a0" loc="37:../../CMC/TinyECC/secp192r1.nc">
      <component-ref qname="secp192r1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CurveParam" scoped="" ref="0x2b08bd1792a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CurveParam"/>
      </instance>
      <interface-functions>
        <function-ref name="get_param" scoped="" ref="0x2b08bd1795f0"/>
        <function-ref name="omega_mul" scoped="" ref="0x2b08bd179778"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NN" ref="0x2b08bd179a18" loc="38:../../CMC/TinyECC/secp192r1.nc">
      <component-ref qname="secp192r1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NN" scoped="" ref="0x2b08bd179a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="NN"/>
      </instance>
      <interface-functions>
        <function-ref name="ModSqr" scoped="" ref="0x2b08bd179d68"/>
        <function-ref name="LShift" scoped="" ref="0x2b08bd178020"/>
        <function-ref name="ModSmall" scoped="" ref="0x2b08bd1781a8"/>
        <function-ref name="Gcd" scoped="" ref="0x2b08bd178330"/>
        <function-ref name="ModExp" scoped="" ref="0x2b08bd1784b8"/>
        <function-ref name="ModNeg" scoped="" ref="0x2b08bd178640"/>
        <function-ref name="AddDigitMult" scoped="" ref="0x2b08bd1787c8"/>
        <function-ref name="ModBarrett" scoped="" ref="0x2b08bd178950"/>
        <function-ref name="Digits" scoped="" ref="0x2b08bd178ad8"/>
        <function-ref name="ModSub" scoped="" ref="0x2b08bd178c60"/>
        <function-ref name="ModDiv" scoped="" ref="0x2b08bd178de8"/>
        <function-ref name="Cmp" scoped="" ref="0x2b08bd177020"/>
        <function-ref name="ModBarrettInit" scoped="" ref="0x2b08bd1771a8"/>
        <function-ref name="AssignDigit" scoped="" ref="0x2b08bd177430"/>
        <function-ref name="BarrettSetBuf" scoped="" ref="0x2b08bd1775b8"/>
        <function-ref name="ModMult" scoped="" ref="0x2b08bd177740"/>
        <function-ref name="Sub" scoped="" ref="0x2b08bd1778c8"/>
        <function-ref name="Mult" scoped="" ref="0x2b08bd177a50"/>
        <function-ref name="ModMultOpt" scoped="" ref="0x2b08bd177bd8"/>
        <function-ref name="Assign" scoped="" ref="0x2b08bd177d60"/>
        <function-ref name="Decode" scoped="" ref="0x2b08bd176020"/>
        <function-ref name="Encode" scoped="" ref="0x2b08bd1761a8"/>
        <function-ref name="Assign2Exp" scoped="" ref="0x2b08bd176330"/>
        <function-ref name="Mod" scoped="" ref="0x2b08bd1764b8"/>
        <function-ref name="ModSqrRootOpt" scoped="" ref="0x2b08bd176640"/>
        <function-ref name="Div" scoped="" ref="0x2b08bd1769c8"/>
        <function-ref name="Add" scoped="" ref="0x2b08bd176b50"/>
        <function-ref name="ModAdd" scoped="" ref="0x2b08bd176cd8"/>
        <function-ref name="One" scoped="" ref="0x2b08bd176e60"/>
        <function-ref name="Bits" scoped="" ref="0x2b08bd175020"/>
        <function-ref name="TestBit" scoped="" ref="0x2b08bd1751a8"/>
        <function-ref name="Equal" scoped="" ref="0x2b08bd175330"/>
        <function-ref name="ModSqrOpt" scoped="" ref="0x2b08bd1754b8"/>
        <function-ref name="AssignZero" scoped="" ref="0x2b08bd175640"/>
        <function-ref name="RShift" scoped="" ref="0x2b08bd1757c8"/>
        <function-ref name="ModDivOpt" scoped="" ref="0x2b08bd175950"/>
        <function-ref name="ModInv" scoped="" ref="0x2b08bd175ad8"/>
        <function-ref name="Even" scoped="" ref="0x2b08bd175c60"/>
        <function-ref name="Zero" scoped="" ref="0x2b08bd175de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ECIES" ref="0x2b08bd1db798" loc="34:../../CMC/TinyECC/ECIESC.nc">
      <component-ref qname="ECIESC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ECIES" scoped="" ref="0x2b08bd1db798"/></type-interface>
      <instance>
        <interfacedef-ref qname="ECIES"/>
      </instance>
      <interface-functions>
        <function-ref name="decrypt" scoped="" ref="0x2b08bd1dbae8"/>
        <function-ref name="init" scoped="" ref="0x2b08bd1dbc70"/>
        <function-ref name="encrypt" scoped="" ref="0x2b08bd1dbdf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHA1" ref="0x2b08bd1d8cb0" loc="43:../../CMC/TinyECC/SHA1M.nc">
      <component-ref qname="SHA1M"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHA1" scoped="" ref="0x2b08bd1d8cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SHA1"/>
      </instance>
      <interface-functions>
        <function-ref name="reset" scoped="" ref="0x2b08bd1d40a0"/>
        <function-ref name="update" scoped="" ref="0x2b08bd1d4228"/>
        <function-ref name="digest" scoped="" ref="0x2b08bd1d43b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SHA1" ref="0x2b08bd245e50" loc="40:../../CMC/TinyECC/ECIESM.nc">
      <component-ref qname="ECIESM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHA1" scoped="" ref="0x2b08bd245e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SHA1"/>
      </instance>
      <interface-functions>
        <function-ref name="reset" scoped="" ref="0x2b08bd2431e8"/>
        <function-ref name="update" scoped="" ref="0x2b08bd243370"/>
        <function-ref name="digest" scoped="" ref="0x2b08bd2434f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ECC" ref="0x2b08bd247d40" loc="39:../../CMC/TinyECC/ECIESM.nc">
      <component-ref qname="ECIESM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ECC" scoped="" ref="0x2b08bd247d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ECC"/>
      </instance>
      <interface-functions>
        <function-ref name="get_param" scoped="" ref="0x2b08bd2460d8"/>
        <function-ref name="point2octet" scoped="" ref="0x2b08bd246260"/>
        <function-ref name="win_mul" scoped="" ref="0x2b08bd2463e8"/>
        <function-ref name="gen_private_key" scoped="" ref="0x2b08bd246570"/>
        <function-ref name="win_mul_Z" scoped="" ref="0x2b08bd2466f8"/>
        <function-ref name="octet2point" scoped="" ref="0x2b08bd246880"/>
        <function-ref name="init" scoped="" ref="0x2b08bd246a08"/>
        <function-ref name="add_proj" scoped="" ref="0x2b08bd246b90"/>
        <function-ref name="point_is_zero" scoped="" ref="0x2b08bd246d18"/>
        <function-ref name="mul" scoped="" ref="0x2b08bd245020"/>
        <function-ref name="dbl_proj" scoped="" ref="0x2b08bd2451a8"/>
        <function-ref name="win_mul_base" scoped="" ref="0x2b08bd245330"/>
        <function-ref name="check_point" scoped="" ref="0x2b08bd2454b8"/>
        <function-ref name="win_precompute_Z" scoped="" ref="0x2b08bd245740"/>
        <function-ref name="add" scoped="" ref="0x2b08bd2458c8"/>
        <function-ref name="gen_public_key" scoped="" ref="0x2b08bd245a50"/>
        <function-ref name="win_precompute" scoped="" ref="0x2b08bd245bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NN" ref="0x2b08bd24b778" loc="38:../../CMC/TinyECC/ECIESM.nc">
      <component-ref qname="ECIESM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NN" scoped="" ref="0x2b08bd24b778"/></type-interface>
      <instance>
        <interfacedef-ref qname="NN"/>
      </instance>
      <interface-functions>
        <function-ref name="ModSqr" scoped="" ref="0x2b08bd24bac8"/>
        <function-ref name="LShift" scoped="" ref="0x2b08bd24bc50"/>
        <function-ref name="ModSmall" scoped="" ref="0x2b08bd24bdd8"/>
        <function-ref name="Gcd" scoped="" ref="0x2b08bd24a020"/>
        <function-ref name="ModExp" scoped="" ref="0x2b08bd24a1a8"/>
        <function-ref name="ModNeg" scoped="" ref="0x2b08bd24a330"/>
        <function-ref name="AddDigitMult" scoped="" ref="0x2b08bd24a4b8"/>
        <function-ref name="ModBarrett" scoped="" ref="0x2b08bd24a640"/>
        <function-ref name="Digits" scoped="" ref="0x2b08bd24a7c8"/>
        <function-ref name="ModSub" scoped="" ref="0x2b08bd24a950"/>
        <function-ref name="ModDiv" scoped="" ref="0x2b08bd24aad8"/>
        <function-ref name="Cmp" scoped="" ref="0x2b08bd24ac60"/>
        <function-ref name="ModBarrettInit" scoped="" ref="0x2b08bd24ade8"/>
        <function-ref name="AssignDigit" scoped="" ref="0x2b08bd249120"/>
        <function-ref name="BarrettSetBuf" scoped="" ref="0x2b08bd2492a8"/>
        <function-ref name="ModMult" scoped="" ref="0x2b08bd249430"/>
        <function-ref name="Sub" scoped="" ref="0x2b08bd2495b8"/>
        <function-ref name="Mult" scoped="" ref="0x2b08bd249740"/>
        <function-ref name="ModMultOpt" scoped="" ref="0x2b08bd2498c8"/>
        <function-ref name="Assign" scoped="" ref="0x2b08bd249a50"/>
        <function-ref name="Decode" scoped="" ref="0x2b08bd249bd8"/>
        <function-ref name="Encode" scoped="" ref="0x2b08bd249d60"/>
        <function-ref name="Assign2Exp" scoped="" ref="0x2b08bd248020"/>
        <function-ref name="Mod" scoped="" ref="0x2b08bd2481a8"/>
        <function-ref name="ModSqrRootOpt" scoped="" ref="0x2b08bd248330"/>
        <function-ref name="Div" scoped="" ref="0x2b08bd2486b8"/>
        <function-ref name="Add" scoped="" ref="0x2b08bd248840"/>
        <function-ref name="ModAdd" scoped="" ref="0x2b08bd2489c8"/>
        <function-ref name="One" scoped="" ref="0x2b08bd248b50"/>
        <function-ref name="Bits" scoped="" ref="0x2b08bd248cd8"/>
        <function-ref name="TestBit" scoped="" ref="0x2b08bd248e60"/>
        <function-ref name="Equal" scoped="" ref="0x2b08bd247020"/>
        <function-ref name="ModSqrOpt" scoped="" ref="0x2b08bd2471a8"/>
        <function-ref name="AssignZero" scoped="" ref="0x2b08bd247330"/>
        <function-ref name="RShift" scoped="" ref="0x2b08bd2474b8"/>
        <function-ref name="ModDivOpt" scoped="" ref="0x2b08bd247640"/>
        <function-ref name="ModInv" scoped="" ref="0x2b08bd2477c8"/>
        <function-ref name="Even" scoped="" ref="0x2b08bd247950"/>
        <function-ref name="Zero" scoped="" ref="0x2b08bd247ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ECIES" ref="0x2b08bd1d6e28" loc="36:../../CMC/TinyECC/ECIESM.nc">
      <component-ref qname="ECIESM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ECIES" scoped="" ref="0x2b08bd1d6e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="ECIES"/>
      </instance>
      <interface-functions>
        <function-ref name="decrypt" scoped="" ref="0x2b08bd24b1a8"/>
        <function-ref name="init" scoped="" ref="0x2b08bd24b330"/>
        <function-ref name="encrypt" scoped="" ref="0x2b08bd24b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OCBMode" ref="0x2b08bd270690" loc="7:../../CMC/crypto/OCBModeC.nc">
      <component-ref qname="OCBModeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OCBMode" scoped="" ref="0x2b08bd270690"/></type-interface>
      <instance>
        <interfacedef-ref qname="OCBMode"/>
      </instance>
      <interface-functions>
        <function-ref name="decrypt" scoped="" ref="0x2b08bd2709e0"/>
        <function-ref name="init" scoped="" ref="0x2b08bd270b68"/>
        <function-ref name="set_counter" scoped="" ref="0x2b08bd270cf0"/>
        <function-ref name="get_counter" scoped="" ref="0x2b08bd270e78"/>
        <function-ref name="encrypt" scoped="" ref="0x2b08bd2d8030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OCBMode" ref="0x2b08bd2d8b40" loc="44:../../CMC/crypto/OCBModeM.nc">
      <component-ref qname="OCBModeM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OCBMode" scoped="" ref="0x2b08bd2d8b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="OCBMode"/>
      </instance>
      <interface-functions>
        <function-ref name="decrypt" scoped="" ref="0x2b08bd2d5020"/>
        <function-ref name="init" scoped="" ref="0x2b08bd2d51a8"/>
        <function-ref name="set_counter" scoped="" ref="0x2b08bd2d5330"/>
        <function-ref name="get_counter" scoped="" ref="0x2b08bd2d54b8"/>
        <function-ref name="encrypt" scoped="" ref="0x2b08bd2d5640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockCipherInfo" ref="0x2b08bd2cb2b8" loc="49:../../CMC/crypto/OCBModeM.nc">
      <component-ref qname="OCBModeM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockCipherInfo" scoped="" ref="0x2b08bd2cb2b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockCipherInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getCanDecrypt" scoped="" ref="0x2b08bd2cb608"/>
        <function-ref name="getMaxKeyLength" scoped="" ref="0x2b08bd2cb790"/>
        <function-ref name="getPreferredBlockSize" scoped="" ref="0x2b08bd2cb918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockCipher" ref="0x2b08bd2cec68" loc="48:../../CMC/crypto/OCBModeM.nc">
      <component-ref qname="OCBModeM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockCipher" scoped="" ref="0x2b08bd2cec68"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockCipher"/>
      </instance>
      <interface-functions>
        <function-ref name="decrypt" scoped="" ref="0x2b08bd2d4020"/>
        <function-ref name="init" scoped="" ref="0x2b08bd2d41a8"/>
        <function-ref name="encrypt" scoped="" ref="0x2b08bd2d4330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockCipherInfo" ref="0x2b08bd2d7ce8" loc="20:../../CMC/crypto/AES128M.nc">
      <component-ref qname="AES128M"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockCipherInfo" scoped="" ref="0x2b08bd2d7ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockCipherInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getCanDecrypt" scoped="" ref="0x2b08bd31b0a0"/>
        <function-ref name="getMaxKeyLength" scoped="" ref="0x2b08bd31b228"/>
        <function-ref name="getPreferredBlockSize" scoped="" ref="0x2b08bd31b3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockCipher" ref="0x2b08bd2d7368" loc="19:../../CMC/crypto/AES128M.nc">
      <component-ref qname="AES128M"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockCipher" scoped="" ref="0x2b08bd2d7368"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockCipher"/>
      </instance>
      <interface-functions>
        <function-ref name="decrypt" scoped="" ref="0x2b08bd2d76b8"/>
        <function-ref name="init" scoped="" ref="0x2b08bd2d7840"/>
        <function-ref name="encrypt" scoped="" ref="0x2b08bd2d79c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b08bd2d95b8" loc="46:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b08bd2d95b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b08bd2d9908"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b08bd2d9a90"/>
        <function-ref name="led1On" scoped="" ref="0x2b08bd2d9c18"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b08bd2d9da0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b08bd40a020"/>
        <function-ref name="get" scoped="" ref="0x2b08bd40a1a8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b08bd40a330"/>
        <function-ref name="led2Off" scoped="" ref="0x2b08bd40a950"/>
        <function-ref name="set" scoped="" ref="0x2b08bd40a4b8"/>
        <function-ref name="led0On" scoped="" ref="0x2b08bd40a640"/>
        <function-ref name="led2On" scoped="" ref="0x2b08bd40a7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x2b08bd405540" loc="50:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2b08bd405540"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bd405890"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bd405a18"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bd405ba0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bd405d28"/>
        <function-ref name="get" scoped="" ref="0x2b08bd404020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bd4041a8"/>
        <function-ref name="set" scoped="" ref="0x2b08bd404330"/>
        <function-ref name="clr" scoped="" ref="0x2b08bd4044b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b08bd409838" loc="46:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b08bd409838"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08bd409b88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x2b08bd4047d0" loc="51:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2b08bd4047d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bd404b20"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bd404ca8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bd404e30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bd403020"/>
        <function-ref name="get" scoped="" ref="0x2b08bd4031a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bd403330"/>
        <function-ref name="set" scoped="" ref="0x2b08bd4034b8"/>
        <function-ref name="clr" scoped="" ref="0x2b08bd403640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b08bd409e00" loc="47:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b08bd409e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b08bd4061a8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b08bd406330"/>
        <function-ref name="led1On" scoped="" ref="0x2b08bd4064b8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b08bd406640"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b08bd4067c8"/>
        <function-ref name="get" scoped="" ref="0x2b08bd406950"/>
        <function-ref name="led1Off" scoped="" ref="0x2b08bd406ad8"/>
        <function-ref name="led2Off" scoped="" ref="0x2b08bd4051a8"/>
        <function-ref name="set" scoped="" ref="0x2b08bd406c60"/>
        <function-ref name="led0On" scoped="" ref="0x2b08bd406de8"/>
        <function-ref name="led2On" scoped="" ref="0x2b08bd405020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x2b08bd403958" loc="52:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2b08bd403958"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bd403ca8"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bd403e30"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bd402020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bd4021a8"/>
        <function-ref name="get" scoped="" ref="0x2b08bd402330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bd4024b8"/>
        <function-ref name="set" scoped="" ref="0x2b08bd402640"/>
        <function-ref name="clr" scoped="" ref="0x2b08bd4027c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x2b08bd407d70" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2b08bd407d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bd45a0f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bd45a278"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bd45a400"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bd45a588"/>
        <function-ref name="get" scoped="" ref="0x2b08bd45a710"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bd45a898"/>
        <function-ref name="set" scoped="" ref="0x2b08bd45aa20"/>
        <function-ref name="clr" scoped="" ref="0x2b08bd45aba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x2b08bd459020" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2b08bd459020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bd459370"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bd4594f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bd459680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bd459808"/>
        <function-ref name="get" scoped="" ref="0x2b08bd459990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bd459b18"/>
        <function-ref name="set" scoped="" ref="0x2b08bd459ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b08bd459e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x2b08bd4572d8" loc="47:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b08bd4572d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08bd457628"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x2b08bd4581b0" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2b08bd4581b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b08bd458500"/>
        <function-ref name="isInput" scoped="" ref="0x2b08bd458688"/>
        <function-ref name="toggle" scoped="" ref="0x2b08bd458810"/>
        <function-ref name="isOutput" scoped="" ref="0x2b08bd458998"/>
        <function-ref name="get" scoped="" ref="0x2b08bd458b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b08bd458ca8"/>
        <function-ref name="set" scoped="" ref="0x2b08bd458e30"/>
        <function-ref name="clr" scoped="" ref="0x2b08bd457020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2b08bd447980" loc="39:/opt/tinyos-2.1.2/tos/lib/printf/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b08bd447980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b08bd447cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x2b08bd4440e8" loc="40:/opt/tinyos-2.1.2/tos/lib/printf/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x2b08bd4440e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b08bd444438"/>
        <function-ref name="stopDone" scoped="" ref="0x2b08bd4445c0"/>
        <function-ref name="start" scoped="" ref="0x2b08bd444748"/>
        <function-ref name="stop" scoped="" ref="0x2b08bd4448d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b08bd4465b0" loc="46:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b08bd4465b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b08bd446900"/>
        <function-ref name="stopDone" scoped="" ref="0x2b08bd446a88"/>
        <function-ref name="start" scoped="" ref="0x2b08bd446c10"/>
        <function-ref name="stop" scoped="" ref="0x2b08bd446d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b08bd43c570" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b08bd43c570"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b08bbdaed78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08bd43c8c0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b08bd43ca48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08bd43cbd0"/>
        <function-ref name="cancel" scoped="" ref="0x2b08bd43cd58"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08bd43b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b08bd43bd78" loc="49:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b08bd43bd78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08bd43a0f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b08bd43a278"/>
        <function-ref name="getPayload" scoped="" ref="0x2b08bd43a400"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08bd43a588"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b08bd43a710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b08bd43b7a0" loc="48:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b08bd43b7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b08bbdaed78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08bd43baf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b08bd438ad8" loc="53:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b08bd438ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b08bd438e28"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b08bd437020"/>
        <function-ref name="led1On" scoped="" ref="0x2b08bd4371a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b08bd437330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b08bd4374b8"/>
        <function-ref name="get" scoped="" ref="0x2b08bd437640"/>
        <function-ref name="led1Off" scoped="" ref="0x2b08bd4377c8"/>
        <function-ref name="led2Off" scoped="" ref="0x2b08bd437de8"/>
        <function-ref name="set" scoped="" ref="0x2b08bd437950"/>
        <function-ref name="led0On" scoped="" ref="0x2b08bd437ad8"/>
        <function-ref name="led2On" scoped="" ref="0x2b08bd437c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b08bd4381a0" loc="51:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b08bd4381a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b08bd4384f0"/>
        <function-ref name="noAck" scoped="" ref="0x2b08bd438678"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b08bd438800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b08bd43a9b0" loc="50:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b08bd43a9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b08bd43ad00"/>
        <function-ref name="source" scoped="" ref="0x2b08bd439020"/>
        <function-ref name="address" scoped="" ref="0x2b08bd4391a8"/>
        <function-ref name="destination" scoped="" ref="0x2b08bd439330"/>
        <function-ref name="setSource" scoped="" ref="0x2b08bd4394b8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b08bd439640"/>
        <function-ref name="type" scoped="" ref="0x2b08bd4397c8"/>
        <function-ref name="setType" scoped="" ref="0x2b08bd439950"/>
        <function-ref name="isForMe" scoped="" ref="0x2b08bd439ad8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b08bd439c60"/>
        <function-ref name="localGroup" scoped="" ref="0x2b08bd439de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b08bd4c5308" loc="54:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b08bd4c5308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08bd4c5658"/>
        <function-ref name="getPayload" scoped="" ref="0x2b08bd4c57e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08bd4c5968"/>
        <function-ref name="cancel" scoped="" ref="0x2b08bd4c5af0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08bd4c5c78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b08bd4c4020" loc="55:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b08bd4c4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08bd4c4370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b08bd434460" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b08bd434460"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b08bbdaed78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08bd4347d0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b08bd434958"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08bd434ae0"/>
        <function-ref name="cancel" scoped="" ref="0x2b08bd434c68"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08bd434df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b08bd4c7d20" loc="50:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b08bd4c7d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08bd4c60a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b08bd4c6228"/>
        <function-ref name="getPayload" scoped="" ref="0x2b08bd4c63b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08bd4c6538"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b08bd4c66c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b08bd4c9180" loc="48:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b08bd4c9180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b08bbdaed78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08bd4c94f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b08bd4c6908" loc="51:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b08bd4c6908"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b08bd4c6c58"/>
        <function-ref name="noAck" scoped="" ref="0x2b08bd4c6de0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b08bd4c5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b08bd4c9738" loc="49:/opt/tinyos-2.1.2/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b08bd4c9738"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b08bd4c9a88"/>
        <function-ref name="source" scoped="" ref="0x2b08bd4c9c10"/>
        <function-ref name="address" scoped="" ref="0x2b08bd4c9d98"/>
        <function-ref name="destination" scoped="" ref="0x2b08bd4c7020"/>
        <function-ref name="setSource" scoped="" ref="0x2b08bd4c71a8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b08bd4c7330"/>
        <function-ref name="type" scoped="" ref="0x2b08bd4c74b8"/>
        <function-ref name="setType" scoped="" ref="0x2b08bd4c7640"/>
        <function-ref name="isForMe" scoped="" ref="0x2b08bd4c77c8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b08bd4c7950"/>
        <function-ref name="localGroup" scoped="" ref="0x2b08bd4c7ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b08bd4c0728" loc="50:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b08bd4c0728"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b08bd4c0a78"/>
        <function-ref name="stopDone" scoped="" ref="0x2b08bd4c0c00"/>
        <function-ref name="start" scoped="" ref="0x2b08bd4c0d88"/>
        <function-ref name="stop" scoped="" ref="0x2b08bd4bf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b08bd4be208" loc="52:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b08bd4be208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b08bbdbc8b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08bd4be558"/>
        <function-ref name="getPayload" scoped="" ref="0x2b08bd4be6e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08bd4be868"/>
        <function-ref name="cancel" scoped="" ref="0x2b08bd4be9f0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08bd4beb78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b08bd4c0110" loc="49:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b08bd4c0110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08bd4c0460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b08bd4bf760" loc="51:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b08bd4bf760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b08bbdbc8b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08bd4bfab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b08bd4bb8f8" loc="56:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b08bd4bb8f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b08bd4bbc48"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b08bd4bbdd0"/>
        <function-ref name="led1On" scoped="" ref="0x2b08bd4b9020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b08bd4b91a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b08bd4b9330"/>
        <function-ref name="get" scoped="" ref="0x2b08bd4b94b8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b08bd4b9640"/>
        <function-ref name="led2Off" scoped="" ref="0x2b08bd4b9c60"/>
        <function-ref name="set" scoped="" ref="0x2b08bd4b97c8"/>
        <function-ref name="led0On" scoped="" ref="0x2b08bd4b9950"/>
        <function-ref name="led2On" scoped="" ref="0x2b08bd4b9ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x2b08bd4bb020" loc="55:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0x2b08bd4bb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b08bbdbc8b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2b08bd4bb370"/>
        <function-ref name="offset" scoped="" ref="0x2b08bd4bb4f8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2b08bd4bb680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b08bd50cda8" loc="66:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b08bd50cda8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b08bd50b170"/>
        <function-ref name="stopDone" scoped="" ref="0x2b08bd50b2f8"/>
        <function-ref name="start" scoped="" ref="0x2b08bd50b480"/>
        <function-ref name="stop" scoped="" ref="0x2b08bd50b608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x2b08bd51cdd0" loc="332:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDoneTask" scoped="" ref="0x2b08bd51cdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b08bd51b170"/>
        <function-ref name="runTask" scoped="" ref="0x2b08bd51b2f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x2b08bd4f7b00" loc="74:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x2b08bd4f7b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b08bd4f7e50"/>
        <function-ref name="stop" scoped="" ref="0x2b08bd4f9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x2b08bd4dd8e0" loc="191:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunTx" scoped="" ref="0x2b08bd4dd8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b08bd4ddc30"/>
        <function-ref name="runTask" scoped="" ref="0x2b08bd4dddb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b08bd50c790" loc="65:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b08bd50c790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08bd50cae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x2b08bd4f5608" loc="75:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFlush" scoped="" ref="0x2b08bd4f5608"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x2b08bd4f5958"/>
        <function-ref name="flush" scoped="" ref="0x2b08bd4f5ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x2b08bd51f590" loc="322:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDoneTask" scoped="" ref="0x2b08bd51f590"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b08bd51f8e0"/>
        <function-ref name="runTask" scoped="" ref="0x2b08bd51fa68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x2b08bd4fcb38" loc="72:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x2b08bd4fcb38"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x2b08bd504020"/>
        <function-ref name="resetSend" scoped="" ref="0x2b08bd5041a8"/>
        <function-ref name="dataReceived" scoped="" ref="0x2b08bd504330"/>
        <function-ref name="resetReceive" scoped="" ref="0x2b08bd5044b8"/>
        <function-ref name="putData" scoped="" ref="0x2b08bd504640"/>
        <function-ref name="putDone" scoped="" ref="0x2b08bd5047c8"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x2b08bd504950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b08bd504bc8" loc="73:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b08bd504bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b08bd500020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b08bd5001a8"/>
        <function-ref name="led1On" scoped="" ref="0x2b08bd500330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b08bd5004b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b08bd500640"/>
        <function-ref name="get" scoped="" ref="0x2b08bd5007c8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b08bd500950"/>
        <function-ref name="led2Off" scoped="" ref="0x2b08bd4fa020"/>
        <function-ref name="set" scoped="" ref="0x2b08bd500ad8"/>
        <function-ref name="led0On" scoped="" ref="0x2b08bd500c60"/>
        <function-ref name="led2On" scoped="" ref="0x2b08bd500de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x2b08bd518020" loc="341:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x2b08bd518020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b08bd518370"/>
        <function-ref name="runTask" scoped="" ref="0x2b08bd5184f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x2b08bd505950" loc="67:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x2b08bd505950"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x2b08bd505ca0"/>
        <function-ref name="nextByte" scoped="" ref="0x2b08bd505e28"/>
        <function-ref name="startSend" scoped="" ref="0x2b08bd50a020"/>
        <function-ref name="sendCompleted" scoped="" ref="0x2b08bd50a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x2b08bd502b48" loc="68:/opt/tinyos-2.1.2/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b08bd502b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x2b08bd509020"/>
        <function-ref name="byteReceived" scoped="" ref="0x2b08bd5091a8"/>
        <function-ref name="endPacket" scoped="" ref="0x2b08bd509330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x2b08bd633908" loc="275:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveTask" scoped="" ref="0x2b08bd633908"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b08bd633c58"/>
        <function-ref name="runTask" scoped="" ref="0x2b08bd633de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b08bd6376f8" loc="51:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b08bd6376f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b08bbdbc8b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08bd637a68"/>
        <function-ref name="getPayload" scoped="" ref="0x2b08bd637bf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08bd637d78"/>
        <function-ref name="cancel" scoped="" ref="0x2b08bd636020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08bd6361a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x2b08bd632100" loc="158:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalSendDone" scoped="" ref="0x2b08bd632100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b08bd632450"/>
        <function-ref name="runTask" scoped="" ref="0x2b08bd6325d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b08bd637020" loc="50:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b08bd637020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b08bbdbc8b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b08bd637390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x2b08bd6365b0" loc="54:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketInfo" scoped="" ref="0x2b08bd6365b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x2b08bbdbc8b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2b08bd636920"/>
        <function-ref name="offset" scoped="" ref="0x2b08bd636aa8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2b08bd636c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b08bd634268" loc="57:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b08bd634268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b08bd6345b8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b08bd634740"/>
        <function-ref name="led1On" scoped="" ref="0x2b08bd6348c8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b08bd634a50"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b08bd634bd8"/>
        <function-ref name="get" scoped="" ref="0x2b08bd634d60"/>
        <function-ref name="led1Off" scoped="" ref="0x2b08bd633020"/>
        <function-ref name="led2On" scoped="" ref="0x2b08bd633640"/>
        <function-ref name="set" scoped="" ref="0x2b08bd633330"/>
        <function-ref name="led2Off" scoped="" ref="0x2b08bd6331a8"/>
        <function-ref name="led0On" scoped="" ref="0x2b08bd6334b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x2b08bd635750" loc="56:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x2b08bd635750"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x2b08bd635aa0"/>
        <function-ref name="nextByte" scoped="" ref="0x2b08bd635c28"/>
        <function-ref name="startSend" scoped="" ref="0x2b08bd635db0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x2b08bd634020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x2b08bd636e78" loc="55:/opt/tinyos-2.1.2/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x2b08bd636e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x2b08bd6351f8"/>
        <function-ref name="byteReceived" scoped="" ref="0x2b08bd635380"/>
        <function-ref name="endPacket" scoped="" ref="0x2b08bd635508"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x2b08bd623c98" loc="50:/opt/tinyos-2.1.2/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2b08bd623c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08bd62b020"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b08bd62b1a8"/>
        <function-ref name="receive" scoped="" ref="0x2b08bd62b330"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b08bd62b4b8"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b08bd62b640"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b08bd62b7c8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08bd62b950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x2b08bd62e328" loc="48:/opt/tinyos-2.1.2/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x2b08bd62e328"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x2b08bd62e678"/>
        <function-ref name="resetSend" scoped="" ref="0x2b08bd62e800"/>
        <function-ref name="dataReceived" scoped="" ref="0x2b08bd62e988"/>
        <function-ref name="resetReceive" scoped="" ref="0x2b08bd62eb10"/>
        <function-ref name="putData" scoped="" ref="0x2b08bd62ec98"/>
        <function-ref name="putDone" scoped="" ref="0x2b08bd62ee20"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x2b08bd62d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b08bd62bbc8" loc="51:/opt/tinyos-2.1.2/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b08bd62bbc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b08bd62a020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b08bd62a1a8"/>
        <function-ref name="led1On" scoped="" ref="0x2b08bd62a330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b08bd62a4b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b08bd62a640"/>
        <function-ref name="get" scoped="" ref="0x2b08bd62a7c8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b08bd62a950"/>
        <function-ref name="led2Off" scoped="" ref="0x2b08bd620020"/>
        <function-ref name="set" scoped="" ref="0x2b08bd62aad8"/>
        <function-ref name="led0On" scoped="" ref="0x2b08bd62ac60"/>
        <function-ref name="led2On" scoped="" ref="0x2b08bd62ade8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2b08bd602cc8" loc="42:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x2b08bd602cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08bd6050a0"/>
        <function-ref name="receive" scoped="" ref="0x2b08bd605228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2b08bd607a80" loc="41:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2b08bd607a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08bd607dd0"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b08bd606020"/>
        <function-ref name="receive" scoped="" ref="0x2b08bd6061a8"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b08bd606330"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b08bd6064b8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b08bd606640"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08bd6067c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b08bd6072b8" loc="40:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b08bd6072b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b08bd607608"/>
        <function-ref name="stop" scoped="" ref="0x2b08bd607790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2b08bd5ff5d8" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x2b08bd5ff5d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08bd5ff928"/>
        <function-ref name="receive" scoped="" ref="0x2b08bd5ffab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2b08bd5ffda0" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2b08bd5ffda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08bd5fe170"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b08bd5fe2f8"/>
        <function-ref name="receive" scoped="" ref="0x2b08bd5fe480"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b08bd5fe608"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b08bd5fe790"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b08bd5fe918"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08bd5feaa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b08bd677080" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b08bd677080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08bbab4430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b08bbab4788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b08bb142608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b08bd677dd0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b08bd676738"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b08bd6762b0"/>
        <function-ref name="overflow" scoped="" ref="0x2b08bd676bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b08bd605db0" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b08bd605db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b08bd5ff170"/>
        <function-ref name="stop" scoped="" ref="0x2b08bd5ff2f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x2b08bd6ad430" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x2b08bd6ad430"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08bd6ad780"/>
        <function-ref name="receive" scoped="" ref="0x2b08bd6ad908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0x2b08bd6acc18" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0x2b08bd6acc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b08bd6ab020"/>
        <function-ref name="stop" scoped="" ref="0x2b08bd6ab1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b08bd673610" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b08bd673610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08bd673960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x2b08bd6adb90" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x2b08bd6adb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08bd6ac020"/>
        <function-ref name="receivedByte" scoped="" ref="0x2b08bd6ac1a8"/>
        <function-ref name="receive" scoped="" ref="0x2b08bd6ac330"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x2b08bd6ac4b8"/>
        <function-ref name="receiveDone" scoped="" ref="0x2b08bd6ac640"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x2b08bd6ac7c8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08bd6ac950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b08bd6a92d0" loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b08bd6a92d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08bbab4430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b08bbab4788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b08bb142608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b08bd6a8088"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b08bd6a8998"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b08bd6a8510"/>
        <function-ref name="overflow" scoped="" ref="0x2b08bd6a8e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUart" ref="0x2b08bd6abc10" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart" scoped="" ref="0x2b08bd6abc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b08bd6aa020"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b08bd6aa1a8"/>
        <function-ref name="rxDone" scoped="" ref="0x2b08bd6aa330"/>
        <function-ref name="txDone" scoped="" ref="0x2b08bd6aa4b8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b08bd6aa640"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b08bd6aa7c8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b08bd6aa950"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b08bd6aaad8"/>
        <function-ref name="tx" scoped="" ref="0x2b08bd6aac60"/>
        <function-ref name="rx" scoped="" ref="0x2b08bd6aade8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2b08bd673be8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2b08bd673be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b08bd6ad020"/>
        <function-ref name="stop" scoped="" ref="0x2b08bd6ad1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0x2b08bd6ab470" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0x2b08bd6ab470"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b08bd6ab7c0"/>
        <function-ref name="stop" scoped="" ref="0x2b08bd6ab948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x2b08bd68a158" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x2b08bd68a158"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b08bd68a4a8"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b08bd68a630"/>
        <function-ref name="rxDone" scoped="" ref="0x2b08bd68a7b8"/>
        <function-ref name="txDone" scoped="" ref="0x2b08bd68a940"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b08bd68aac8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b08bd68ac50"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b08bd68add8"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b08bd689020"/>
        <function-ref name="tx" scoped="" ref="0x2b08bd6891a8"/>
        <function-ref name="rx" scoped="" ref="0x2b08bd689330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x2b08bd688860" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x2b08bd688860"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b08bd688bb0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b08bd688d38"/>
        <function-ref name="rxDone" scoped="" ref="0x2b08bd687020"/>
        <function-ref name="txDone" scoped="" ref="0x2b08bd6871a8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b08bd687330"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b08bd6874b8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b08bd687640"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b08bd6877c8"/>
        <function-ref name="tx" scoped="" ref="0x2b08bd687950"/>
        <function-ref name="rx" scoped="" ref="0x2b08bd687ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x2b08bd68c8b8" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x2b08bd68c8b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b08bd68cc08"/>
        <function-ref name="stop" scoped="" ref="0x2b08bd68cd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x2b08bd6896b0" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x2b08bd6896b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b08bd689a00"/>
        <function-ref name="stop" scoped="" ref="0x2b08bd689b88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x2b08bd688020" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x2b08bd688020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b08bd688370"/>
        <function-ref name="stop" scoped="" ref="0x2b08bd6884f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x2b08bd68c060" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x2b08bd68c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b08bd68c3b0"/>
        <function-ref name="stop" scoped="" ref="0x2b08bd68c538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0Init" ref="0x2b08bd6867e0" loc="114:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0Init" scoped="" ref="0x2b08bd6867e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08bd686b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x2b08bd682158" loc="117:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x2b08bd682158"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b08bd6824a8"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b08bd682630"/>
        <function-ref name="rxDone" scoped="" ref="0x2b08bd6827b8"/>
        <function-ref name="txDone" scoped="" ref="0x2b08bd682940"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b08bd682ac8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b08bd682c50"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b08bd682dd8"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b08bd681020"/>
        <function-ref name="tx" scoped="" ref="0x2b08bd6811a8"/>
        <function-ref name="rx" scoped="" ref="0x2b08bd681330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x2b08bd681688" loc="119:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x2b08bd681688"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08bd6819d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x2b08bd67f020" loc="122:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x2b08bd67f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x2b08bd67f370"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x2b08bd67f4f8"/>
        <function-ref name="rxDone" scoped="" ref="0x2b08bd67f680"/>
        <function-ref name="txDone" scoped="" ref="0x2b08bd67f808"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x2b08bd67f990"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x2b08bd67fb18"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x2b08bd67fca0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x2b08bd67fe28"/>
        <function-ref name="tx" scoped="" ref="0x2b08bd67e020"/>
        <function-ref name="rx" scoped="" ref="0x2b08bd67e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x2b08bd6838b8" loc="116:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x2b08bd6838b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b08bd683c08"/>
        <function-ref name="stop" scoped="" ref="0x2b08bd683d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x2b08bd681d98" loc="120:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x2b08bd681d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b08bd680170"/>
        <function-ref name="stop" scoped="" ref="0x2b08bd6802f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x2b08bd6806b8" loc="121:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x2b08bd6806b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b08bd680a08"/>
        <function-ref name="stop" scoped="" ref="0x2b08bd680b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x2b08bd67e4c8" loc="124:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b08bd67e4c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b08bd67e818"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b08bd67e9a0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b08bd67eb28"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b08bd67ecb0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b08bd67ee38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x2b08bd67d1a8" loc="125:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b08bd67d1a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b08bd67d4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x2b08bd683020" loc="115:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x2b08bd683020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b08bd683370"/>
        <function-ref name="stop" scoped="" ref="0x2b08bd6834f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b08bd71ba88" loc="24:/opt/tinyos-2.1.2/tos/platforms/mica/CounterMicro32C.nc">
      <component-ref qname="CounterMicro32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b08bd71ba88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08bbab4430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b08bbab4788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b08bb142608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b08bd718828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b08bd716190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b08bd718cb0"/>
        <function-ref name="overflow" scoped="" ref="0x2b08bd716618"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b08bd7157f8" loc="24:/opt/tinyos-2.1.2/tos/platforms/mica/CounterThree16C.nc">
      <component-ref qname="CounterThree16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b08bd7157f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08bbab4430"/>
            <typename><typedef-ref name="TThree" ref="0x2b08bbb02d70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b08bd712578"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b08bd711020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b08bd712a00"/>
        <function-ref name="overflow" scoped="" ref="0x2b08bd7114a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b08bd7095d0" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b08bd7095d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x2b08bd709920"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b08bd709aa8"/>
        <function-ref name="getControlA" scoped="" ref="0x2b08bd709c30"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b08bd709db8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b08bd707020"/>
        <function-ref name="setControlB" scoped="" ref="0x2b08bd7071a8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b08bd707330"/>
        <function-ref name="getControlB" scoped="" ref="0x2b08bd7074b8"/>
        <function-ref name="setControlC" scoped="" ref="0x2b08bd707640"/>
        <function-ref name="setControlA" scoped="" ref="0x2b08bd7077c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b08bd707ca0" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2b08bd707ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2b08bd704e20"/>
        <function-ref name="test" scoped="" ref="0x2b08bd704510"/>
        <function-ref name="get" scoped="" ref="0x2b08bd706858"/>
        <function-ref name="captured" scoped="" ref="0x2b08bd705238"/>
        <function-ref name="reset" scoped="" ref="0x2b08bd705710"/>
        <function-ref name="isOn" scoped="" ref="0x2b08bd704998"/>
        <function-ref name="set" scoped="" ref="0x2b08bd706ce0"/>
        <function-ref name="start" scoped="" ref="0x2b08bd705b98"/>
        <function-ref name="stop" scoped="" ref="0x2b08bd704088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b08bd702a20" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b08bd702a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b08bd6ff270"/>
        <function-ref name="fired" scoped="" ref="0x2b08bd700020"/>
        <function-ref name="get" scoped="" ref="0x2b08bd7015d8"/>
        <function-ref name="reset" scoped="" ref="0x2b08bd7004a8"/>
        <function-ref name="isOn" scoped="" ref="0x2b08bd6ff6f8"/>
        <function-ref name="set" scoped="" ref="0x2b08bd701a60"/>
        <function-ref name="start" scoped="" ref="0x2b08bd700930"/>
        <function-ref name="stop" scoped="" ref="0x2b08bd700db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b08bd70e570" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b08bd70e570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b08bd70a6f8"/>
        <function-ref name="test" scoped="" ref="0x2b08bd70bdb8"/>
        <function-ref name="get" scoped="" ref="0x2b08bd70c130"/>
        <function-ref name="setScale" scoped="" ref="0x2b08bd70ab80"/>
        <function-ref name="getScale" scoped="" ref="0x2b08bd709088"/>
        <function-ref name="reset" scoped="" ref="0x2b08bd70b020"/>
        <function-ref name="overflow" scoped="" ref="0x2b08bd70ca90"/>
        <function-ref name="isOn" scoped="" ref="0x2b08bd70a270"/>
        <function-ref name="set" scoped="" ref="0x2b08bd70c5b8"/>
        <function-ref name="start" scoped="" ref="0x2b08bd70b4a8"/>
        <function-ref name="stop" scoped="" ref="0x2b08bd70b930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b08bd6f6c90" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b08bd6f6c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x2b08bd6f5020"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b08bd6f51a8"/>
        <function-ref name="getControlA" scoped="" ref="0x2b08bd6f5330"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b08bd6f54b8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b08bd6f5640"/>
        <function-ref name="setControlB" scoped="" ref="0x2b08bd6f57c8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b08bd6f5950"/>
        <function-ref name="getControlB" scoped="" ref="0x2b08bd6f5ad8"/>
        <function-ref name="setControlC" scoped="" ref="0x2b08bd6f5c60"/>
        <function-ref name="setControlA" scoped="" ref="0x2b08bd6f5de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x2b08bd76ec48" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x2b08bd76ec48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b08bd76a4a8"/>
        <function-ref name="fired" scoped="" ref="0x2b08bd76b1d0"/>
        <function-ref name="get" scoped="" ref="0x2b08bd76d820"/>
        <function-ref name="reset" scoped="" ref="0x2b08bd76b658"/>
        <function-ref name="isOn" scoped="" ref="0x2b08bd76a930"/>
        <function-ref name="set" scoped="" ref="0x2b08bd76dca8"/>
        <function-ref name="start" scoped="" ref="0x2b08bd76bae0"/>
        <function-ref name="stop" scoped="" ref="0x2b08bd76a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b08bd6f4350" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2b08bd6f4350"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2b08bd76e580"/>
        <function-ref name="test" scoped="" ref="0x2b08bd76fc20"/>
        <function-ref name="get" scoped="" ref="0x2b08bd771020"/>
        <function-ref name="captured" scoped="" ref="0x2b08bd771980"/>
        <function-ref name="reset" scoped="" ref="0x2b08bd771e58"/>
        <function-ref name="isOn" scoped="" ref="0x2b08bd76e0f8"/>
        <function-ref name="set" scoped="" ref="0x2b08bd7714a8"/>
        <function-ref name="start" scoped="" ref="0x2b08bd76f310"/>
        <function-ref name="stop" scoped="" ref="0x2b08bd76f798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x2b08bd769020" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x2b08bd769020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b08bd7667a8"/>
        <function-ref name="fired" scoped="" ref="0x2b08bd768560"/>
        <function-ref name="get" scoped="" ref="0x2b08bd769ba0"/>
        <function-ref name="reset" scoped="" ref="0x2b08bd7689e8"/>
        <function-ref name="isOn" scoped="" ref="0x2b08bd766c30"/>
        <function-ref name="set" scoped="" ref="0x2b08bd768088"/>
        <function-ref name="start" scoped="" ref="0x2b08bd768e70"/>
        <function-ref name="stop" scoped="" ref="0x2b08bd766320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x2b08bd765360" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x2b08bd765360"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b08bd762c20"/>
        <function-ref name="fired" scoped="" ref="0x2b08bd764980"/>
        <function-ref name="get" scoped="" ref="0x2b08bd764020"/>
        <function-ref name="reset" scoped="" ref="0x2b08bd764e08"/>
        <function-ref name="isOn" scoped="" ref="0x2b08bd7610f8"/>
        <function-ref name="set" scoped="" ref="0x2b08bd7644a8"/>
        <function-ref name="start" scoped="" ref="0x2b08bd762310"/>
        <function-ref name="stop" scoped="" ref="0x2b08bd762798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b08bd6fdbe0" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b08bd6fdbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b08bd6f7db8"/>
        <function-ref name="test" scoped="" ref="0x2b08bd6f74a8"/>
        <function-ref name="get" scoped="" ref="0x2b08bd6fa7a0"/>
        <function-ref name="setScale" scoped="" ref="0x2b08bd6f6270"/>
        <function-ref name="getScale" scoped="" ref="0x2b08bd6f6748"/>
        <function-ref name="reset" scoped="" ref="0x2b08bd6f95b8"/>
        <function-ref name="overflow" scoped="" ref="0x2b08bd6f9130"/>
        <function-ref name="isOn" scoped="" ref="0x2b08bd6f7930"/>
        <function-ref name="set" scoped="" ref="0x2b08bd6fac28"/>
        <function-ref name="start" scoped="" ref="0x2b08bd6f9a40"/>
        <function-ref name="stop" scoped="" ref="0x2b08bd6f7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b08bd7eabc8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b08bd7eabc8"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2b08bba27388"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2b08bba27388"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08bd7e9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b08bd7e93f0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b08bd7e93f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b08bd7e5580"/>
        <function-ref name="test" scoped="" ref="0x2b08bd7e6c20"/>
        <function-ref name="get" scoped="" ref="0x2b08bd7e8020"/>
        <function-ref name="setScale" scoped="" ref="0x2b08bd7e5a08"/>
        <function-ref name="getScale" scoped="" ref="0x2b08bd7e4020"/>
        <function-ref name="reset" scoped="" ref="0x2b08bd7e8e08"/>
        <function-ref name="overflow" scoped="" ref="0x2b08bd7e8980"/>
        <function-ref name="isOn" scoped="" ref="0x2b08bd7e50f8"/>
        <function-ref name="set" scoped="" ref="0x2b08bd7e84a8"/>
        <function-ref name="start" scoped="" ref="0x2b08bd7e6310"/>
        <function-ref name="stop" scoped="" ref="0x2b08bd7e6798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b08bd7edce0" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b08bd7edce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08bbab4430"/>
            <typename><typedef-ref name="TThree" ref="0x2b08bbb02d70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b08bd7e1ac0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b08bd7e04a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b08bd7e0020"/>
        <function-ref name="overflow" scoped="" ref="0x2b08bd7e0930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b08bd7df020" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b08bd7df020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b08bd7db0f8"/>
        <function-ref name="test" scoped="" ref="0x2b08bd7dc7a8"/>
        <function-ref name="get" scoped="" ref="0x2b08bd7dfba0"/>
        <function-ref name="setScale" scoped="" ref="0x2b08bd7db580"/>
        <function-ref name="getScale" scoped="" ref="0x2b08bd7dba58"/>
        <function-ref name="reset" scoped="" ref="0x2b08bd7dd9e8"/>
        <function-ref name="overflow" scoped="" ref="0x2b08bd7dd560"/>
        <function-ref name="isOn" scoped="" ref="0x2b08bd7dcc30"/>
        <function-ref name="set" scoped="" ref="0x2b08bd7dd088"/>
        <function-ref name="start" scoped="" ref="0x2b08bd7dde70"/>
        <function-ref name="stop" scoped="" ref="0x2b08bd7dc320"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2b08bd7d4c80" loc="63:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x2b08bd7d4c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08bbab4430"/>
            <typename><typedef-ref name="TThree" ref="0x2b08bbb02d70"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b08bd7d3a28"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b08bd7d24a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b08bd7d2020"/>
        <function-ref name="overflow" scoped="" ref="0x2b08bd7d2930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b08bd7d7a60" loc="62:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b08bd7d7a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b08bbab4430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b08bbab4788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b08bb142608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b08bd7d6828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b08bd7d4190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b08bd7d6cb0"/>
        <function-ref name="overflow" scoped="" ref="0x2b08bd7d4618"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x2b08bd7ca6e0" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Info" scoped="" ref="0x2b08bd7ca6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x2b08bd7caa30"/>
        <function-ref name="offset" scoped="" ref="0x2b08bd7cabb8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x2b08bd7cad40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b08bd81b1d0" loc="49:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b08bd81b1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08bd81b520"/>
        <function-ref name="getPayload" scoped="" ref="0x2b08bd81b6a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08bd81b830"/>
        <function-ref name="cancel" scoped="" ref="0x2b08bd81b9b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08bd81bb40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b08bd81bd88" loc="50:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b08bd81bd88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08bd819170"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b08bd8192f8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b08bd819480"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08bd819608"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b08bd819790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b08bd8199d8" loc="51:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b08bd8199d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b08bd819d28"/>
        <function-ref name="source" scoped="" ref="0x2b08bd818020"/>
        <function-ref name="address" scoped="" ref="0x2b08bd8181a8"/>
        <function-ref name="destination" scoped="" ref="0x2b08bd818330"/>
        <function-ref name="setSource" scoped="" ref="0x2b08bd8184b8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b08bd818640"/>
        <function-ref name="type" scoped="" ref="0x2b08bd8187c8"/>
        <function-ref name="setType" scoped="" ref="0x2b08bd818950"/>
        <function-ref name="isForMe" scoped="" ref="0x2b08bd818ad8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b08bd818c60"/>
        <function-ref name="localGroup" scoped="" ref="0x2b08bd818de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b08bd8170a0" loc="52:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="PrintfC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2b08bd8170a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b08bd8173f0"/>
        <function-ref name="noAck" scoped="" ref="0x2b08bd817578"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b08bd817700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b08bdfb65c8" loc="44:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b08bdfb65c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08bdfb6918"/>
        <function-ref name="getPayload" scoped="" ref="0x2b08bdfb6aa0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08bdfb6c28"/>
        <function-ref name="cancel" scoped="" ref="0x2b08bdfb6db0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08bdfb5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2b08bdfb52c8" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b08bdfb52c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08bdfb5618"/>
        <function-ref name="getPayload" scoped="" ref="0x2b08bdfb57a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08bdfb5928"/>
        <function-ref name="cancel" scoped="" ref="0x2b08bdfb5ab0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08bdfb5c38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b08bdfb5e80" loc="47:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="PrintfC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b08bdfb5e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b08bdfb41f8"/>
        <function-ref name="source" scoped="" ref="0x2b08bdfb4380"/>
        <function-ref name="address" scoped="" ref="0x2b08bdfb4508"/>
        <function-ref name="destination" scoped="" ref="0x2b08bdfb4690"/>
        <function-ref name="setSource" scoped="" ref="0x2b08bdfb4818"/>
        <function-ref name="setDestination" scoped="" ref="0x2b08bdfb49a0"/>
        <function-ref name="type" scoped="" ref="0x2b08bdfb4b28"/>
        <function-ref name="setType" scoped="" ref="0x2b08bdfb4cb0"/>
        <function-ref name="isForMe" scoped="" ref="0x2b08bdfb4e38"/>
        <function-ref name="setGroup" scoped="" ref="0x2b08bdfb3020"/>
        <function-ref name="localGroup" scoped="" ref="0x2b08bdfb31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b08bd82b020" loc="44:/opt/tinyos-2.1.2/tos/lib/serial/SerialAMQueueP.nc">
      <component-ref qname="SerialAMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b08bd82b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08bd82b370"/>
        <function-ref name="getPayload" scoped="" ref="0x2b08bd82b4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08bd82b680"/>
        <function-ref name="cancel" scoped="" ref="0x2b08bd82b808"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08bd82b990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x2b08bd8276f8" loc="48:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b08bd8276f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b08bbdaed78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08bd827a68"/>
        <function-ref name="getPayload" scoped="" ref="0x2b08bd827bf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08bd827d78"/>
        <function-ref name="cancel" scoped="" ref="0x2b08bd826020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08bd8261a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b08bd8288a8" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b08bd8288a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08bd828c18"/>
        <function-ref name="getPayload" scoped="" ref="0x2b08bd828da0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08bd827020"/>
        <function-ref name="cancel" scoped="" ref="0x2b08bd8271a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08bd827330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2b08bd825a10" loc="50:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b08bd825a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08bd825d60"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b08bd824020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b08bd8241a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08bd824330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b08bd8244b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x2b08bd824780" loc="169:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x2b08bd824780"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b08bd824ad0"/>
        <function-ref name="runTask" scoped="" ref="0x2b08bd824c58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x2b08bd823020" loc="126:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x2b08bd823020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b08bd823370"/>
        <function-ref name="runTask" scoped="" ref="0x2b08bd8234f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b08bd8263f0" loc="49:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b08bd8263f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b08bd826740"/>
        <function-ref name="source" scoped="" ref="0x2b08bd8268c8"/>
        <function-ref name="address" scoped="" ref="0x2b08bd826a50"/>
        <function-ref name="destination" scoped="" ref="0x2b08bd826bd8"/>
        <function-ref name="setSource" scoped="" ref="0x2b08bd826d60"/>
        <function-ref name="setDestination" scoped="" ref="0x2b08bd825020"/>
        <function-ref name="type" scoped="" ref="0x2b08bd8251a8"/>
        <function-ref name="setType" scoped="" ref="0x2b08bd825330"/>
        <function-ref name="isForMe" scoped="" ref="0x2b08bd8254b8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b08bd825640"/>
        <function-ref name="localGroup" scoped="" ref="0x2b08bd8257c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x2b08bd815808" loc="43:/opt/tinyos-2.1.2/tos/system/BigQueueC.nc">
      <component-ref qname="PrintfC.QueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b08bd815808"/></type-interface>
      <instance>
        <interfacedef-ref qname="BigQueue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x2b08bd7f60c0"/>
        <function-ref name="enqueue" scoped="" ref="0x2b08bd7f6960"/>
        <function-ref name="element" scoped="" ref="0x2b08bd7f6e00"/>
        <function-ref name="maxSize" scoped="" ref="0x2b08bd7f7c30"/>
        <function-ref name="dequeue" scoped="" ref="0x2b08bd7f6510"/>
        <function-ref name="empty" scoped="" ref="0x2b08bd7f7390"/>
        <function-ref name="size" scoped="" ref="0x2b08bd7f77e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b08bd872508" loc="93:/opt/tinyos-2.1.2/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b08bd872508"/></type-interface>
      <instance>
        <interfacedef-ref qname="BigQueue"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x2b08bd871d78"/>
        <function-ref name="enqueue" scoped="" ref="0x2b08bd86f648"/>
        <function-ref name="element" scoped="" ref="0x2b08bd86fae8"/>
        <function-ref name="maxSize" scoped="" ref="0x2b08bd871928"/>
        <function-ref name="dequeue" scoped="" ref="0x2b08bd86f1f8"/>
        <function-ref name="empty" scoped="" ref="0x2b08bd871088"/>
        <function-ref name="size" scoped="" ref="0x2b08bd8714d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x2b08bd86d020" loc="94:/opt/tinyos-2.1.2/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b08bd86d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b08bd86d370"/>
        <function-ref name="getPayload" scoped="" ref="0x2b08bd86d4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08bd86d680"/>
        <function-ref name="cancel" scoped="" ref="0x2b08bd86d808"/>
        <function-ref name="sendDone" scoped="" ref="0x2b08bd86d990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2b08bd86dc18" loc="95:/opt/tinyos-2.1.2/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b08bd86dc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b08bd86c020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b08bd86c1a8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b08bd86c330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b08bd86c4b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b08bd86c640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="retrySend" ref="0x2b08bd868c78" loc="114:/opt/tinyos-2.1.2/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="retrySend" scoped="" ref="0x2b08bd868c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b08bd866020"/>
        <function-ref name="runTask" scoped="" ref="0x2b08bd8661a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b08bd873480" loc="89:/opt/tinyos-2.1.2/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b08bd873480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08bd8737d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b08bd86c8b8" loc="96:/opt/tinyos-2.1.2/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b08bd86c8b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b08bd86cc08"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b08bd86cd90"/>
        <function-ref name="led1On" scoped="" ref="0x2b08bd86b020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b08bd86b1a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b08bd86b330"/>
        <function-ref name="get" scoped="" ref="0x2b08bd86b4b8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b08bd86b640"/>
        <function-ref name="led2Off" scoped="" ref="0x2b08bd86bc60"/>
        <function-ref name="set" scoped="" ref="0x2b08bd86b7c8"/>
        <function-ref name="led0On" scoped="" ref="0x2b08bd86b950"/>
        <function-ref name="led2On" scoped="" ref="0x2b08bd86bad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Putchar" ref="0x2b08bd870c08" loc="90:/opt/tinyos-2.1.2/tos/lib/printf/PrintfP.nc">
      <component-ref qname="PrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Putchar" scoped="" ref="0x2b08bd870c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x2b08bd872020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x2b08bd84f3e0" loc="43:/opt/tinyos-2.1.2/tos/lib/printf/PutcharC.nc">
      <component-ref qname="PutcharC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Putchar" scoped="" ref="0x2b08bd84f3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x2b08bd84f730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b08bd849e70" loc="94:/opt/tinyos-2.1.2/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b08bd849e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b08bd8481e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x2b08bd8484b8" loc="95:/opt/tinyos-2.1.2/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Putchar" scoped="" ref="0x2b08bd8484b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x2b08bd848808"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Init.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b08bbb3bbf0" loc="62:/opt/tinyos-2.1.2/tos/interfaces/Init.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x2b08bbb3c8b8" loc="60:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x2b08bbb4eb30" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b08bb142608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x2b08bbb4e8c0" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b08bb142608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x2b08bbb51328" loc="31:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x2b08bbb51d20" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b08bb142608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b08bb142608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b08bbb51ab0" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b08bb142608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x2b08bbb4f7d0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b08bb142608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b08bb142608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b08bbb4f560" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b08bb142608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x2b08bbb4e070" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2b08bbb59ab0" loc="44:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2b08bbb661d8" loc="45:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08bba209b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2b08bbb5bd20" loc="42:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2b08bbb65020" loc="47:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08bba209b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b08bbb59400" loc="43:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08bba209b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2b08bbb66890" loc="46:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b08bbb5b020" loc="40:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2b08bbb5b690" loc="41:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b08bba3e378" loc="57:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x2b08bba49258" loc="72:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x2b08bba3ea90" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08bba209b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x2b08bba4b070" loc="67:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x2b08bba4b860" loc="75:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x2b08bbb09e28" loc="76:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x2b08bbb214f8" loc="62:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x2b08bba85940"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x2b08bbb22020" loc="52:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SHA1" loc="35:../../CMC/TinyECC/SHA1.nc">
      <documentation loc="26:../../CMC/TinyECC/SHA1.nc">
        <short>&#10; Interface for SHA-1&#10; &#10; Author: An Liu&#10; Date: 09/15/2005&#10;</short>
      </documentation>
      <function command="" provided="0" name="reset" ref="0x2b08bbe54a48" loc="37:../../CMC/TinyECC/SHA1.nc">
        <interfacedef-ref qname="SHA1"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:98" alignment="I:1"><struct-ref name="SHA1Context" ref="0x2b08bbd0b448"/>
                <typename><typedef-ref name="SHA1Context" ref="0x2b08bbd1e020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="context" ref="0x2b08bbe547d8" loc="37:../../CMC/TinyECC/SHA1.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:98" alignment="I:1"><struct-ref name="SHA1Context" ref="0x2b08bbd0b448"/>
                <typename><typedef-ref name="SHA1Context" ref="0x2b08bbd1e020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="update" ref="0x2b08bbe66af8" loc="38:../../CMC/TinyECC/SHA1.nc">
        <interfacedef-ref qname="SHA1"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:98" alignment="I:1"><struct-ref name="SHA1Context" ref="0x2b08bbd0b448"/>
                <typename><typedef-ref name="SHA1Context" ref="0x2b08bbd1e020"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b08bb142608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="context" ref="0x2b08bbe66140" loc="38:../../CMC/TinyECC/SHA1.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:98" alignment="I:1"><struct-ref name="SHA1Context" ref="0x2b08bbd0b448"/>
                <typename><typedef-ref name="SHA1Context" ref="0x2b08bbd1e020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="message_array" ref="0x2b08bbe66528" loc="38:../../CMC/TinyECC/SHA1.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b08bbe66868" loc="38:../../CMC/TinyECC/SHA1.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b08bb142608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="digest" ref="0x2b08bbe65948" loc="39:../../CMC/TinyECC/SHA1.nc">
        <interfacedef-ref qname="SHA1"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:98" alignment="I:1"><struct-ref name="SHA1Context" ref="0x2b08bbd0b448"/>
                <typename><typedef-ref name="SHA1Context" ref="0x2b08bbd1e020"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="context" ref="0x2b08bbe65230" loc="39:../../CMC/TinyECC/SHA1.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:98" alignment="I:1"><struct-ref name="SHA1Context" ref="0x2b08bbd0b448"/>
                <typename><typedef-ref name="SHA1Context" ref="0x2b08bbd1e020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="Message_Digest" ref="0x2b08bbe656c8" loc="39:../../CMC/TinyECC/SHA1.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x2b08bbde3a48" loc="113:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b08bbde37d8" loc="113:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x2b08bbde2e38" loc="138:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b08bbde2bc8" loc="138:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b08bbde6c50" loc="104:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b08bbde2258" loc="130:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x2b08bbdf9600" loc="52:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x2b08bbdfce08" loc="46:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b08bb142608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CMC" loc="30:../../CMC/CMC.nc">
      <documentation loc="26:../../CMC/TinyECC/ECC.h">
        <short>&#10; $Id: ECC.h,v 1.13 2007/11/02 22:36:39 aliu3 Exp $&#10; Ecc.h&#10; define the data structure for ECC operation&#10;</short>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b08bbddb358" loc="43:../../CMC/CMC.nc">
        <interfacedef-ref qname="CMC"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest_id" ref="0x2b08bbddd9f0" loc="43:../../CMC/CMC.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2b08bbdddd00" loc="43:../../CMC/CMC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="data_len" ref="0x2b08bbddb0c8" loc="43:../../CMC/CMC.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x2b08bbdde020" loc="33:../../CMC/CMC.nc">
        <interfacedef-ref qname="CMC"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2b08bbd006d0"/>
                <typename><typedef-ref name="Point" ref="0x2b08bbd158d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="local_id" ref="0x2b08bbddf610" loc="33:../../CMC/CMC.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
            </type-int>
          </variable>
          <variable name="private_key" ref="0x2b08bbddf9b8" loc="33:../../CMC/CMC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="public_key" ref="0x2b08bbddfd38" loc="33:../../CMC/CMC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2b08bbd006d0"/>
                <typename><typedef-ref name="Point" ref="0x2b08bbd158d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="bind" ref="0x2b08bbdde958" loc="36:../../CMC/CMC.nc">
        <interfacedef-ref qname="CMC"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group_id" ref="0x2b08bbdde6e8" loc="36:../../CMC/CMC.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="connect" ref="0x2b08bbddd338" loc="40:../../CMC/CMC.nc">
        <interfacedef-ref qname="CMC"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group_id" ref="0x2b08bbddd0c8" loc="40:../../CMC/CMC.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="recv" ref="0x2b08bbdf1920" loc="61:../../CMC/CMC.nc">
        <interfacedef-ref qname="CMC"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="payload" ref="0x2b08bbdf1020" loc="61:../../CMC/CMC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="plen" ref="0x2b08bbdf1350" loc="61:../../CMC/CMC.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
            </type-int>
          </variable>
          <variable name="nodeid" ref="0x2b08bbdf1690" loc="61:../../CMC/CMC.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="connected" ref="0x2b08bbdf2020" loc="50:../../CMC/CMC.nc">
        <interfacedef-ref qname="CMC"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="e" ref="0x2b08bbddb9f0" loc="50:../../CMC/CMC.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
            </type-int>
          </variable>
          <variable name="nodeid" ref="0x2b08bbddbd30" loc="50:../../CMC/CMC.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b08bbdf28e0" loc="54:../../CMC/CMC.nc">
        <interfacedef-ref qname="CMC"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="e" ref="0x2b08bbdf2670" loc="54:../../CMC/CMC.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ECC" loc="34:../../CMC/TinyECC/ECC.nc">
      <documentation loc="26:../../CMC/TinyECC/ECC.h">
        <short>&#10; $Id: ECC.h,v 1.13 2007/11/02 22:36:39 aliu3 Exp $&#10; Ecc.h&#10; define the data structure for ECC operation&#10;</short>
      </documentation>
      <function command="" provided="0" name="get_param" ref="0x2b08bbe56ab0" loc="100:../../CMC/TinyECC/ECC.nc">
        <interfacedef-ref qname="ECC"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:150" alignment="I:1"><struct-ref name="Params" ref="0x2b08bbd13ac8"/>
              <typename><typedef-ref name="Params" ref="0x2b08bbd11990"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="point2octet" ref="0x2b08bbe4d368" loc="45:../../CMC/TinyECC/ECC.nc">
        <interfacedef-ref qname="ECC"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2b08bbd006d0"/>
                <typename><typedef-ref name="Point" ref="0x2b08bbd158d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b08bba209b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="octet" ref="0x2b08bbe346e8" loc="45:../../CMC/TinyECC/ECC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="octet_len" ref="0x2b08bbe34a38" loc="45:../../CMC/TinyECC/ECC.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
          </variable>
          <variable name="P" ref="0x2b08bbe34d60" loc="45:../../CMC/TinyECC/ECC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2b08bbd006d0"/>
                <typename><typedef-ref name="Point" ref="0x2b08bbd158d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="compress" ref="0x2b08bbe4d0c8" loc="45:../../CMC/TinyECC/ECC.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b08bba209b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="win_mul" ref="0x2b08bbe5a050" loc="85:../../CMC/TinyECC/ECC.nc">
        <interfacedef-ref qname="ECC"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2b08bbd006d0"/>
                <typename><typedef-ref name="Point" ref="0x2b08bbd158d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2b08bbd006d0"/>
                <typename><typedef-ref name="Point" ref="0x2b08bbd158d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="P0" ref="0x2b08bbe416d0" loc="85:../../CMC/TinyECC/ECC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2b08bbd006d0"/>
                <typename><typedef-ref name="Point" ref="0x2b08bbd158d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="n" ref="0x2b08bbe41a18" loc="85:../../CMC/TinyECC/ECC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="pointArray" ref="0x2b08bbe41d98" loc="85:../../CMC/TinyECC/ECC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2b08bbd006d0"/>
                <typename><typedef-ref name="Point" ref="0x2b08bbd158d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="gen_private_key" ref="0x2b08bbe35290" loc="40:../../CMC/TinyECC/ECC.nc">
        <interfacedef-ref qname="ECC"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="PrivateKey" ref="0x2b08bbe35020" loc="40:../../CMC/TinyECC/ECC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="win_mul_Z" ref="0x2b08bbe563a0" loc="94:../../CMC/TinyECC/ECC.nc">
        <interfacedef-ref qname="ECC"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2b08bbd006d0"/>
                <typename><typedef-ref name="Point" ref="0x2b08bbd158d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2b08bbd006d0"/>
                <typename><typedef-ref name="Point" ref="0x2b08bbd158d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:21" alignment="I:1"><struct-ref name="ZCoordinate" ref="0x2b08bbd15be8"/>
                <typename><typedef-ref name="ZCoordinate" ref="0x2b08bbd137c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="P0" ref="0x2b08bbe57688" loc="94:../../CMC/TinyECC/ECC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2b08bbd006d0"/>
                <typename><typedef-ref name="Point" ref="0x2b08bbd158d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="n" ref="0x2b08bbe579d0" loc="94:../../CMC/TinyECC/ECC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="pointArray" ref="0x2b08bbe57d50" loc="94:../../CMC/TinyECC/ECC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2b08bbd006d0"/>
                <typename><typedef-ref name="Point" ref="0x2b08bbd158d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ZList" ref="0x2b08bbe56100" loc="94:../../CMC/TinyECC/ECC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:21" alignment="I:1"><struct-ref name="ZCoordinate" ref="0x2b08bbd15be8"/>
                <typename><typedef-ref name="ZCoordinate" ref="0x2b08bbd137c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="octet2point" ref="0x2b08bbe4b358" loc="47:../../CMC/TinyECC/ECC.nc">
        <interfacedef-ref qname="ECC"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2b08bbd006d0"/>
                <typename><typedef-ref name="Point" ref="0x2b08bbd158d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="P" ref="0x2b08bbe4d9d8" loc="47:../../CMC/TinyECC/ECC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2b08bbd006d0"/>
                <typename><typedef-ref name="Point" ref="0x2b08bbd158d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="octet" ref="0x2b08bbe4dd38" loc="47:../../CMC/TinyECC/ECC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="octet_len" ref="0x2b08bbe4b0c8" loc="47:../../CMC/TinyECC/ECC.nc">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x2b08bbe38898" loc="38:../../CMC/TinyECC/ECC.nc">
        <interfacedef-ref qname="ECC"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="add_proj" ref="0x2b08bbe46020" loc="69:../../CMC/TinyECC/ECC.nc">
        <interfacedef-ref qname="ECC"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2b08bbd006d0"/>
                <typename><typedef-ref name="Point" ref="0x2b08bbd158d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2b08bbd006d0"/>
                <typename><typedef-ref name="Point" ref="0x2b08bbd158d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2b08bbd006d0"/>
                <typename><typedef-ref name="Point" ref="0x2b08bbd158d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="P0" ref="0x2b08bbe48c60" loc="69:../../CMC/TinyECC/ECC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2b08bbd006d0"/>
                <typename><typedef-ref name="Point" ref="0x2b08bbd158d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="Z0" ref="0x2b08bbe47020" loc="69:../../CMC/TinyECC/ECC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="P1" ref="0x2b08bbe47350" loc="69:../../CMC/TinyECC/ECC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2b08bbd006d0"/>
                <typename><typedef-ref name="Point" ref="0x2b08bbd158d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="Z1" ref="0x2b08bbe476a0" loc="69:../../CMC/TinyECC/ECC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="P2" ref="0x2b08bbe479d0" loc="69:../../CMC/TinyECC/ECC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2b08bbd006d0"/>
                <typename><typedef-ref name="Point" ref="0x2b08bbd158d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="Z2" ref="0x2b08bbe47d20" loc="69:../../CMC/TinyECC/ECC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="point_is_zero" ref="0x2b08bbe4a5b8" loc="51:../../CMC/TinyECC/ECC.nc">
        <interfacedef-ref qname="ECC"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08bba209b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2b08bbd006d0"/>
                <typename><typedef-ref name="Point" ref="0x2b08bbd158d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="P" ref="0x2b08bbe4a348" loc="51:../../CMC/TinyECC/ECC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2b08bbd006d0"/>
                <typename><typedef-ref name="Point" ref="0x2b08bbd158d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="mul" ref="0x2b08bbe432f0" loc="76:../../CMC/TinyECC/ECC.nc">
        <interfacedef-ref qname="ECC"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2b08bbd006d0"/>
                <typename><typedef-ref name="Point" ref="0x2b08bbd158d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2b08bbd006d0"/>
                <typename><typedef-ref name="Point" ref="0x2b08bbd158d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="P0" ref="0x2b08bbe449b0" loc="76:../../CMC/TinyECC/ECC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2b08bbd006d0"/>
                <typename><typedef-ref name="Point" ref="0x2b08bbd158d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="P1" ref="0x2b08bbe44ce0" loc="76:../../CMC/TinyECC/ECC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2b08bbd006d0"/>
                <typename><typedef-ref name="Point" ref="0x2b08bbd158d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="n" ref="0x2b08bbe43060" loc="76:../../CMC/TinyECC/ECC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dbl_proj" ref="0x2b08bbe44368" loc="72:../../CMC/TinyECC/ECC.nc">
        <interfacedef-ref qname="ECC"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2b08bbd006d0"/>
                <typename><typedef-ref name="Point" ref="0x2b08bbd158d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2b08bbd006d0"/>
                <typename><typedef-ref name="Point" ref="0x2b08bbd158d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="P0" ref="0x2b08bbe466a0" loc="72:../../CMC/TinyECC/ECC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2b08bbd006d0"/>
                <typename><typedef-ref name="Point" ref="0x2b08bbd158d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="Z0" ref="0x2b08bbe469f0" loc="72:../../CMC/TinyECC/ECC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="P1" ref="0x2b08bbe46d20" loc="72:../../CMC/TinyECC/ECC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2b08bbd006d0"/>
                <typename><typedef-ref name="Point" ref="0x2b08bbd158d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="Z1" ref="0x2b08bbe440c8" loc="72:../../CMC/TinyECC/ECC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="win_mul_base" ref="0x2b08bbe5adc0" loc="88:../../CMC/TinyECC/ECC.nc">
        <interfacedef-ref qname="ECC"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2b08bbd006d0"/>
                <typename><typedef-ref name="Point" ref="0x2b08bbd158d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="P0" ref="0x2b08bbe5a7f8" loc="88:../../CMC/TinyECC/ECC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2b08bbd006d0"/>
                <typename><typedef-ref name="Point" ref="0x2b08bbd158d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="n" ref="0x2b08bbe5ab40" loc="88:../../CMC/TinyECC/ECC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="check_point" ref="0x2b08bbe4bc38" loc="49:../../CMC/TinyECC/ECC.nc">
        <interfacedef-ref qname="ECC"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2b08bbd006d0"/>
                <typename><typedef-ref name="Point" ref="0x2b08bbd158d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="P" ref="0x2b08bbe4b9c8" loc="49:../../CMC/TinyECC/ECC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2b08bbd006d0"/>
                <typename><typedef-ref name="Point" ref="0x2b08bbd158d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="win_precompute_Z" ref="0x2b08bbe57020" loc="92:../../CMC/TinyECC/ECC.nc">
        <interfacedef-ref qname="ECC"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2b08bbd006d0"/>
                <typename><typedef-ref name="Point" ref="0x2b08bbd158d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2b08bbd006d0"/>
                <typename><typedef-ref name="Point" ref="0x2b08bbd158d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:21" alignment="I:1"><struct-ref name="ZCoordinate" ref="0x2b08bbd15be8"/>
                <typename><typedef-ref name="ZCoordinate" ref="0x2b08bbd137c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baseP" ref="0x2b08bbe59508" loc="92:../../CMC/TinyECC/ECC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2b08bbd006d0"/>
                <typename><typedef-ref name="Point" ref="0x2b08bbd158d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pointArray" ref="0x2b08bbe59888" loc="92:../../CMC/TinyECC/ECC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2b08bbd006d0"/>
                <typename><typedef-ref name="Point" ref="0x2b08bbd158d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ZList" ref="0x2b08bbe59c10" loc="92:../../CMC/TinyECC/ECC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:21" alignment="I:1"><struct-ref name="ZCoordinate" ref="0x2b08bbd15be8"/>
                <typename><typedef-ref name="ZCoordinate" ref="0x2b08bbd137c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="add" ref="0x2b08bbe485e0" loc="58:../../CMC/TinyECC/ECC.nc">
        <interfacedef-ref qname="ECC"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2b08bbd006d0"/>
                <typename><typedef-ref name="Point" ref="0x2b08bbd158d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2b08bbd006d0"/>
                <typename><typedef-ref name="Point" ref="0x2b08bbd158d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2b08bbd006d0"/>
                <typename><typedef-ref name="Point" ref="0x2b08bbd158d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="P0" ref="0x2b08bbe4ac00" loc="58:../../CMC/TinyECC/ECC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2b08bbd006d0"/>
                <typename><typedef-ref name="Point" ref="0x2b08bbd158d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="P1" ref="0x2b08bbe48020" loc="58:../../CMC/TinyECC/ECC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2b08bbd006d0"/>
                <typename><typedef-ref name="Point" ref="0x2b08bbd158d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="P2" ref="0x2b08bbe48350" loc="58:../../CMC/TinyECC/ECC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2b08bbd006d0"/>
                <typename><typedef-ref name="Point" ref="0x2b08bbd158d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="gen_public_key" ref="0x2b08bbe34020" loc="42:../../CMC/TinyECC/ECC.nc">
        <interfacedef-ref qname="ECC"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2b08bbd006d0"/>
                <typename><typedef-ref name="Point" ref="0x2b08bbd158d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="PublicKey" ref="0x2b08bbe35970" loc="42:../../CMC/TinyECC/ECC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2b08bbd006d0"/>
                <typename><typedef-ref name="Point" ref="0x2b08bbd158d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="PrivateKey" ref="0x2b08bbe35d10" loc="42:../../CMC/TinyECC/ECC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="win_precompute" ref="0x2b08bbe41020" loc="80:../../CMC/TinyECC/ECC.nc">
        <interfacedef-ref qname="ECC"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2b08bbd006d0"/>
                <typename><typedef-ref name="Point" ref="0x2b08bbd158d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2b08bbd006d0"/>
                <typename><typedef-ref name="Point" ref="0x2b08bbd158d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baseP" ref="0x2b08bbe439c8" loc="80:../../CMC/TinyECC/ECC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2b08bbd006d0"/>
                <typename><typedef-ref name="Point" ref="0x2b08bbd158d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pointArray" ref="0x2b08bbe43d48" loc="80:../../CMC/TinyECC/ECC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2b08bbd006d0"/>
                <typename><typedef-ref name="Point" ref="0x2b08bbd158d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NN" loc="36:../../CMC/TinyECC/NN.nc">
      <documentation loc="1:../../CMC/TinyECC/NN.h">
        <short>&#10; All new code in this distribution is Copyright 2005 by North Carolina&#10; State University.</short>
        <long>&#10; All new code in this distribution is Copyright 2005 by North Carolina&#10; State University. All rights reserved. Redistribution and use in&#10; source and binary forms are permitted provided that this entire&#10; copyright notice is duplicated in all such copies, and that any&#10; documentation, announcements, and other materials related to such&#10; distribution and use acknowledge that the software was developed at&#10; North Carolina State University, Raleigh, NC. No charge may be made&#10; for copies, derivations, or distributions of this material without the&#10; express written consent of the copyright holder. Neither the name of&#10; the University nor the name of the author may be used to endorse or&#10; promote products derived from this material without specific prior&#10; written permission.&#10; IN NO EVENT SHALL THE NORTH CAROLINA STATE UNIVERSITY BE LIABLE TO ANY&#10; PARTY FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL&#10; DAMAGES ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION,&#10; EVEN IF THE NORTH CAROLINA STATE UNIVERSITY HAS BEEN ADVISED OF THE&#10; POSSIBILITY OF SUCH DAMAGE. THE SOFTWARE PROVIDED HEREUNDER IS ON AN&#10; &#34;AS IS&#34; BASIS, AND THE NORTH CAROLINA STATE UNIVERSITY HAS NO&#10; OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR&#10; MODIFICATIONS. &#34;&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="ModSqr" ref="0x2b08bbe1bc80" loc="97:../../CMC/TinyECC/NN.nc">
        <interfacedef-ref qname="NN"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x2b08bbe1b020" loc="97:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="b" ref="0x2b08bbe1b368" loc="97:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="d" ref="0x2b08bbe1b6b0" loc="97:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="digits" ref="0x2b08bbe1b9e0" loc="97:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="LShift" ref="0x2b08bbe00420" loc="65:../../CMC/TinyECC/NN.nc">
        <interfacedef-ref qname="NN"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x2b08bbe027d0" loc="65:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="b" ref="0x2b08bbe02b18" loc="65:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="c" ref="0x2b08bbe02e18" loc="65:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
          </variable>
          <variable name="digits" ref="0x2b08bbe00180" loc="65:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="ModSmall" ref="0x2b08bbe10688" loc="81:../../CMC/TinyECC/NN.nc">
        <interfacedef-ref qname="NN"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="b" ref="0x2b08bbe11d48" loc="81:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="c" ref="0x2b08bbe100c8" loc="81:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="digits" ref="0x2b08bbe103f8" loc="81:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="Gcd" ref="0x2b08bbe2c368" loc="105:../../CMC/TinyECC/NN.nc">
        <interfacedef-ref qname="NN"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x2b08bbe2e6d0" loc="105:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="b" ref="0x2b08bbe2ea18" loc="105:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="c" ref="0x2b08bbe2ed60" loc="105:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="digits" ref="0x2b08bbe2c0c8" loc="105:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="ModExp" ref="0x2b08bbe31d40" loc="101:../../CMC/TinyECC/NN.nc">
        <interfacedef-ref qname="NN"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x2b08bbe329f8" loc="101:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="b" ref="0x2b08bbe32d40" loc="101:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="c" ref="0x2b08bbe310c8" loc="101:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="cDigits" ref="0x2b08bbe31400" loc="101:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
          </variable>
          <variable name="d" ref="0x2b08bbe31748" loc="101:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="dDigits" ref="0x2b08bbe31a80" loc="101:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="ModNeg" ref="0x2b08bbe24710" loc="87:../../CMC/TinyECC/NN.nc">
        <interfacedef-ref qname="NN"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x2b08bbe25a78" loc="87:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="b" ref="0x2b08bbe25dc0" loc="87:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="c" ref="0x2b08bbe24140" loc="87:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="digits" ref="0x2b08bbe24470" loc="87:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="AddDigitMult" ref="0x2b08bbe18e28" loc="69:../../CMC/TinyECC/NN.nc">
        <interfacedef-ref qname="NN"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x2b08bbe19e80" loc="69:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="b" ref="0x2b08bbe181f0" loc="69:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="c" ref="0x2b08bbe18500" loc="69:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
            </type-int>
          </variable>
          <variable name="d" ref="0x2b08bbe18848" loc="69:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="digits" ref="0x2b08bbe18b78" loc="69:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="ModBarrett" ref="0x2b08bbe116b0" loc="79:../../CMC/TinyECC/NN.nc">
        <interfacedef-ref qname="NN"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x2b08bbe126a8" loc="79:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="b" ref="0x2b08bbe129f0" loc="79:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="bDigits" ref="0x2b08bbe12d28" loc="79:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
          </variable>
          <variable name="c" ref="0x2b08bbe110c8" loc="79:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="cDigits" ref="0x2b08bbe11400" loc="79:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="Digits" ref="0x2b08bbe3e918" loc="123:../../CMC/TinyECC/NN.nc">
        <interfacedef-ref qname="NN"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x2b08bbe3e368" loc="123:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="digits" ref="0x2b08bbe3e698" loc="123:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="ModSub" ref="0x2b08bbe253f8" loc="85:../../CMC/TinyECC/NN.nc">
        <interfacedef-ref qname="NN"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x2b08bbe0d3e8" loc="85:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="b" ref="0x2b08bbe0d730" loc="85:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="c" ref="0x2b08bbe0da78" loc="85:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="d" ref="0x2b08bbe0ddc0" loc="85:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="digits" ref="0x2b08bbe25148" loc="85:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="ModDiv" ref="0x2b08bbe20478" loc="91:../../CMC/TinyECC/NN.nc">
        <interfacedef-ref qname="NN"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x2b08bbe21460" loc="91:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="b" ref="0x2b08bbe217a8" loc="91:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="c" ref="0x2b08bbe21af0" loc="91:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="d" ref="0x2b08bbe21e38" loc="91:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="digits" ref="0x2b08bbe201c8" loc="91:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="Cmp" ref="0x2b08bbe2aa08" loc="113:../../CMC/TinyECC/NN.nc">
        <interfacedef-ref qname="NN"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x2b08bbe2a100" loc="113:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="b" ref="0x2b08bbe2a448" loc="113:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="digits" ref="0x2b08bbe2a778" loc="113:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="ModBarrettInit" ref="0x2b08bbe14608" loc="75:../../CMC/TinyECC/NN.nc">
        <interfacedef-ref qname="NN"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:45" alignment="I:1"><struct-ref name="Barrett" ref="0x2b08bbd05b08"/>
                <typename><typedef-ref name="Barrett" ref="0x2b08bbd02020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0x2b08bbe15cb8" loc="75:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="cDigits" ref="0x2b08bbe14020" loc="75:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
          </variable>
          <variable name="pbuf" ref="0x2b08bbe14378" loc="75:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:45" alignment="I:1"><struct-ref name="Barrett" ref="0x2b08bbd05b08"/>
                <typename><typedef-ref name="Barrett" ref="0x2b08bbd02020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="AssignDigit" ref="0x2b08bbe0b020" loc="49:../../CMC/TinyECC/NN.nc">
        <interfacedef-ref qname="NN"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x2b08bbe0c6d0" loc="49:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="b" ref="0x2b08bbe0c9e0" loc="49:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
            </type-int>
          </variable>
          <variable name="digits" ref="0x2b08bbe0cd10" loc="49:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="BarrettSetBuf" ref="0x2b08bbe12020" loc="77:../../CMC/TinyECC/NN.nc">
        <interfacedef-ref qname="NN"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:45" alignment="I:1"><struct-ref name="Barrett" ref="0x2b08bbd05b08"/>
                <typename><typedef-ref name="Barrett" ref="0x2b08bbd02020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pbuf" ref="0x2b08bbe14cc0" loc="77:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:45" alignment="I:1"><struct-ref name="Barrett" ref="0x2b08bbd05b08"/>
                <typename><typedef-ref name="Barrett" ref="0x2b08bbd02020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="ModMult" ref="0x2b08bbe23db0" loc="89:../../CMC/TinyECC/NN.nc">
        <interfacedef-ref qname="NN"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x2b08bbe24d98" loc="89:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="b" ref="0x2b08bbe23140" loc="89:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="c" ref="0x2b08bbe23488" loc="89:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="d" ref="0x2b08bbe237d0" loc="89:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="digits" ref="0x2b08bbe23b00" loc="89:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="Sub" ref="0x2b08bbe06368" loc="59:../../CMC/TinyECC/NN.nc">
        <interfacedef-ref qname="NN"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x2b08bbe076d8" loc="59:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="b" ref="0x2b08bbe07a20" loc="59:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="c" ref="0x2b08bbe07d68" loc="59:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="digits" ref="0x2b08bbe060c8" loc="59:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="Mult" ref="0x2b08bbe04698" loc="61:../../CMC/TinyECC/NN.nc">
        <interfacedef-ref qname="NN"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x2b08bbe069d8" loc="61:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="b" ref="0x2b08bbe06d20" loc="61:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="c" ref="0x2b08bbe040c8" loc="61:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="digits" ref="0x2b08bbe043f8" loc="61:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="ModMultOpt" ref="0x2b08bbe1d020" loc="93:../../CMC/TinyECC/NN.nc">
        <interfacedef-ref qname="NN"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x2b08bbe20b20" loc="93:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="b" ref="0x2b08bbe20e68" loc="93:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="c" ref="0x2b08bbe1f1e0" loc="93:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="d" ref="0x2b08bbe1f528" loc="93:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="omega" ref="0x2b08bbe1f898" loc="93:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="digits" ref="0x2b08bbe1fbc8" loc="93:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="Assign" ref="0x2b08bbe0c020" loc="47:../../CMC/TinyECC/NN.nc">
        <interfacedef-ref qname="NN"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x2b08bbdf46c0" loc="47:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="b" ref="0x2b08bbdf4a08" loc="47:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="digits" ref="0x2b08bbdf4d38" loc="47:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="Decode" ref="0x2b08bbdf6c28" loc="41:../../CMC/TinyECC/NN.nc">
        <interfacedef-ref qname="NN"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x2b08bbdf6020" loc="41:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="digits" ref="0x2b08bbdf6350" loc="41:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
          </variable>
          <variable name="b" ref="0x2b08bbdf6678" loc="41:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b08bbdf6988" loc="41:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="Encode" ref="0x2b08bbdf4020" loc="43:../../CMC/TinyECC/NN.nc">
        <interfacedef-ref qname="NN"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x2b08bbdf5310" loc="43:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
          <variable name="digits" ref="0x2b08bbdf5640" loc="43:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
          </variable>
          <variable name="b" ref="0x2b08bbdf5988" loc="43:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b08bbdf5c98" loc="43:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="Assign2Exp" ref="0x2b08bbe0ac38" loc="53:../../CMC/TinyECC/NN.nc">
        <interfacedef-ref qname="NN"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="NN_UINT2" ref="0x2b08bbd05780"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x2b08bbe0a368" loc="53:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="b" ref="0x2b08bbe0a678" loc="53:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="NN_UINT2" ref="0x2b08bbd05780"/></typename>
            </type-int>
          </variable>
          <variable name="digits" ref="0x2b08bbe0a9a8" loc="53:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="Mod" ref="0x2b08bbe15608" loc="73:../../CMC/TinyECC/NN.nc">
        <interfacedef-ref qname="NN"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x2b08bbe16618" loc="73:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="b" ref="0x2b08bbe16960" loc="73:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="bDigits" ref="0x2b08bbe16c98" loc="73:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
          </variable>
          <variable name="c" ref="0x2b08bbe15020" loc="73:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="cDigits" ref="0x2b08bbe15358" loc="73:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="ModSqrRootOpt" ref="0x2b08bbe2ba18" loc="107:../../CMC/TinyECC/NN.nc">
        <interfacedef-ref qname="NN"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x2b08bbe2ca10" loc="107:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="b" ref="0x2b08bbe2cd58" loc="107:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="c" ref="0x2b08bbe2b0c8" loc="107:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="digits" ref="0x2b08bbe2b3f8" loc="107:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
          </variable>
          <variable name="omega" ref="0x2b08bbe2b768" loc="107:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="Div" ref="0x2b08bbe020f8" loc="63:../../CMC/TinyECC/NN.nc">
        <interfacedef-ref qname="NN"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x2b08bbe04cf8" loc="63:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="b" ref="0x2b08bbe030c8" loc="63:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="c" ref="0x2b08bbe03410" loc="63:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="cDigits" ref="0x2b08bbe03748" loc="63:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
          </variable>
          <variable name="d" ref="0x2b08bbe03a90" loc="63:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="dDigits" ref="0x2b08bbe03dc8" loc="63:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="Add" ref="0x2b08bbe07020" loc="57:../../CMC/TinyECC/NN.nc">
        <interfacedef-ref qname="NN"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x2b08bbe08368" loc="57:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="b" ref="0x2b08bbe086b0" loc="57:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="c" ref="0x2b08bbe089f8" loc="57:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="digits" ref="0x2b08bbe08d28" loc="57:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="ModAdd" ref="0x2b08bbe0ed38" loc="83:../../CMC/TinyECC/NN.nc">
        <interfacedef-ref qname="NN"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x2b08bbe10d08" loc="83:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="b" ref="0x2b08bbe0e0c8" loc="83:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="c" ref="0x2b08bbe0e410" loc="83:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="d" ref="0x2b08bbe0e758" loc="83:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="digits" ref="0x2b08bbe0ea88" loc="83:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="One" ref="0x2b08bbe272e0" loc="117:../../CMC/TinyECC/NN.nc">
        <interfacedef-ref qname="NN"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x2b08bbe28cd8" loc="117:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="digits" ref="0x2b08bbe27060" loc="117:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="Bits" ref="0x2b08bbe40020" loc="119:../../CMC/TinyECC/NN.nc">
        <interfacedef-ref qname="NN"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x2b08bbe27988" loc="119:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="digits" ref="0x2b08bbe27cb8" loc="119:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="TestBit" ref="0x2b08bbe40c80" loc="121:../../CMC/TinyECC/NN.nc">
        <interfacedef-ref qname="NN"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="short" size="I:2" alignment="I:1">
              <typename><typedef-ref name="int16_t" ref="0x2b08bb141658"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x2b08bbe40700" loc="121:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="i" ref="0x2b08bbe40a00" loc="121:../../CMC/TinyECC/NN.nc">
            <type-int cname="short" size="I:2" alignment="I:1">
              <typename><typedef-ref name="int16_t" ref="0x2b08bb141658"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="Equal" ref="0x2b08bbe3d928" loc="125:../../CMC/TinyECC/NN.nc">
        <interfacedef-ref qname="NN"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x2b08bbe3d020" loc="125:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="b" ref="0x2b08bbe3d368" loc="125:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="digits" ref="0x2b08bbe3d698" loc="125:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="ModSqrOpt" ref="0x2b08bbe32378" loc="99:../../CMC/TinyECC/NN.nc">
        <interfacedef-ref qname="NN"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x2b08bbe33368" loc="99:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="b" ref="0x2b08bbe336b0" loc="99:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="d" ref="0x2b08bbe339f8" loc="99:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="omega" ref="0x2b08bbe33d68" loc="99:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="digits" ref="0x2b08bbe320c8" loc="99:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="AssignZero" ref="0x2b08bbe0bc78" loc="51:../../CMC/TinyECC/NN.nc">
        <interfacedef-ref qname="NN"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x2b08bbe0b6c8" loc="51:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="digits" ref="0x2b08bbe0b9f8" loc="51:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="RShift" ref="0x2b08bbe19768" loc="67:../../CMC/TinyECC/NN.nc">
        <interfacedef-ref qname="NN"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x2b08bbe00af8" loc="67:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="b" ref="0x2b08bbe00e40" loc="67:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="c" ref="0x2b08bbe19198" loc="67:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
          </variable>
          <variable name="digits" ref="0x2b08bbe194c8" loc="67:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="ModDivOpt" ref="0x2b08bbe1c6a8" loc="95:../../CMC/TinyECC/NN.nc">
        <interfacedef-ref qname="NN"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x2b08bbe1d6c0" loc="95:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="b" ref="0x2b08bbe1da08" loc="95:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="c" ref="0x2b08bbe1dd50" loc="95:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="d" ref="0x2b08bbe1c0c8" loc="95:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="digits" ref="0x2b08bbe1c3f8" loc="95:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="ModInv" ref="0x2b08bbe2e070" loc="103:../../CMC/TinyECC/NN.nc">
        <interfacedef-ref qname="NN"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x2b08bbe2f3e8" loc="103:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="b" ref="0x2b08bbe2f730" loc="103:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="c" ref="0x2b08bbe2fa78" loc="103:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="digits" ref="0x2b08bbe2fda8" loc="103:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="Even" ref="0x2b08bbe3c5d0" loc="127:../../CMC/TinyECC/NN.nc">
        <interfacedef-ref qname="NN"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x2b08bbe3c020" loc="127:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="digits" ref="0x2b08bbe3c350" loc="127:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="Zero" ref="0x2b08bbe28678" loc="115:../../CMC/TinyECC/NN.nc">
        <interfacedef-ref qname="NN"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x2b08bbe280c8" loc="115:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="digits" ref="0x2b08bbe283f8" loc="115:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ECIES" loc="35:../../CMC/TinyECC/ECIES.nc">
      <documentation loc="26:../../CMC/TinyECC/ECIES.nc">
        <short>&#10; Interface for ECIES operation&#10;&#10; Author: An Liu&#10; Date: 05/06/2007&#10;</short>
      </documentation>
      <function command="" provided="0" name="decrypt" ref="0x2b08bbe4f310" loc="45:../../CMC/TinyECC/ECIES.nc">
        <interfacedef-ref qname="ECIES"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="M" ref="0x2b08bbe503d8" loc="45:../../CMC/TinyECC/ECIES.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="M_len" ref="0x2b08bbe506b8" loc="45:../../CMC/TinyECC/ECIES.nc">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </variable>
          <variable name="C" ref="0x2b08bbe509f0" loc="45:../../CMC/TinyECC/ECIES.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="C_len" ref="0x2b08bbe50cd0" loc="45:../../CMC/TinyECC/ECIES.nc">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </variable>
          <variable name="d" ref="0x2b08bbe4f060" loc="45:../../CMC/TinyECC/ECIES.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x2b08bbe556d0" loc="37:../../CMC/TinyECC/ECIES.nc">
        <interfacedef-ref qname="ECIES"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="encrypt" ref="0x2b08bbe51d48" loc="43:../../CMC/TinyECC/ECIES.nc">
        <interfacedef-ref qname="ECIES"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2b08bbd006d0"/>
                <typename><typedef-ref name="Point" ref="0x2b08bbd158d8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="C" ref="0x2b08bbe55dc8" loc="43:../../CMC/TinyECC/ECIES.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="C_len" ref="0x2b08bbe51108" loc="43:../../CMC/TinyECC/ECIES.nc">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </variable>
          <variable name="M" ref="0x2b08bbe51440" loc="43:../../CMC/TinyECC/ECIES.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="M_len" ref="0x2b08bbe51720" loc="43:../../CMC/TinyECC/ECIES.nc">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </variable>
          <variable name="PublicKey" ref="0x2b08bbe51a98" loc="43:../../CMC/TinyECC/ECIES.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2b08bbd006d0"/>
                <typename><typedef-ref name="Point" ref="0x2b08bbd158d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b08bbdee338" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b08bbdee338"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b08bbde7020" loc="136:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="132:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b08bb142608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b08bbdec710" loc="83:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x2b08bbdea5b8" loc="114:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="100:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b08bb142608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b08bb142608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b08bbdea020" loc="114:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b08bb142608"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b08bbdea338" loc="114:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b08bb142608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x2b08bbdeb7b8" loc="98:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="94:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08bba209b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x2b08bbdff020" loc="151:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="146:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b08bb142608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x2b08bbde7740" loc="144:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="138:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b08bb142608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b08bbdeb020" loc="92:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="86:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08bba209b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x2b08bbdeee08" loc="64:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b08bb142608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b08bbdeeb98" loc="64:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b08bb142608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x2b08bbde85b8" loc="129:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="116:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b08bb142608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b08bb142608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b08bbde8020" loc="129:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b08bb142608"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b08bbde8338" loc="129:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b08bb142608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x2b08bbded8a0" loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b08bb142608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b08bbded630" loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b08bb142608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b08bbdec070" loc="78:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b08bbeb5340" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b08bbeb5340"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b08bbeb5bd0" loc="61:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b08bb142608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b08bbec27b0" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b08bbec27b0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b08bbec29e0" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b08bbec29e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b08bbebf2a8" loc="64:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b08bbec29e0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2b08bbebe328" loc="76:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2b08bbebfac0" loc="71:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08bba209b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b08bbebea18" loc="82:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b08bbeaf548" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b08bbeaf548"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b08bbeaf778" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b08bbeaf778"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b08bbec6020" loc="109:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b08bbeaf778"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b08bbec81d8" loc="78:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x2b08bbec76c0" loc="103:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b08bbeaf778"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b08bbeaf778"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b08bbec7120" loc="103:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b08bbeaf778"/></type-var>
          </variable>
          <variable name="dt" ref="0x2b08bbec7440" loc="103:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b08bbeaf778"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b08bbec8948" loc="88:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08bba209b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x2b08bbec67a0" loc="116:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b08bbeaf778"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b08bbead290" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b08bbeaf778"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b08bbead020" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b08bbeaf778"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b08bbeada60" loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="76:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x2b08bbee5290" loc="89:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x2b08bbee6178" loc="85:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x2b08bbee9020" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x2b08bbee6ae8" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x2b08bbee6878" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x2b08bbee79d0" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b08bbee7760" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x2b08bbee5c08" loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2b08bbee5998" loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x2b08bbee9750" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x2b08bbee70a8" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b08bbee9e08" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="51:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="compareBBusy" ref="0x2b08bbf107f0" loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; @return TRUE if OCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer2Asynchronous" ref="0x2b08bbef4800" loc="68:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 2 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlABusy" ref="0x2b08bbef3020" loc="74:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; @return TRUE if TCCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBBusy" ref="0x2b08bbef37f0" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="76:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; @return TRUE if TCCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x2b08bbf0e020" loc="98:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="94:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; @return TRUE if TCNT2 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareABusy" ref="0x2b08bbf10020" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; @return TRUE if OCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x2b08bbef5650" loc="57:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer2 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b08bbacb978"/>
            <typename><typedef-ref name="Atm128_ASSR_t" ref="0x2b08bbacbd80"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x2b08bbef4030" loc="63:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer2 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b08bbacb978"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x2b08bbacbd80"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b08bbef5d98" loc="63:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b08bbacb978"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x2b08bbacbd80"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x2b08bbeea6a0" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b08bbeea6a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x2b08bbefce20" loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08bba209b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b08bbefd0d8" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b08bbefe020" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b08bbeea6a0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b08bbefd7e0" loc="62:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b08bbefa5c0" loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08bba209b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b08bbefe968" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b08bbeea6a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b08bbefe6f8" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b08bbeea6a0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b08bbefc020" loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b08bbefc708" loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x2b08bbedd678" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b08bbedd678"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x2b08bbef2cf0" loc="98:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2b08bbed8e20" loc="87:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08bba209b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b08bbeda020" loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b08bbedd678"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x2b08bbef1690" loc="104:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x2b08bbef1420" loc="104:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x2b08bbef1e10" loc="110:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b08bbed97f8" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b08bbed90d8" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b08bbef25c8" loc="93:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08bba209b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b08bbeda958" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b08bbedd678"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b08bbeda6e8" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b08bbedd678"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b08bbed8020" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b08bbed8708" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x2b08bc061418" loc="59:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b08bbdac520"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x2b08bc067e00" loc="59:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b08bbdac520"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2b08bc061198" loc="59:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2b08bc081408" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc081198" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x2b08bc080408" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc080198" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b08bc07d5e8" loc="126:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="109:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc07d020" loc="126:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b08bc07d330" loc="126:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b08bc07c6e0" loc="106:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x2b08bc07f808" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc07f278" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b08bc07f588" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b08bc04fe00" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b08bbdac520"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2b08bc04f500" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b08bbdac520"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2b08bc04f860" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b08bc04fb70" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b08bc06a2d8" loc="135:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="126:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc06bbe8" loc="135:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b08bc06a020" loc="135:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b08bc06b3e0" loc="123:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="113:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b08bc06e108" loc="96:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc06fe50" loc="96:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b08bc06d5c8" loc="110:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="98:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc06d020" loc="110:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b08bc06d348" loc="110:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x2b08bc0665f8" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
              <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc050c30" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x2b08bc066020" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b08bc066330" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x2b08bc084ad0" loc="65:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc0844e8" loc="65:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x2b08bc084850" loc="65:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x2b08bc0a6bc0" loc="71:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc0a6950" loc="71:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x2b08bc085c90" loc="57:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x2b08bc085338" loc="52:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x2b08bc0850c8" loc="52:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x2b08bc08b0a8" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc07bdd0" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x2b08bc08a290" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc08a020" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x2b08bc089338" loc="85:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08bba209b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc0890c8" loc="85:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x2b08bc09fa48" loc="65:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc09f7d8" loc="65:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x2b08bc08cd50" loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc08c768" loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x2b08bc08cad0" loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x2b08bc0a1af0" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc0a1880" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x2b08bc0a10b8" loc="53:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc0a2a90" loc="53:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x2b08bc0a2df8" loc="53:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x2b08bc09e970" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08bba209b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc09e700" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x2b08bc092790" loc="177:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b08bbdac168"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b08bc092520" loc="177:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x2b08bc0768b8" loc="88:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b08bbdac520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b08bc076648" loc="88:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x2b08bc060dc8" loc="68:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b08bbdac520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x2b08bc0788a0" loc="78:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b08bbdac520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b08bc078630" loc="78:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x2b08bc074050" loc="121:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b08bbdac520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b08bc073a68" loc="121:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b08bc073da0" loc="121:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b08bbdac520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x2b08bc075bf0" loc="103:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b08bbdac520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b08bc075638" loc="103:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b08bc075970" loc="103:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b08bbdac520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x2b08bc0943e0" loc="147:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b08bbdaed78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b08bc094170" loc="147:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x2b08bc093680" loc="162:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b08bbdaed78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b08bc093100" loc="162:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x2b08bc093400" loc="162:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b08bbdaed78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x2b08bc072290" loc="136:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08bba209b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b08bc072020" loc="136:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x2b08bc08fb48" loc="187:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b08bbdac168"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b08bc08f598" loc="187:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x2b08bc08f8c8" loc="187:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b08bbdac168"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x2b08bc08e8e8" loc="195:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b08bbdac168"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioChannel" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
      <function event="" provided="0" name="setChannelDone" ref="0x2b08bc09b178" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x2b08bc086990" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress),&#10; EALREADY if the selected channel is already set, SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2b08bc086720" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x2b08bc09b950" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x2b08bc083a58" loc="35:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b08bc083a58"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b08bc083c88" loc="35:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b08bc083c88"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x2b08bc096938" loc="63:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b08bc083c88"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc0966c8" loc="63:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x2b08bc095a38" loc="70:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc0957c8" loc="70:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x2b08bc0997d0" loc="49:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08bba209b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc099560" loc="49:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b08bc0b8c68" loc="78:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b08bc083c88"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc0b86a8" loc="78:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x2b08bc0b89e8" loc="78:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b08bc083c88"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketField" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
      <parameters>
        <typedef name="value_type" ref="0x2b08bc0c76d8" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
          <interfacedef-ref qname="PacketField"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x2b08bc0c76d8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0x2b08bc0c26a8" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Clears the isSet flag.</short>
          <long>&#10; Clears the isSet flag.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc0c2438" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b08bc0c4c88" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns the stored value of this field in the message.</short>
          <long>&#10; Returns the stored value of this field in the message. If the&#10; value is not set, then the returned value is undefined.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x2b08bc0c76d8"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc0c4a18" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x2b08bc0c4290" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns TRUE if the value is set for this message.</short>
          <long>&#10; Returns TRUE if the value is set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08bba209b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc0c4020" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b08bc0c1388" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.</short>
          <long>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x2b08bc0c76d8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc0c2d98" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x2b08bc0c1108" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x2b08bc0c76d8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x2b08bc0da020" loc="47:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08bba209b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc0b9c50" loc="47:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2b08bc0dfb88" loc="120:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="104:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x2b08bc0e0c50" loc="97:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x2b08bc0e0360" loc="88:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2b08bc0df428" loc="102:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="99:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2b08bc0dd848" loc="128:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="122:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08bba209b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Packet" loc="35:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
      <function command="" provided="0" name="source" ref="0x2b08bc0fec10" loc="41:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b08bbda0020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc0fe9a0" loc="41:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x2b08bc0e1868" loc="37:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b08bbda0020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x2b08bc0fe290" loc="39:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b08bbda0020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc0fe020" loc="39:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x2b08bc0fb610" loc="45:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b08bbda0020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc0fb020" loc="45:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b08bc0fb390" loc="45:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b08bbda0020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x2b08bc0fc938" loc="43:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b08bbda0020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc0fc348" loc="43:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b08bc0fc6b8" loc="43:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b08bbda0020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pan" ref="0x2b08bc0fa980" loc="49:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x2b08bbda1b38"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc0fa710" loc="49:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPan" ref="0x2b08bc0f8600" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x2b08bbda1b38"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc0f8020" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x2b08bc0f8380" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x2b08bbda1b38"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x2b08bc0fa020" loc="47:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08bba209b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc0fbcc0" loc="47:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x2b08bc0f8d08" loc="53:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x2b08bbda1b38"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Send" loc="45:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b08bc0e75c0" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param msg    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b08bbda0020"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2b08bc0eac80" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b08bbda0020"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2b08bc0e7020" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b08bc0e7330" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b08bc0e3988" loc="122:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="113:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc0e33c0" loc="122:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b08bc0e36d0" loc="122:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b08bc0e5b70" loc="110:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="100:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b08bc0e6338" loc="83:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc0e60c8" loc="83:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b08bc0e52a0" loc="97:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="85:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc0e6c68" loc="97:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b08bc0e5020" loc="97:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DummyConfig" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyConfig.nc">
      <function command="" provided="0" name="nothing" ref="0x2b08bc14a020" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyConfig.nc">
          <short>&#10; We need to put something here, but this is not going to get called&#10;</short>
        </documentation>
        <interfacedef-ref qname="DummyConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrafficMonitorConfig" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
      <function command="" provided="0" name="getBytes" ref="0x2b08bc139938" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the number of bytes in this message.</short>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc1396c8" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageConfig" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
      <function command="" provided="0" name="group" ref="0x2b08bc129d10" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.group *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b08bbdac168"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc129aa0" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="checkFrame" ref="0x2b08bc14c370" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.</short>
          <long>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.&#10; Return SUCCESS if the frame is now properly set up, &#10; or FAIL of the send operation should be aborted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc14c100" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x2b08bc12a6b0" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.source *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b08bbdac520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc12a440" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x2b08bc12c020" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.destination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b08bbdac520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc115c70" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x2b08bc129388" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setSource *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b08bbdac520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc12ad88" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b08bc129108" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b08bbdac520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x2b08bc12cce0" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setDestination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b08bbdac520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc12c728" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b08bc12ca60" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b08bbdac520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x2b08bc1289b0" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setGroup *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b08bbdac168"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc128400" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x2b08bc128730" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b08bbdac168"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlottedCollisionConfig" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
      <function command="" provided="0" name="getInitialDelay" ref="0x2b08bc132598" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.</short>
          <long>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getScheduleExponent" ref="0x2b08bc131020" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowLength" ref="0x2b08bc12e290" loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the size of the collision window for this received message.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc12e020" loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitTime" ref="0x2b08bc131aa8" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command must return the time when the message was transmitted.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc131838" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowStart" ref="0x2b08bc12f5b8" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.</short>
          <long>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc12f348" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioAlarm" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
      <function event="" provided="0" name="fired" ref="0x2b08bc1528e0" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; This event is fired when the specified timeout period expires.</short>
          <long>&#10; This event is fired when the specified timeout period expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="wait" ref="0x2b08bc153a70" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Waits till the specified timeout period expires.</short>
          <long>&#10; Waits till the specified timeout period expires. The alarm must be free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x2b08bbda3b08"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="timeout" ref="0x2b08bc153800" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x2b08bbda3b08"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b08bc1521d8" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Cancels the running alarm.</short>
          <long>&#10; Cancels the running alarm. The alarm must be pending.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isFree" ref="0x2b08bc153020" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns TRUE if the alarm is free and ready to be used.</short>
          <long>&#10; Returns TRUE if the alarm is free and ready to be used. Once the alarm&#10; is free, it cannot become nonfree in the same tasklet block. Note,&#10; if the alarm is currently set (even if for ourselves) then it is not free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08bba209b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNow" ref="0x2b08bc1510d8" loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns the current time as measured by the radio stack.</short>
          <long>&#10; Returns the current time as measured by the radio stack.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x2b08bbda3b08"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioPacket" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
      <function command="" provided="0" name="clear" ref="0x2b08bc170290" loc="70:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Clears all metadata and sets all default values in the headers.</short>
          <long>&#10; Clears all metadata and sets all default values in the headers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc170020" loc="70:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x2b08bc14e6f8" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the payload.</short>
          <long>&#10; Returns the length of the payload. The payload starts right&#10; after the header.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc14e488" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b08bc14dd80" loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the maximum length that can be set for this message.</short>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x2b08bc14d5d0" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Sets the length of the payload.</short>
          <long>&#10; Sets the length of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc14d020" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b08bc14d350" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x2b08bc155bf0" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; This command returns the length of the header.</short>
          <long>&#10; This command returns the length of the header. The header&#10; starts at the first byte of the message_t structure &#10; (some layers may add dummy bytes to allign the payload to&#10; the msg->data section).&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc155980" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x2b08bc1727f0" loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the metadata section.</short>
          <long>&#10; Returns the length of the metadata section. The metadata section&#10; is at the very end of the message_t structure and grows downwards.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc172580" loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RF230DriverConfig" loc="35:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b08bc101c90" loc="46:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.</short>
          <long>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x2b08bc1014e8" loc="40:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy header to align the payload properly.</short>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc101278" loc="40:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x2b08bc125780" loc="52:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.</short>
          <long>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc125510" loc="52:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerPreloadLength" ref="0x2b08bc124020" loc="59:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired.</short>
          <long>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired. If the length of the packet is less than this amount, &#10; then that event is fired earlier. The header length must be at least one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresRssiCca" ref="0x2b08bc124b28" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.</short>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08bba209b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc1248b8" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaConfig" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/CsmaConfig.nc">
      <function command="" provided="0" name="requiresSoftwareCCA" ref="0x2b08bc114338" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/CsmaConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/CsmaConfig.nc">
          <short>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.</short>
          <long>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08bba209b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc1140c8" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/CsmaConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SoftwareAckConfig" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
      <function command="" provided="0" name="reportChannelError" ref="0x2b08bc11b7a8" loc="86:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.</short>
          <long>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckPacket" ref="0x2b08bc11b040" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b08bc11da30" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2b08bc11dd90" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x2b08bc121cd0" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.</short>
          <long>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08bba209b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc121a60" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckPacket" ref="0x2b08bc11f7b8" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet is an acknowledgement packet.</short>
          <long>&#10; Returns TRUE if the received packet is an acknowledgement packet.&#10; The AckedSend layer will filter out all received acknowledgement&#10; packets and uses  only the matching one for the acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08bba209b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc11f548" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckPacket" ref="0x2b08bc11e640" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The acknowledgement packect was already verified &#10; to be a valid acknowledgement packet via the isAckPacket command.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08bba209b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b08bc11e060" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2b08bc11e3c0" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckTimeout" ref="0x2b08bc122468" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.</short>
          <long>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x2b08bc1212a0" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Sets the flag in the message indicating to the receiver whether&#10; the message should be acknowledged.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b08bba209b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc122c70" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2b08bc121020" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b08bba209b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x2b08bc11d290" loc="75:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08bba209b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc11d020" loc="75:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154PacketLayer" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
      <documentation loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <short>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses.</short>
        <long>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses. It also &#10; supports 6LowPan interoperability mode, and acknowledgement frames.&#10; Note, that this interface does not support the CRC-16 value, which&#10; should be verified before the data can be trusted.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getDestPan" ref="0x2b08bc13a290" loc="131:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="127:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; returns the destination PAN id, values &#60;= 255 are tinyos groups,&#10; valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc13a020" loc="131:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDSN" ref="0x2b08bc13da08" loc="120:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="117:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc13d798" loc="120:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFCF" ref="0x2b08bc1485c0" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame control field.</short>
          <long>&#10; Sets the frame control field. This method should not be used, &#10; createDataFrame and createAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc148020" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="fcf" ref="0x2b08bc148340" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckFrame" ref="0x2b08bc1455b8" loc="75:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08bba209b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc145348" loc="75:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcAddr" ref="0x2b08bc15b020" loc="156:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="153:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc15d9c8" loc="156:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b08bc15dcf8" loc="156:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createDataFrame" ref="0x2b08bc146aa8" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create a data frame supported by this interface.</short>
          <long>&#10; Sets the FCF to create a data frame supported by this interface.&#10; You may call setAckRequired and setFramePending commands after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc146838" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDSN" ref="0x2b08bc13c808" loc="125:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="122:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc13c278" loc="125:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dsn" ref="0x2b08bc13c588" loc="125:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckReply" ref="0x2b08bc142020" loc="88:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10; This also sets the DSN value. The data message must be a &#10; data frame, the ack message will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b08bc1448a8" loc="88:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2b08bc144c08" loc="88:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSrcAddr" ref="0x2b08bc15d290" loc="151:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="148:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc15d020" loc="151:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isDataFrame" ref="0x2b08bc146030" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08bba209b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc148d90" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckRequired" ref="0x2b08bc141920" loc="99:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the ACK required field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the ACK required field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08bba209b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc1416b0" loc="99:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckReply" ref="0x2b08bc142e50" loc="94:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The data message must be a data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08bba209b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b08bc142870" loc="94:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2b08bc142bd0" loc="94:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localAddr" ref="0x2b08bc159548" loc="178:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="175:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local address of the node (AM address)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b08bbda0020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x2b08bc15ba20" loc="162:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="158:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08bba209b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc15b7b0" loc="162:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x2b08bc15ad88" loc="173:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="170:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local pan id (AM group)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x2b08bbda1b38"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestAddr" ref="0x2b08bc15e748" loc="146:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="143:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc15e198" loc="146:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b08bc15e4c8" loc="146:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckFrame" ref="0x2b08bc1440a8" loc="81:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface.</short>
          <long>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface. You may call setFramePending after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc145dd0" loc="81:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFramePending" ref="0x2b08bc13d020" loc="115:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="112:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame pending field in the FCF.</short>
          <long>&#10; Sets the frame pending field in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b08bba209b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc13ea38" loc="115:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pending" ref="0x2b08bc13ed58" loc="115:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b08bba209b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestPan" ref="0x2b08bc15f020" loc="136:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="133:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination PAN id, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc13a9e8" loc="136:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pan" ref="0x2b08bc13ad08" loc="136:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x2b08bc157020" loc="185:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="180:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.</short>
          <long>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08bba209b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc159c88" loc="185:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x2b08bc140678" loc="105:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="101:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.</short>
          <long>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b08bba209b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc140100" loc="105:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2b08bc1403f8" loc="105:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b08bba209b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFCF" ref="0x2b08bc1497f0" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the frame control field.</short>
          <long>&#10; Returns the frame control field. This method should not be used, &#10; isDataFrame and isAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc149580" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x2b08bc15a538" loc="168:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="164:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08bba209b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc15a2c8" loc="168:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDestAddr" ref="0x2b08bc15fa28" loc="141:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="138:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc15f7b8" loc="141:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFramePending" ref="0x2b08bc13e290" loc="110:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="107:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the frame pending field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the frame pending field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08bba209b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc13e020" loc="110:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UniqueConfig" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x2b08bc116020" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Sets the sequence number of the packet.</short>
          <long>&#10; Sets the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc118a20" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="number" ref="0x2b08bc118d50" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reportChannelError" ref="0x2b08bc1167a8" loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.</short>
          <long>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x2b08bc119830" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sequence number of the packet.</short>
          <long>&#10; Returns the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc1195c0" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0x2b08bc118290" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sender of the packet.</short>
          <long>&#10; Returns the sender of the packet. &#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b08bbdac520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc118020" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RandomCollisionConfig" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
      <function command="" provided="0" name="getCongestionBackoff" ref="0x2b08bc136ad8" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the amount of maximum backoff when there is congestion&#10; (the channel was busy for the first try)&#10;</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc136868" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInitialBackoff" ref="0x2b08bc136020" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the initial amount of maximum backoff for this message.</short>
          <long>&#10; Returns the initial amount of maximum backoff for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc11acf8" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinimumBackoff" ref="0x2b08bc135328" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the minimum ticks before the message could be sent.</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitBarrier" ref="0x2b08bc135d78" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc135b08" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Tasklet" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
      <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
        <short>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled.</short>
        <long>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled. &#10; All state transitions should take place in the run event handler or&#10; in blocks protected by the suspend and resume commands.&#10;</long>
      </documentation>
      <function command="" provided="0" name="schedule" ref="0x2b08bc1cca18" loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Makes sure that the run event is called at least once more.</short>
          <long>&#10; Makes sure that the run event is called at least once more. If the &#10; run event is currently not executing, then it  is called immediately &#10; and this command returns only after the completion of the run event. &#10; If the run event is currently executed, then this method returns at &#10; once, and makes sure that the run event is called once more when &#10; it is finished. If this method is called from a task, then by the &#10; above rules, the run event will be called from a task as well.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="suspend" ref="0x2b08bc1ca328" loc="72:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section.</short>
          <long>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section. No long running&#10; computation should be called from the critical session, and&#10; in particular no user event should be fired. This call is only&#10; possible from task context, otherwise we cannot guarantee that&#10; the run event is not currently running. The suspend calls&#10; can be nested. It is very important that the same number of&#10; resume commands must be called in all control paths, e.g. be very&#10; careful with the return and break commands.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resume" ref="0x2b08bc1cac40" loc="79:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Leaves the critical section.</short>
          <long>&#10; Leaves the critical section. This call is conly possible from &#10; task context. If there were scheduled executions of the run&#10; event, then those will be called before this command returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="run" ref="0x2b08bc1cc328" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; This method is executed atomically.</short>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareSend" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
      <function command="" provided="0" name="send" ref="0x2b08bc2108c8" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a task. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc210658" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b08bc20b290" loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc20b020" loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b08bc20c7a0" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc20c1f8" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b08bc20c520" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareReceive" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareReceive.nc">
      <function event="" provided="0" name="receive" ref="0x2b08bc20fc10" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareReceive.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
              <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc20f968" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x2b08bc2218f8" loc="50:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b08bbdac520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x2b08bc2207c8" loc="60:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x2b08bc2200d8" loc="55:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b08bbdac168"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x2b08bc221118" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b08bbdac168"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b08bbdac520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x2b08bc224ae8" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b08bbdac168"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x2b08bc224e20" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b08bbdac520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x2b08bc2d1c90" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2b08bc2cd580" loc="61:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x2b08bc2c8988" loc="65:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x2b08bc2c81d8" loc="59:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x2b08bc2cb360" loc="90:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08bba209b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x2b08bc2cbb50" loc="98:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x2b08bc2bf620" loc="79:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b08bc2c7930"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b08bc2bf3b0" loc="79:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b08bc2c7930"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x2b08bc2c1720" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08bba209b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x2b08bc2c0290" loc="62:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08bba209b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b08bc2c7930"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b08bc2c0020" loc="62:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b08bc2c7930"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x2b08bc2c0b30" loc="70:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x2b08bc2c7930"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioReceive" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
      <function event="" provided="0" name="receive" ref="0x2b08bc426e70" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
              <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc426bc8" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="header" ref="0x2b08bc426290" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed.</short>
          <long>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed. Return FALSE if the message should be discarded.&#10; In particular, the message buffer layer returns FALSE if there is&#10; no space for a new message, so this message will not get acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08bba209b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc426020" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborhoodFlag" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
      <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <short>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example).</short>
        <long>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example). &#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2b08bc445020" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for the given index.</short>
          <long>&#10; Clears the flag for the given index. The flag is automatically&#10; cleared after the Neighborhood.evicted event is fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2b08bc447ce0" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearAll" ref="0x2b08bc445790" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for all indices&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b08bc41dcf8" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Returns the value of the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08bba209b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2b08bc41da88" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b08bc447640" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Sets the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2b08bc4473d0" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Neighborhood" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
      <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <short>&#10; Every component maintains its own neighborhood data.</short>
        <long>&#10; Every component maintains its own neighborhood data. The Neighboorhood&#10; component maintains only the nodeids and ages of the neighbors, and&#10; evicts old entries from the table when necessary.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getAge" ref="0x2b08bc44b020" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the age of the given entry.</short>
          <long>&#10; Returns the age of the given entry. The age is incremented by one&#10; every time a new node is inserted into the neighborhood table that&#10; is not already at the very end. If the age would get too large to&#10; fit into a byte, then it is periodically reset to a smaller value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2b08bc44dd80" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNode" ref="0x2b08bc44a4e0" loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Adds a new node into the neighborhood table.</short>
          <long>&#10; Adds a new node into the neighborhood table. If this node was already&#10; in the table, then it is just brought to the front (its age is reset&#10; to zero). If the node was not in the table, then the oldest is evicted&#10; and its entry is replaced with this node. The index of the entry&#10; is returned in the range [0, NEIGHBORHOOD-1]. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b08bbdac520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b08bc44a270" loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b08bbdac520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNode" ref="0x2b08bc44bab0" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the node address for the given entry.</short>
          <long>&#10; Returns the node address for the given entry.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b08bbdac520"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2b08bc44b840" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x2b08bc449020" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; This event is fired when the oldest entry is replaced with a new&#10; node.</short>
          <long>&#10; This event is fired when the oldest entry is replaced with a new&#10; node. The same interface is used by many users, so all of them&#10; will receive this event and can clear the corresponding entry.&#10; After this event is fired, all flags for this entry are cleared&#10; (see the NeighborhoodFlag interface)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2b08bc44ace8" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIndex" ref="0x2b08bc44d5b0" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the index of the neighbor in the table.</short>
          <long>&#10; Returns the index of the neighbor in the table. If the node was not &#10; found in the table, then the value NEIGHBORHOOD is  returned, &#10; otherwise an index in the range [0, NEIGHBORHOOD-1] is returned.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b08bbdac520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b08bc44d340" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b08bbdac520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioState" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
      <function command="" provided="0" name="turnOff" ref="0x2b08bc4bb748" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time.</short>
          <long>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time. The radio cannot send or receive in this state &#10; and releases all access to shared resources (e.g. SPI bus). &#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0x2b08bc4b8808" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Goes into receive state.</short>
          <long>&#10; Goes into receive state. The radio continuously receive messages &#10; and able to transmit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x2b08bc4b7290" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress)&#10; SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2b08bc4b7020" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="done" ref="0x2b08bc4b79f0" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="standby" ref="0x2b08bc4b8020" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.</short>
          <long>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x2b08bc4b5258" loc="74:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioSend" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
      <function command="" provided="0" name="send" ref="0x2b08bc4e7020" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a tasklet. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc4bad10" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="ready" ref="0x2b08bc4e63a0" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; This event is fired when the component is most likely able to accept &#10; a send request.</short>
          <long>&#10; This event is fired when the component is most likely able to accept &#10; a send request. If the send command has returned with a failure, then&#10; this event will be called at least once in the near future.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b08bc4e7b58" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b08bc4e78e8" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x2b08bc559e48" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b08bc559e48"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x2b08bc556918" loc="64:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b08bc559e48"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x2b08bc5566a8" loc="64:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b08bc559e48"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketFlag" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
      <function command="" provided="0" name="clear" ref="0x2b08bc59dca0" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to FALSE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc59da30" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b08bc5a2c18" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Returns if the flag is set for this message.</short>
          <long>&#10; Returns if the flag is set for this message. &#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08bba209b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc5a29a8" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setValue" ref="0x2b08bc59f928" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to the specified value.</short>
          <long>&#10; Sets the flag in this message to the specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b08bba209b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc59f398" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x2b08bc59f6a8" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b08bba209b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b08bc59d338" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to TRUE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bc59d0c8" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioCCA" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
      <function event="" provided="0" name="done" ref="0x2b08bc5dc5b8" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Signals the completion of the clear channel assesment send command.</short>
          <long>&#10; Signals the completion of the clear channel assesment send command.&#10; SUCCESS means the channel is clear, EBUSY means the channel is not&#10; clear, and FAIL means that the clear channel assesment could not&#10; be finished or the operation was cancelled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b08bc5dc348" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x2b08bc5a7b70" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Starts the clear channel assesment procedure.</short>
          <long>&#10; Starts the clear channel assesment procedure. Returns EBUSY if the radio&#10; is currently servicing a clear channel assesment, and SUCCESS otherwise.&#10; The check will be performed only in the RX_READY state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b08bc6ba908" loc="59:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b08bc6ba908"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b08bc6bab38" loc="59:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b08bc6bab38"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x2b08bc6b4630" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b08bc6bab38"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b08bc6b43c0" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b08bc6bab38"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x2b08bc6b81d8" loc="54:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2b08bc6b7290" loc="66:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x2b08bc6b8b00" loc="61:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2b08bc6b8890" loc="61:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x2b08bc6bb9a0" loc="53:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x2b08bc6bf020" loc="62:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b08bc6c2ce0" loc="62:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x2b08bc6be338" loc="74:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b08bc6be0c8" loc="74:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x2b08bc6bf820" loc="68:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b08bc6bed40" loc="81:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b08bc6bead0" loc="81:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x2b08bc7be4d0" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b08bc7be4d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x2b08bc7b6020" loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="84:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b08bba209b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x2b08bc7b7c98" loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b08bba209b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2b08bc7b9e18" loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08bba209b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b08bc7bed88" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b08bc7be4d0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x2b08bc7ba108" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b08bc7be4d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b08bc7bbe28" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b08bc7be4d0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b08bc7ba848" loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b08bc7b75c0" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08bba209b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b08bc7bb6f0" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b08bc7be4d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b08bc7bb480" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b08bc7be4d0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b08bc7b9020" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b08bc7b9708" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b08bc7deb88" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x2b08bc7de278" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x2b08bc7de5d8" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b08bc7de8f8" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b08bc7da020" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x2b08bc7dd2b0" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x2b08bc7dd610" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b08bc7dd930" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b08bc7ddc78" loc="83:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x2b08bc7a0020" loc="45:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x2b08bc7a3c18" loc="45:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x2b08bc7c7328" loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x2b08bc7fec40" loc="126:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08bba209b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x2b08bc7c27a8" loc="117:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08bba209b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x2b08bc7fd610" loc="128:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b08bba209b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x2b08bc7fd3a0" loc="128:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b08bba209b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x2b08bc7c8ba8" loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x2b08bc7c0338" loc="122:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b08bba209b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x2b08bc7c00c8" loc="122:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b08bba209b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x2b08bc7c3020" loc="113:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b08bba209b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x2b08bc7c5c88" loc="113:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b08bba209b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x2b08bc7c61d8" loc="97:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="93:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x2b08bc7f9de0" loc="141:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b08bba209b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x2b08bc7f9b70" loc="141:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b08bba209b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x2b08bc7c3758" loc="114:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08bba209b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x2b08bc7fc690" loc="131:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x2b08bc7fc420" loc="131:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x2b08bc7fa538" loc="136:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08bba209b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x2b08bc7fe518" loc="125:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b08bba209b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x2b08bc7fe2a8" loc="125:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b08bba209b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x2b08bc7f94a0" loc="140:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08bba209b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x2b08bc7c1290" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b08bba209b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x2b08bc7c1020" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b08bba209b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b08bc7c6b30" loc="103:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="99:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b08bc7c68c0" loc="103:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x2b08bc7c20a8" loc="116:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b08bba209b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x2b08bc7c3df8" loc="116:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b08bba209b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x2b08bc7c0b48" loc="123:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08bba209b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x2b08bc7fdd18" loc="129:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08bba209b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x2b08bc7fcd80" loc="132:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x2b08bc7fac80" loc="138:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08bba209b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x2b08bc7c19a8" loc="120:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08bba209b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x2b08bc7c7a40" loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x2b08bc7c54e0" loc="109:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="105:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b08bc7c5270" loc="109:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2b08bc821748" loc="95:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b08bc820020" loc="105:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="76:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControlC" ref="0x2b08bc8871d8" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x2b08bc885578" loc="87:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x2b08bc888328" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x2b08bc883780" loc="91:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x2b08bc883020" loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x2b08bc885c78" loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x2b08bc8864c0" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b08bc886250" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x2b08bc8c6290" loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2b08bc8c6020" loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x2b08bc888a58" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlC" ref="0x2b08bc886de8" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b08bc886b78" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x2b08bc887b00" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b08bc887890" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OCBMode" loc="4:../../CMC/crypto/OCBMode.nc">
      <function command="" provided="0" name="decrypt" ref="0x2b08bca72d18" loc="10:../../CMC/crypto/OCBMode.nc">
        <interfacedef-ref qname="OCBMode"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:200" alignment="I:1"><struct-ref name="CipherModeContext" ref="0x2b08bbd1d020"/>
                <typename><typedef-ref name="CipherModeContext" ref="0x2b08bbd1d9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b08bb142608"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="context" ref="0x2b08bca73140" loc="10:../../CMC/crypto/OCBMode.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:200" alignment="I:1"><struct-ref name="CipherModeContext" ref="0x2b08bbd1d020"/>
                <typename><typedef-ref name="CipherModeContext" ref="0x2b08bbd1d9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="plainText" ref="0x2b08bca734c8" loc="10:../../CMC/crypto/OCBMode.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="assocText" ref="0x2b08bca73850" loc="10:../../CMC/crypto/OCBMode.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="cipherText" ref="0x2b08bca73be0" loc="10:../../CMC/crypto/OCBMode.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="plainBytes" ref="0x2b08bca72020" loc="10:../../CMC/crypto/OCBMode.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
            </type-int>
          </variable>
          <variable name="assocBytes" ref="0x2b08bca72388" loc="10:../../CMC/crypto/OCBMode.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
            </type-int>
          </variable>
          <variable name="cipherBytes" ref="0x2b08bca726f8" loc="10:../../CMC/crypto/OCBMode.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b08bb142608"/></typename>
            </type-int>
          </variable>
          <variable name="IV" ref="0x2b08bca72a38" loc="10:../../CMC/crypto/OCBMode.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x2b08bca775f8" loc="6:../../CMC/crypto/OCBMode.nc">
        <interfacedef-ref qname="OCBMode"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:200" alignment="I:1"><struct-ref name="CipherModeContext" ref="0x2b08bbd1d020"/>
                <typename><typedef-ref name="CipherModeContext" ref="0x2b08bbd1d9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="context" ref="0x2b08bca30c50" loc="6:../../CMC/crypto/OCBMode.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:200" alignment="I:1"><struct-ref name="CipherModeContext" ref="0x2b08bbd1d020"/>
                <typename><typedef-ref name="CipherModeContext" ref="0x2b08bbd1d9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="keySize" ref="0x2b08bca77020" loc="6:../../CMC/crypto/OCBMode.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </variable>
          <variable name="key" ref="0x2b08bca77368" loc="6:../../CMC/crypto/OCBMode.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set_counter" ref="0x2b08bca6f448" loc="14:../../CMC/crypto/OCBMode.nc">
        <interfacedef-ref qname="OCBMode"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:200" alignment="I:1"><struct-ref name="CipherModeContext" ref="0x2b08bbd1d020"/>
                <typename><typedef-ref name="CipherModeContext" ref="0x2b08bbd1d9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:1">
              <typename><typedef-ref name="uint64_t" ref="0x2b08bb143088"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="context" ref="0x2b08bca71e78" loc="14:../../CMC/crypto/OCBMode.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:200" alignment="I:1"><struct-ref name="CipherModeContext" ref="0x2b08bbd1d020"/>
                <typename><typedef-ref name="CipherModeContext" ref="0x2b08bbd1d9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ctr" ref="0x2b08bca6f1c8" loc="14:../../CMC/crypto/OCBMode.nc">
            <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:1">
              <typename><typedef-ref name="uint64_t" ref="0x2b08bb143088"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get_counter" ref="0x2b08bca71758" loc="12:../../CMC/crypto/OCBMode.nc">
        <interfacedef-ref qname="OCBMode"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:1">
            <typename><typedef-ref name="uint64_t" ref="0x2b08bb143088"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:200" alignment="I:1"><struct-ref name="CipherModeContext" ref="0x2b08bbd1d020"/>
                <typename><typedef-ref name="CipherModeContext" ref="0x2b08bbd1d9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="context" ref="0x2b08bca714e8" loc="12:../../CMC/crypto/OCBMode.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:200" alignment="I:1"><struct-ref name="CipherModeContext" ref="0x2b08bbd1d020"/>
                <typename><typedef-ref name="CipherModeContext" ref="0x2b08bbd1d9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="encrypt" ref="0x2b08bca749b0" loc="8:../../CMC/crypto/OCBMode.nc">
        <interfacedef-ref qname="OCBMode"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:200" alignment="I:1"><struct-ref name="CipherModeContext" ref="0x2b08bbd1d020"/>
                <typename><typedef-ref name="CipherModeContext" ref="0x2b08bbd1d9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b08bb142608"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="context" ref="0x2b08bca77d38" loc="8:../../CMC/crypto/OCBMode.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:200" alignment="I:1"><struct-ref name="CipherModeContext" ref="0x2b08bbd1d020"/>
                <typename><typedef-ref name="CipherModeContext" ref="0x2b08bbd1d9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="plainText" ref="0x2b08bca76100" loc="8:../../CMC/crypto/OCBMode.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="assocText" ref="0x2b08bca76488" loc="8:../../CMC/crypto/OCBMode.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="cipherText" ref="0x2b08bca76818" loc="8:../../CMC/crypto/OCBMode.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="plainBytes" ref="0x2b08bca76b80" loc="8:../../CMC/crypto/OCBMode.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
            </type-int>
          </variable>
          <variable name="assocBytes" ref="0x2b08bca74020" loc="8:../../CMC/crypto/OCBMode.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
            </type-int>
          </variable>
          <variable name="cipherBytes" ref="0x2b08bca74390" loc="8:../../CMC/crypto/OCBMode.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b08bb142608"/></typename>
            </type-int>
          </variable>
          <variable name="IV" ref="0x2b08bca746d0" loc="8:../../CMC/crypto/OCBMode.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x2b08bca63a40" loc="61:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x2b08bca621d8" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x2b08bca62948" loc="72:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x2b08bca60810" loc="83:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="79:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x2b08bca5fe70" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b08bca5e630" loc="117:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="103:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x2b08bca600d8" loc="77:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b08bca5c290" loc="134:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="120:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2b08bca5c020" loc="134:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x2b08bca63328" loc="56:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x2b08bca5f020" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="86:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x2b08bca5f738" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="91:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b08bcb1c808" loc="75:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bcb1c278" loc="75:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b08bcb1c588" loc="75:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b08bcb17a68" loc="125:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="115:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bcb174a0" loc="125:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b08bcb177b0" loc="125:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b08bcb19c70" loc="112:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="102:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b08bcb1aa50" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bcb1a7e0" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b08bcb18e28" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bcb18880" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b08bcb18ba8" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CurveParam" loc="35:../../CMC/TinyECC/CurveParam.nc">
      <documentation loc="26:../../CMC/TinyECC/CurveParam.nc">
        <short>&#10; Interface for curve params&#10;&#10; Author: An Liu&#10; Date: 09/15/2005&#10;</short>
      </documentation>
      <function command="" provided="0" name="get_param" ref="0x2b08bcbc4e38" loc="37:../../CMC/TinyECC/CurveParam.nc">
        <interfacedef-ref qname="CurveParam"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:150" alignment="I:1"><struct-ref name="Params" ref="0x2b08bbd13ac8"/>
                <typename><typedef-ref name="Params" ref="0x2b08bbd11990"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="para" ref="0x2b08bcbc4bc8" loc="37:../../CMC/TinyECC/CurveParam.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:150" alignment="I:1"><struct-ref name="Params" ref="0x2b08bbd13ac8"/>
                <typename><typedef-ref name="Params" ref="0x2b08bbd11990"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="omega_mul" ref="0x2b08bcbbf2c0" loc="39:../../CMC/TinyECC/CurveParam.nc">
        <interfacedef-ref qname="CurveParam"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x2b08bcbc0560" loc="39:../../CMC/TinyECC/CurveParam.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="b" ref="0x2b08bcbc08a8" loc="39:../../CMC/TinyECC/CurveParam.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="omega" ref="0x2b08bcbc0c18" loc="39:../../CMC/TinyECC/CurveParam.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2b08bbb3d568"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="digits" ref="0x2b08bcbbf020" loc="39:../../CMC/TinyECC/CurveParam.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2b08bbd053d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BlockCipherInfo" loc="30:../../CMC/crypto/BlockCipherInfo.nc">
      <function command="" provided="0" name="getCanDecrypt" ref="0x2b08bd2cb020" loc="43:../../CMC/crypto/BlockCipherInfo.nc">
        <interfacedef-ref qname="BlockCipherInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08bba209b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMaxKeyLength" ref="0x2b08bd2cc868" loc="41:../../CMC/crypto/BlockCipherInfo.nc">
        <interfacedef-ref qname="BlockCipherInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPreferredBlockSize" ref="0x2b08bd2cc020" loc="39:../../CMC/crypto/BlockCipherInfo.nc">
        <documentation loc="32:../../CMC/crypto/BlockCipherInfo.nc">
          <short>&#10; Returns the preferred block size that this cipher operates with.</short>
          <long>&#10; Returns the preferred block size that this cipher operates with. &#10;&#10; @return the preferred block size for this cipher. In the case where the&#10;         cipher operates with multiple block sizes, this will pick one&#10;         particular size (deterministically).&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockCipherInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BlockCipher" loc="30:../../CMC/crypto/BlockCipher.nc">
      <function command="" provided="0" name="decrypt" ref="0x2b08bd2ce760" loc="78:../../CMC/crypto/BlockCipher.nc">
        <documentation loc="65:../../CMC/crypto/BlockCipher.nc">
          <short>&#10; Decrypts a single block (of blockSize) using the key in the keySize.</short>
          <long>&#10; Decrypts a single block (of blockSize) using the key in the keySize. Not&#10; all ciphers will implement this function (since providing encryption&#10; is a useful primitive). &#10;&#10; @param context holds the module specific opaque data related to the&#10;        key (perhaps key expansions).    &#10; @param cipherBlock a ciphertext block of blockSize&#10; @param plainBlock the resulting plaintext block of blockSize&#10;&#10; @return Whether the decryption was successful. Possible failure reasons&#10;         include not calling init() or an unimplimented decrypt function.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockCipher"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:176" alignment="I:1"><struct-ref name="CipherContext" ref="0x2b08bbd1e440"/>
                <typename><typedef-ref name="CipherContext" ref="0x2b08bbd1eb98"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="context" ref="0x2b08bd2d0d58" loc="78:../../CMC/crypto/BlockCipher.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:176" alignment="I:1"><struct-ref name="CipherContext" ref="0x2b08bbd1e440"/>
                <typename><typedef-ref name="CipherContext" ref="0x2b08bbd1eb98"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="cipherBlock" ref="0x2b08bd2ce140" loc="79:../../CMC/crypto/BlockCipher.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="plainBlock" ref="0x2b08bd2ce4d0" loc="79:../../CMC/crypto/BlockCipher.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x2b08bd2d1020" loc="48:../../CMC/crypto/BlockCipher.nc">
        <documentation loc="32:../../CMC/crypto/BlockCipher.nc">
          <short>&#10; Initialize the BlockCipher context.</short>
          <long>&#10; Initialize the BlockCipher context.&#10;&#10; @param context structure to hold the opaque data from this initialization&#10;        call. It should be passed to future invocations of this module&#10;        which use this particular key.&#10; @param blockSize size of the block in bytes. Some cipher implementation&#10;        may support multiple block sizes, in which case any valid size&#10;        is valid.&#10; @param keySize key size in bytes&#10; @param key pointer to the key&#10;&#10; @return Whether initialization was successful. The command may be&#10;         unsuccessful if the key size or blockSize are not valid for the&#10;         given cipher implementation. &#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockCipher"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:176" alignment="I:1"><struct-ref name="CipherContext" ref="0x2b08bbd1e440"/>
                <typename><typedef-ref name="CipherContext" ref="0x2b08bbd1eb98"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="context" ref="0x2b08bd2d2300" loc="48:../../CMC/crypto/BlockCipher.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:176" alignment="I:1"><struct-ref name="CipherContext" ref="0x2b08bbd1e440"/>
                <typename><typedef-ref name="CipherContext" ref="0x2b08bbd1eb98"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="blockSize" ref="0x2b08bd2d2670" loc="49:../../CMC/crypto/BlockCipher.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </variable>
          <variable name="keySize" ref="0x2b08bd2d29a8" loc="49:../../CMC/crypto/BlockCipher.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </variable>
          <variable name="key" ref="0x2b08bd2d2cf0" loc="49:../../CMC/crypto/BlockCipher.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="encrypt" ref="0x2b08bd2d0440" loc="62:../../CMC/crypto/BlockCipher.nc">
        <documentation loc="51:../../CMC/crypto/BlockCipher.nc">
          <short>&#10; Encrypts a single block (of blockSize) using the key in the keySize.</short>
          <long>&#10; Encrypts a single block (of blockSize) using the key in the keySize.&#10;&#10; @param context holds the module specific opaque data related to the&#10;        key (perhaps key expansions). &#10; @param plainBlock a plaintext block of blockSize&#10; @param cipherBlock the resulting ciphertext block of blockSize&#10;&#10; @return Whether the encryption was successful. Possible failure reasons&#10;         include not calling init(). &#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockCipher"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:176" alignment="I:1"><struct-ref name="CipherContext" ref="0x2b08bbd1e440"/>
                <typename><typedef-ref name="CipherContext" ref="0x2b08bbd1eb98"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="context" ref="0x2b08bd2d19f8" loc="62:../../CMC/crypto/BlockCipher.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:176" alignment="I:1"><struct-ref name="CipherContext" ref="0x2b08bbd1e440"/>
                <typename><typedef-ref name="CipherContext" ref="0x2b08bbd1eb98"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="plainBlock" ref="0x2b08bd2d1da8" loc="63:../../CMC/crypto/BlockCipher.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="cipherBlock" ref="0x2b08bd2d01b0" loc="63:../../CMC/crypto/BlockCipher.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x2b08bd4b7640" loc="31:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bd4b7060" loc="31:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x2b08bd4b73c0" loc="31:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x2b08bd4bc948" loc="15:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x2b08bd4b8760" loc="23:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b08bd4b8198" loc="23:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b08bbdcc860"/>
                <typename><typedef-ref name="message_t" ref="0x2b08bbdcada8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x2b08bd4b84e0" loc="23:/opt/tinyos-2.1.2/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
      <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2b08bd4fae20" loc="95:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b08bd4f7600" loc="105:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
        <documentation loc="97:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/opt/tinyos-2.1.2/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x2b08bd4f5328" loc="54:/opt/tinyos-2.1.2/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x2b08bd4f9bb0" loc="49:/opt/tinyos-2.1.2/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x2b08bd4ff1d8" loc="56:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x2b08bd4fe528" loc="72:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x2b08bd4fc020" loc="94:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b08bd4fdd60" loc="94:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x2b08bd4fed40" loc="79:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x2b08bd4ffcc8" loc="65:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b08bd4ffa58" loc="65:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x2b08bd4fc818" loc="100:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x2b08bd4fd5b8" loc="85:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/opt/tinyos-2.1.2/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x2b08bd506110" loc="71:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x2b08bd5069c8" loc="81:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x2b08bd5087b8" loc="62:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x2b08bd508548" loc="62:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x2b08bd5054e8" loc="91:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b08bd505278" loc="91:/opt/tinyos-2.1.2/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x2b08bd503020" loc="62:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x2b08bd503bc8" loc="69:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b08bd503958" loc="69:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x2b08bd502640" loc="80:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2b08bd5023d0" loc="80:/opt/tinyos-2.1.2/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b08bd6292a0" loc="48:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b08bd62dc28" loc="48:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b08bd629020" loc="48:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x2b08bd625c28" loc="79:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2b08bd6259b8" loc="79:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x2b08bd624988" loc="90:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="81:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b08bd6243e8" loc="90:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b08bd624708" loc="90:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x2b08bd626948" loc="65:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x2b08bd6232b0" loc="99:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="92:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b08bd622898" loc="99:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b08bd622bb8" loc="99:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b08bd623020" loc="99:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x2b08bd625258" loc="72:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b08bd628a18" loc="57:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x2b08bd628140" loc="57:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b08bd628460" loc="57:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b08bd628788" loc="57:/opt/tinyos-2.1.2/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b08bd603630" loc="46:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2b08bd6033c0" loc="46:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x2b08bd602408" loc="56:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x2b08bd603e20" loc="56:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x2b08bd602188" loc="56:/opt/tinyos-2.1.2/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Uart" loc="38:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x2b08bd66ae70" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08bba209b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x2b08bd66a070" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x2b08bd6664a8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b08bd666238" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x2b08bd6674e8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x2b08bd66b1d8" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x2b08bd66b8f8" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x2b08bd66a790" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0x2b08bd669578" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08bba209b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x2b08bd669e30" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b08bd669bc0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x2b08bd667b98" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b08bb141160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BigQueue" loc="43:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2007-09-19 17:29:17 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x2b08bd810020" loc="43:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
          <interfacedef-ref qname="BigQueue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b08bd810020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x2b08bd80d020" loc="73:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b08bd810020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x2b08bd80c290" loc="90:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param newVal - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b08bba45ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b08bd810020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x2b08bd80c020" loc="90:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b08bd810020"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x2b08bd80cc68" loc="101:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
        <documentation loc="92:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b08bd810020"/></type-var>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2b08bd80c9f8" loc="101:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x2b08bd80f7c0" loc="65:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x2b08bd80d778" loc="81:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2b08bd810020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x2b08bd810848" loc="50:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b08bba209b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x2b08bd80f020" loc="58:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/BigQueue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BigQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b08bb141b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Putchar" loc="44:/opt/tinyos-2.1.2/tos/lib/printf/Putchar.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/printf/Putchar.nc">
        <short> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.</short>
        <long> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.  The&#10; component providing this interface should be wired to PutcharC from&#10; $(TOSDIR)/lib/printf.&#10;&#10; @note On some platforms inclusion of &#60;stdio.h> may define putchar&#10; as a macro.  Any need for this should be eliminated by the&#10; implementation in PutcharP.nc, so &#34;#undef putchar&#34; prior to your&#10; use of this identifier when implementing this interface.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <function command="" provided="0" name="putchar" ref="0x2b08bd8708d0" loc="49:/opt/tinyos-2.1.2/tos/lib/printf/Putchar.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/lib/printf/Putchar.nc">
          <short> Send the unsigned char represented by c to the output.</short>
          <long> Send the unsigned char represented by c to the output.  Return&#10; -1 on error, and c if successful. *</long>
        </documentation>
        <interfacedef-ref qname="Putchar"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0x2b08bd870660" loc="49:/opt/tinyos-2.1.2/tos/lib/printf/Putchar.nc">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
