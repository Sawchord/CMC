<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="15:CMCBlinkToRadioAppC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x2abc8efc36f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2abc8f374140"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2abc8f374140"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2abc8f3a86d8"/></to>
    </wire>
    <wire loc="17:CMCBlinkToRadioAppC.nc">
      <from><interface-ref name="CMC0" scoped="" ref="0x2abc8efe45d8"/></from>
      <to><interface-ref name="CMC" scoped="" ref="0x2abc8f1cb248"/></to>
    </wire>
    <wire loc="29:../../CMC/CMCSocket.nc">
      <from><interface-ref name="CMC" scoped="" ref="0x2abc8f1cb248"/></from>
      <to><interface-ref name="CMC" scoped="" ref="0x2abc8f1c99c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="19:CMCBlinkToRadioAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2abc8efac1f8"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2abc8eda4da8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2abc8eda4da8"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2abc8edafc38"/></to>
    </wire>
    <wire loc="20:CMCBlinkToRadioAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2abc8efac800"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2abc8ef82c38"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2abc8ef82c38"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2abc8ef7e5e8"/></to>
    </wire>
    <wire loc="21:CMCBlinkToRadioAppC.nc">
      <from><interface-ref name="Timer0" scoped="" ref="0x2abc8efb5578"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2abc8efffe28"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2abc8efffe28"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2abc8f00f7d8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2abc8edae210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2abc90c721a8"/></to>
    </wire>
    <wire loc="119:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2abc8edae210"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2abc8f961bf0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2abc8edae210"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2abc90bad430"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2abc8edae210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2abc8f753238"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2abc8edae210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2abc90b5cde8"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2abc8edae210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2abc90a94398"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2abc8edae210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2abc8f1d1198"/></to>
    </wire>
    <wire loc="35:../../CMC/CMCC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2abc8edae210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2abc8f1fbda8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2abc8edae210"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2abc8f01e0c0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2abc8ef5a308"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2abc8ecbb5c8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2abc8ecbb5c8"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2abc8ed66d88"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2abc8ef5ace0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2abc8fa94870"/></to>
    </wire>
    <wire loc="122:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2abc8ef5ace0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2abc8f961138"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2abc8ef5ace0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2abc8edaca70"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2abc8edaca70"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2abc8edbe298"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2abc8ef59418"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2abc8edae210"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.2/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2abc8edb8690"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2abc8fc28dc0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2abc8edb3970"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2abc8ef3dae0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x2abc8edbd060"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2abc8ef3d4b0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2abc8edbe938"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2abc8ef9d2d8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2abc8edbe938"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2abc8edb2718"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2abc8edb2718"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2abc8edc3140"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2abc8edb2da8"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2abc8edb8690"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x2abc8edca388"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x2abc8edcfe00"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x2abc8edcfe00"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2abc8ee54430"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2abc8edc24f8"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2abc8edb2da8"/></to>
    </wire>
    <wire loc="191:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x2abc8ee07968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2abc8eef0520"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x2abc8edf14d0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2abc8ee82020"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2abc8ee82020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2abc90804710"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x2abc8edf54d0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2abc8ee95d60"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2abc8ee95d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2abc90883710"/></to>
    </wire>
    <wire loc="185:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x2abc8edfc1a0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2abc8eeaa8c8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2abc8eeaa8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2abc9090b710"/></to>
    </wire>
    <wire loc="196:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x2abc8ee10658"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2abc8eeffc38"/></to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x2abc8edd91a0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2abc8ee62740"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2abc8ee62740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2abc906eb710"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x2abc8edffe00"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2abc8ee9a5b8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2abc8ee9a5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2abc9089a710"/></to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x2abc8edd74d0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2abc8ee6b930"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2abc8ee6b930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2abc907076a8"/></to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x2abc8ede9658"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2abc8ee6c740"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2abc8ee6c740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2abc9077f710"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x2abc8edee968"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2abc8ee7f430"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2abc8ee7f430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2abc907fb710"/></to>
    </wire>
    <wire loc="179:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x2abc8ee02968"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2abc8ee91120"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2abc8ee91120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2abc9087a710"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x2abc8edd2968"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2abc8ee58020"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2abc8ee58020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2abc906fa710"/></to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x2abc8ede2968"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2abc8ee68d60"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2abc8ee68d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2abc90770710"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x2abc8ede6af0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2abc8ee7bbd8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2abc8ee7bbd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2abc90776710"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x2abc8edfae00"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2abc8ee8d8c8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2abc8ee8d8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2abc907f2710"/></to>
    </wire>
    <wire loc="188:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x2abc8ee09658"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2abc8eea7d60"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2abc8eea7d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2abc90902710"/></to>
    </wire>
    <wire loc="194:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x2abc8ee03348"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2abc8eef5c38"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x2abc8edf71a0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2abc8ee98a50"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2abc8ee98a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2abc90889710"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2abc8ee54430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2abc906f1710"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x2abc8edde020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2abc8ee64120"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2abc8ee64120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2abc90767710"/></to>
    </wire>
    <wire loc="192:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x2abc8ee05020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2abc8eeeccd8"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x2abc8eddc348"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2abc8ee6e500"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2abc8ee6e500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2abc907856a8"/></to>
    </wire>
    <wire loc="166:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x2abc8edf0658"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2abc8ee81120"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2abc8ee81120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2abc90801710"/></to>
    </wire>
    <wire loc="177:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x2abc8edf4658"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2abc8ee94e18"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2abc8ee94e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2abc90880710"/></to>
    </wire>
    <wire loc="186:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x2abc8edfb348"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2abc8eea9a50"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2abc8eea9a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2abc90908710"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x2abc8edd8348"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2abc8ee618c8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2abc8ee618c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2abc906e8710"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x2abc8edd6658"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2abc8ee6aa50"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2abc8ee6aa50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2abc90704710"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x2abc8ede87e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2abc8ee7d8c8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2abc8ee7d8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2abc9077c710"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x2abc8edecaf0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2abc8ee8f5b8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2abc8ee8f5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2abc907f8710"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x2abc8ee01af0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2abc8ee902a8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2abc8ee902a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2abc90877710"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x2abc8edd1af0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2abc8ee56120"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2abc8ee56120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2abc906f7710"/></to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x2abc8ede1af0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2abc8ee67e18"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2abc8ee67e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2abc9076d710"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x2abc8ede5c78"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2abc8ee7ad60"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2abc8ee7ad60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2abc90773710"/></to>
    </wire>
    <wire loc="189:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x2abc8ee087e0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2abc8eea6e18"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2abc8eea6e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2abc908ff710"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x2abc8edf2020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2abc8ee84e40"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2abc8ee84e40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2abc908086a8"/></to>
    </wire>
    <wire loc="175:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x2abc8edf6348"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2abc8ee96bd8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2abc8ee96bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2abc90886710"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x2abc8edfd020"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2abc8ee99740"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2abc8ee99740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2abc9090e710"/></to>
    </wire>
    <wire loc="195:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x2abc8ee114d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2abc8ef043e0"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x2abc8edda020"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2abc8ee535b8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2abc8ee535b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2abc906ee710"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x2abc8eddd1a0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2abc8ee632a8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2abc8ee632a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2abc90764710"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x2abc8ee00c78"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2abc8ee9b500"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2abc8ee9b500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2abc9089d6a8"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x2abc8edea4d0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2abc8ee6d5b8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2abc8ee6d5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2abc90782710"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x2abc8edef7e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2abc8ee802a8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2abc8ee802a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2abc907fe710"/></to>
    </wire>
    <wire loc="178:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x2abc8edf37e0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2abc8ee92020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2abc8ee92020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2abc9087d710"/></to>
    </wire>
    <wire loc="187:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x2abc8ee0a4d0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2abc8eea8bd8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2abc8eea8bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2abc90905710"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x2abc8edc5790"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2abc8ee5adc0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2abc8ee5adc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2abc906fd6a8"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x2abc8edd57e0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2abc8ee69bd8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2abc8ee69bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2abc90701710"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x2abc8ede7968"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2abc8ee7ca50"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2abc8ee7ca50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2abc90779710"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x2abc8edebc78"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2abc8ee8e740"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2abc8ee8e740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2abc907f5710"/></to>
    </wire>
    <wire loc="193:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x2abc8ee041a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2abc8eefa3e0"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x2abc8edf8020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2abc8ee87930"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2abc8ee87930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2abc9088d6a8"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x2abc8ede4e00"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2abc8ee79e18"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2abc8ee79e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2abc907e4710"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x2abc8edd0c78"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2abc8ee552a8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2abc8ee552a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2abc906f4710"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x2abc8ede0e00"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2abc8ee65020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2abc8ee65020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2abc9076a710"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x2abc8ec941c8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2abc8ed65c58"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x2abc8ed6f168"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x2abc8ecbae28"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2abc8ed8a988"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2abc8f0c5578"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2abc8ef9d2d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2abc8ef7e020"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2abc8ef7dce8"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x2abc8ef7fe10"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2abc8ef7fe10"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x2abc8edd1af0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2abc8ef7ce70"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x2abc8efa0020"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2abc8efa0020"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x2abc8edd2968"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2abc8ef7a020"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x2abc8ef9e1b0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2abc8ef9e1b0"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x2abc8edc5790"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2abc8f00f7d8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2abc8f01edb8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2abc8f01edb8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2abc8f198af8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2abc8f01e0c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2abc8f0168e8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2abc8f014298"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2abc8f1a6440"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2abc8f0168e8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2abc8f12a020"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2abc8f1b0e80"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2abc8f151ab0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2abc8f14cc70"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x2abc8f0281c8"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x2abc8f0281c8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2abc8f12a7c8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2abc8f1bb648"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x2abc8f0363b8"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x2abc8f0363b8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2abc8f126a90"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2abc8f126a90"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2abc9099fa90"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2abc8f12a020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2abc909a3060"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2abc8f12a7c8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2abc909a3808"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2abc9099cb98"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2abc8f0aa288"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2abc8f0aa288"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2abc8f0b8e00"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2abc90997b60"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2abc8f0bf3c0"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2abc8f0bf3c0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2abc8f0ca020"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2abc90996e68"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2abc8f0be7f8"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2abc8f0be7f8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2abc8f0c9340"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x2abc90991060"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x2abc8f0ba9e8"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x2abc8f0ba9e8"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x2abc8f0c5c78"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x2abc8f164cf0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2abc8ec941c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2abc8f1a9020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2abc8ec941c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:../../CMC/CMCC.nc">
      <from><interface-ref name="CMC" scoped="" ref="0x2abc8f1c99c0"/></from>
      <to><interface-ref name="CMC" scoped="" ref="0x2abc8f1fde38"/></to>
    </wire>
    <wire loc="36:../../CMC/CMCC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2abc8f1fa448"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2abc8eda4da8"/></to>
    </wire>
    <wire loc="38:../../CMC/CMCC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2abc8f1fab60"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2abc8f1c4a60"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2abc8f1c4a60"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2abc8f00f7d8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:../../CMC/CMCC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2abc8f1f5aa0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2abc8f1d4ca0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2abc8f1d4ca0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2abc8f1eea08"/></to>
    </wire>
    <wire loc="48:../../CMC/CMCC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2abc8f267740"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2abc8fda2020"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2abc8fda2020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2abc90d19020"/></to>
    </wire>
    <wire loc="49:../../CMC/CMCC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2abc8f27f958"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2abc8fda3390"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2abc8fda3390"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2abc90d1a398"/></to>
    </wire>
    <wire loc="50:../../CMC/CMCC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2abc8f268020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2abc8fd97490"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2abc8fd97490"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2abc8f372300"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2abc8f248848"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../CMC/CMCC.nc">
      <from><interface-ref name="NN" scoped="" ref="0x2abc8f2b9538"/></from>
      <to><interface-ref name="NN" scoped="" ref="0x2abc8ff6c5d8"/></to>
    </wire>
    <wire loc="58:../../CMC/CMCC.nc">
      <from><interface-ref name="ECC" scoped="" ref="0x2abc8f2e39c8"/></from>
      <to><interface-ref name="ECC" scoped="" ref="0x2abc8fd93b98"/></to>
    </wire>
    <wire loc="47:../../CMC/TinyECC/ECCC.nc">
      <from><interface-ref name="ECC" scoped="" ref="0x2abc8fd93b98"/></from>
      <to><interface-ref name="ECC" scoped="" ref="0x2abc8fddc518"/></to>
    </wire>
    <wire loc="59:../../CMC/CMCC.nc">
      <from><interface-ref name="ECIES" scoped="" ref="0x2abc8f2dc2b8"/></from>
      <to><interface-ref name="ECIES" scoped="" ref="0x2abc9048f798"/></to>
    </wire>
    <wire loc="40:../../CMC/TinyECC/ECIESC.nc">
      <from><interface-ref name="ECIES" scoped="" ref="0x2abc9048f798"/></from>
      <to><interface-ref name="ECIES" scoped="" ref="0x2abc9048be28"/></to>
    </wire>
    <wire loc="67:../../CMC/CMCC.nc">
      <from><interface-ref name="OCBMode" scoped="" ref="0x2abc8f271aa8"/></from>
      <to><interface-ref name="OCBMode" scoped="" ref="0x2abc90521690"/></to>
    </wire>
    <wire loc="13:../../CMC/crypto/OCBModeC.nc">
      <from><interface-ref name="OCBMode" scoped="" ref="0x2abc90521690"/></from>
      <to><interface-ref name="OCBMode" scoped="" ref="0x2abc9051eb40"/></to>
    </wire>
    <wire loc="70:../../CMC/CMCC.nc">
      <from><interface-ref name="SHA1" scoped="" ref="0x2abc8f2d89d0"/></from>
      <to><interface-ref name="SHA1" scoped="" ref="0x2abc9048ccb0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x2abc8f1d66f0"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x2abc8f1d19f0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2abc8f1dc998"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2abc8f1d1198"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2abc8f3a86d8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2abc8f3cd4a0"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2abc8f36f420"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2abc8f3a2020"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2abc8f3a2020"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2abc8f3c7cd0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2abc8f36f9f8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2abc8f3a0e38"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2abc8f3a0e38"/></from>
      <to><interface-ref name="PacketForActiveMessage" scoped="" ref="0x2abc8f3c31e0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2abc8f3731c8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2abc8f3a5798"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2abc8f3a5798"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2abc8f3ca498"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2abc8f372e48"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2abc8f3a3498"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2abc8f3a3498"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2abc8f3c71c8"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2abc8f39b848"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2abc8f39daf8"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2abc8f39daf8"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2abc8f3f76a8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2abc8f372300"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2abc8f3a4928"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2abc8f3a4928"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2abc8f3c85b0"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2abc8f37b0d0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2abc8f39d1a0"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2abc8f39d1a0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2abc8f3d9cf8"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2abc8f394828"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2abc8f3c25e0"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2abc8f3c25e0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2abc8f3f62d0"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2abc8f381190"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2abc8f39fa80"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2abc8f39fa80"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2abc8f3c5ac0"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x2abc8f390550"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x2abc8f3c12e8"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x2abc8f3c12e8"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x2abc8f3f5020"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x2abc8f393260"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2abc8f3d5190"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2abc8f3d5190"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2abc8f3e9298"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2abc8f3ac130"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2abc8f3d0130"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2abc8f3d0130"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2abc8f40d378"/></to>
    </wire>
    <wire loc="215:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2abc8f3cd4a0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2abc8f7a9988"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x2abc8f3b7d28"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x2abc8f3ee348"/></to>
    </wire>
    <wire loc="305:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x2abc8f3ee348"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x2abc8f9420c8"/></to>
    </wire>
    <wire loc="270:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2abc8f40d378"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2abc8f915270"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2abc8f3c7cd0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2abc8f59b1a0"/></to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForActiveMessage" scoped="" ref="0x2abc8f3c31e0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2abc8f59f700"/></to>
    </wire>
    <wire loc="121:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2abc8f3ca498"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2abc8f59d510"/></to>
    </wire>
    <wire loc="123:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2abc8f3c71c8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2abc8f59caa0"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x2abc8f3b9870"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x2abc8f3f1020"/></to>
    </wire>
    <wire loc="303:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x2abc8f3f1020"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x2abc8f946cd0"/></to>
    </wire>
    <wire loc="216:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2abc8f3f76a8"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2abc8f7c9060"/></to>
    </wire>
    <wire loc="122:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2abc8f3c85b0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2abc8f59c388"/></to>
    </wire>
    <wire loc="269:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2abc8f3e9298"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2abc8f912020"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2abc8f3d4d80"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x2abc8f3ece78"/></to>
    </wire>
    <wire loc="307:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2abc8f3ece78"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x2abc8f974220"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x2abc8f3ba390"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x2abc8f3f5b78"/></to>
    </wire>
    <wire loc="304:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x2abc8f3f5b78"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x2abc8f979860"/></to>
    </wire>
    <wire loc="248:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2abc8f3d9cf8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2abc8f8aa3f0"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x2abc8f3a2be0"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x2abc8f3c6910"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x2abc8f3c6910"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x2abc8f59b8b8"/></to>
    </wire>
    <wire loc="187:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2abc8f3f62d0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2abc8f77e268"/></to>
    </wire>
    <wire loc="125:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2abc8f3c5ac0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2abc8f5a01f0"/></to>
    </wire>
    <wire loc="224:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x2abc8f3f5020"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x2abc8f837bd0"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2abc8f3d4570"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2abc8f3ec668"/></to>
    </wire>
    <wire loc="306:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2abc8f3ec668"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2abc8f9769d0"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x2abc8f3a0860"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x2abc8f3c54d0"/></to>
    </wire>
    <wire loc="129:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x2abc8f3c54d0"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x2abc8f59a020"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2abc8f7a9988"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x2abc8f7c9b30"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x2abc8f9420c8"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x2abc8f996020"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Notifier" scoped="" ref="0x2abc8f3e5020"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2abc8f636840"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendResource" scoped="" ref="0x2abc8f3dbd60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2abc8f609200"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2abc8f609200"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2abc90b11720"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2abc8f59b1a0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2abc90a67388"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2abc8f59d510"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2abc90a6a698"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2abc8f59caa0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2abc90a69c28"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x2abc8f3f9c40"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x2abc8f727900"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x2abc8f727900"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x2abc90b29d98"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForIeee154Message" scoped="" ref="0x2abc8f3d9060"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2abc8f604980"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x2abc8f946cd0"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x2abc8f99ab48"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2abc8f7c9060"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2abc90bb5458"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2abc8f59f700"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2abc90a6b888"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2abc8f59c388"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2abc90a69510"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2abc8f912020"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2abc90c2a020"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2abc8f974220"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x2abc8fa98438"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x2abc8f979860"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x2abc8f990860"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Send" scoped="" ref="0x2abc8f3e1b00"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x2abc8f637578"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x2abc8f59b8b8"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x2abc90a67aa0"/></to>
    </wire>
    <wire loc="117:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2abc8f77e268"/></from>
      <to><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x2abc8f7af470"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x2abc8f837bd0"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x2abc90bac9c8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2abc8f5a01f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2abc90a6c268"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2abc8f915270"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2abc90c2e1a0"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Receive" scoped="" ref="0x2abc8f3e6818"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x2abc8f6362a8"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2abc8f9769d0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2abc8f98e9d0"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x2abc8f59a020"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x2abc90a661e0"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2abc8f43a5e8"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2abc8f72a980"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2abc8f72a980"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2abc90b30d50"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2abc8f45c3f0"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2abc8f4f2180"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2abc8f45f730"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2abc8f912020"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RF230Packet" scoped="" ref="0x2abc8f456688"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2abc8f947bd8"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2abc8f947bd8"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2abc8f95ea50"/></to>
    </wire>
    <wire loc="110:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2abc8f4e7190"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2abc8f9734b8"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2abc8f9734b8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2abc8fa5b2e0"/></to>
    </wire>
    <wire loc="116:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2abc8f598328"/></from>
      <to><interface-ref name="ActiveMessageConfig" scoped="" ref="0x2abc8f42e760"/></to>
    </wire>
    <wire loc="117:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2abc8f599430"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x2abc8f591100"/></to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2abc8f599d18"/></from>
      <to><interface-ref name="TinyosReceive" scoped="" ref="0x2abc8f68a060"/></to>
    </wire>
    <wire loc="119:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2abc8f59a678"/></from>
      <to><interface-ref name="TinyosPacket" scoped="" ref="0x2abc8f68a638"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2abc8f5b03f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2abc8f609200"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2abc8f591a48"/></from>
      <to><interface-ref name="TinyosSend" scoped="" ref="0x2abc8f68b740"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2abc8f636e38"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2abc8f72a980"/></to>
    </wire>
    <wire loc="154:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2abc8f661ba0"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x2abc8f65a838"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2abc8f6605b8"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x2abc8f68c2a8"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2abc8f632d98"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x2abc8f68c880"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2abc8f689490"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2abc8f78f470"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2abc8f78f470"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2abc90b60da0"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2abc8f689d78"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2abc8f77fbd0"/></to>
    </wire>
    <wire loc="114:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2abc8f77fbd0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2abc8f77b5b8"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2abc8f688378"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2abc8f726b98"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2abc8f726b98"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2abc90b27020"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2abc8f725ab0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2abc8f77ee20"/></to>
    </wire>
    <wire loc="115:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2abc8f77ee20"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2abc8f77bb90"/></to>
    </wire>
    <wire loc="181:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2abc8f78c580"/></from>
      <to><interface-ref name="UniqueConfig" scoped="" ref="0x2abc8f41bb40"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2abc8f78d510"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2abc8f77f2e8"/></to>
    </wire>
    <wire loc="113:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2abc8f77f2e8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2abc8f77cc38"/></to>
    </wire>
    <wire loc="191:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2abc8f77aa10"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2abc8f8aa3f0"/></to>
    </wire>
    <wire loc="193:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2abc8f77cc38"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2abc8f795430"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2abc8f795430"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2abc8f7c85c8"/></to>
    </wire>
    <wire loc="194:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2abc8f77b5b8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2abc8f795d18"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2abc8f795d18"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2abc8f7c7020"/></to>
    </wire>
    <wire loc="195:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2abc8f77bb90"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2abc8f7ca2e8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2abc8f7ca2e8"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2abc8f7c75f8"/></to>
    </wire>
    <wire loc="211:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2abc8f7c9b30"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2abc8f838270"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2abc8f838270"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2abc90bae870"/></to>
    </wire>
    <wire loc="212:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2abc8f7c85c8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2abc8f838ce0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2abc8f838ce0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2abc90bada08"/></to>
    </wire>
    <wire loc="213:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2abc8f7c7020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2abc8f837638"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2abc8f837638"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2abc90bac430"/></to>
    </wire>
    <wire loc="214:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2abc8f7c75f8"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2abc8f90f9f8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2abc8f90f9f8"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2abc90c289f8"/></to>
    </wire>
    <wire loc="221:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2abc8f8343f0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2abc8f869020"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2abc8f869020"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2abc90bf6b58"/></to>
    </wire>
    <wire loc="222:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2abc8f834c98"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2abc8f78fd18"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2abc8f78fd18"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2abc90b5c6c8"/></to>
    </wire>
    <wire loc="223:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x2abc8f8355d8"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x2abc8f95a5b8"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x2abc8f95a5b8"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x2abc8f954a08"/></to>
    </wire>
    <wire loc="228:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2abc8f78ddf8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2abc8f8698c8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2abc8f8698c8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2abc90bf4578"/></to>
    </wire>
    <wire loc="237:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2abc8f867ce8"/></from>
      <to><interface-ref name="RandomCollisionConfig" scoped="" ref="0x2abc8f4120d0"/></to>
    </wire>
    <wire loc="238:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2abc8f8680c0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2abc8f8602a8"/></to>
    </wire>
    <wire loc="239:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2abc8f8689a8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2abc8f860b50"/></to>
    </wire>
    <wire loc="240:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2abc8f8670f0"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2abc8f4f2180"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="246:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AckReceivedFlag" scoped="" ref="0x2abc8f8a6bd8"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x2abc8f905660"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="247:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2abc8f8a8d90"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2abc8f4f2180"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="252:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2abc8f8a7a18"/></from>
      <to><interface-ref name="SoftwareAckConfig" scoped="" ref="0x2abc8f41faf0"/></to>
    </wire>
    <wire loc="253:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2abc8f8aad38"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2abc8f8c4020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2abc8f8c4020"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2abc8f8bf5b8"/></to>
    </wire>
    <wire loc="254:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2abc8f8a8670"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2abc8f8c48c8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2abc8f8c48c8"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2abc8f8be020"/></to>
    </wire>
    <wire loc="259:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2abc8f8bcda0"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x2abc8f42b300"/></to>
    </wire>
    <wire loc="260:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2abc8f8bf5b8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2abc8f9583f0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2abc8f9583f0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2abc8f9538c8"/></to>
    </wire>
    <wire loc="261:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2abc8f8be020"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2abc8f958c98"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2abc8f958c98"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2abc8f9522a8"/></to>
    </wire>
    <wire loc="262:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubRadioCCA" scoped="" ref="0x2abc8f8be780"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x2abc8f947448"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x2abc8f947448"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x2abc8f95e2c0"/></to>
    </wire>
    <wire loc="267:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2abc8f90ea30"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x2abc8f974220"/></to>
    </wire>
    <wire loc="268:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2abc8f90d9f0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2abc8f9230e0"/></to>
    </wire>
    <wire loc="271:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x2abc8f90b8c8"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x2abc8f905660"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="276:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2abc8f922020"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2abc8f947bd8"/></to>
    </wire>
    <wire loc="286:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2abc8f94f060"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x2abc8f42b300"/></to>
    </wire>
    <wire loc="287:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2abc8f9538c8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2abc8f9482c8"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2abc8f9482c8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2abc8f95f0c0"/></to>
    </wire>
    <wire loc="288:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2abc8f9522a8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2abc8f948bf0"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2abc8f948bf0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2abc8f95f9e8"/></to>
    </wire>
    <wire loc="289:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0x2abc8f954a08"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x2abc8f94b3e0"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x2abc8f94b3e0"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x2abc8f9602d0"/></to>
    </wire>
    <wire loc="301:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2abc8f96f5c8"/></from>
      <to><interface-ref name="RF230DriverConfig" scoped="" ref="0x2abc8f400e48"/></to>
    </wire>
    <wire loc="302:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2abc8f96e730"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2abc8f912020"/></to>
    </wire>
    <wire loc="309:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x2abc8f96a378"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x2abc8f905660"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="310:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x2abc8f969020"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x2abc8f905660"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="311:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x2abc8f969b78"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x2abc8f905660"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="312:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2abc8f968768"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2abc8f4f2180"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2abc8f4f2180"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2abc90a89c58"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2abc90a88af8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2abc8f4e7190"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x2abc90a849f0"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x2abc8f4caa98"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2abc90a63700"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2abc8f589c60"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2abc90a66838"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2abc8f59a678"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2abc90a65740"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2abc8f599430"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2abc90a64060"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2abc8f599d18"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2abc90a64638"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2abc8f598328"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2abc8f608020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2abc90b10510"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2abc8f608760"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2abc90b10c50"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2abc90b0f570"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2abc8f607020"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2abc90b0fcf0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2abc90a94970"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2abc90b0e800"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2abc8ec941c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2abc90b27dc0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2abc8f589c60"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2abc90b26890"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2abc8f725ab0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x2abc90b59020"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x2abc8f759d58"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x2abc8f759d58"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x2abc8f753850"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2abc90b59bd8"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2abc90b55140"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2abc90b55140"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2abc8f752b18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2abc90b5b458"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2abc8f78d510"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2abc90b5bd40"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2abc8f78ddf8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="UniqueConfig" scoped="" ref="0x2abc90b5a4a8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2abc8f78c580"/></to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x2abc8f7ae100"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2abc8f77aa10"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x2abc90baa450"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x2abc8f8355d8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x2abc90ba9268"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x2abc8f4caa98"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2abc90ba9c98"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2abc8f8343f0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2abc90ba8578"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2abc8f834c98"/></to>
    </wire>
    <wire loc="189:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x2abc90ba74f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2abc8ec941c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="stateDoneTask" scoped="" ref="0x2abc90ba7c90"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2abc8ec941c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="deliverTask" scoped="" ref="0x2abc90ba8d18"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2abc8ec941c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2abc90bf4d38"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2abc8f8680c0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2abc90bf02a8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2abc8f867ce8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2abc90bf2670"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2abc8f8689a8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2abc90bf2d90"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2abc8f8670f0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2abc90bf19d8"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2abc8f1d4ca0"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <from><interface-ref name="calcNextRandom" scoped="" ref="0x2abc90bf0d58"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2abc8ec941c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2abc8f8c8978"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x2abc8f8c2bf0"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x2abc8f8c3020"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x2abc8f8be780"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x2abc8f8c5268"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x2abc8f8c0638"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2abc8f8c3740"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2abc8f8bc020"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x2abc8f8c25b8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2abc8f8bcda0"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x2abc8f8c7c98"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x2abc8f8c0060"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x2abc8f8c73f0"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x2abc8f8c1740"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2abc90c235e8"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2abc8f90d9f0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2abc90c25538"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x2abc8f90ea30"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x2abc90c24618"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2abc8f91cdc0"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.2/tos/system/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2abc8f91cdc0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2abc8f014298"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x2abc90c26928"/></from>
      <to><interface-ref name="TimeStampFlag" scoped="" ref="0x2abc8f90b8c8"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2abc8f95cb78"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x2abc8f955020"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x2abc8f9573f0"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x2abc8f952a08"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2abc8f957b10"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2abc8f9502a8"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x2abc8f9568c8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2abc8f94f060"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x2abc8f95a020"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x2abc8f954430"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x2abc8f95b700"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x2abc8f955a90"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2abc8fa5b2e0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2abc8fc71b68"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2abc8f97b458"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2abc8f9933b0"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2abc8fa98438"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2abc8fc6a400"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2abc8f9b9100"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2abc8f96f5c8"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x2abc8f9b9e10"/></from>
      <to><interface-ref name="TransmitPowerFlag" scoped="" ref="0x2abc8f96a378"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x2abc8f9b8988"/></from>
      <to><interface-ref name="RSSIFlag" scoped="" ref="0x2abc8f969020"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x2abc8f9b7518"/></from>
      <to><interface-ref name="TimeSyncFlag" scoped="" ref="0x2abc8f969b78"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2abc8f9b62b0"/></from>
      <to><interface-ref name="PacketTimeStamp" scoped="" ref="0x2abc8f96e730"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2abc8f97e020"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x2abc8fa98438"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2abc8f9b2ab8"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2abc8f968768"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x2abc8f98c130"/></from>
      <to><interface-ref name="SELN" scoped="" ref="0x2abc8fa63710"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x2abc8fa63710"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x2abc8edd74d0"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2abc8f98b4f8"/></from>
      <to><interface-ref name="SpiResource" scoped="" ref="0x2abc8fa60990"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2abc8fa60990"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2abc8faade80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x2abc8f9841f0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x2abc8fa5f5e8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x2abc8fa5f5e8"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x2abc8fab59d0"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x2abc8f984d00"/></from>
      <to><interface-ref name="SLP_TR" scoped="" ref="0x2abc8fa5e140"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x2abc8fa5e140"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x2abc8eddd1a0"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x2abc8f989e70"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x2abc8fa5d338"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x2abc8fa5d338"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x2abc8edd91a0"/></to>
    </wire>
    <wire loc="110:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x2abc8f97f5e8"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x2abc8fa5c4c0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x2abc8fa5c4c0"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x2abc8fa97cd8"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x2abc8f9b2020"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x2abc8f4caa98"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x2abc8f97dc60"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x2abc8fcac3c0"/></to>
    </wire>
    <wire loc="847:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <from><interface-ref name="releaseSpi" scoped="" ref="0x2abc8fa21d98"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2abc8ec941c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2abc8fc71b68"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2abc90ccb750"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x2abc8fab59d0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x2abc8faaa628"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2abc8fc6a400"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2abc8fcb8c38"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortCLKM" scoped="" ref="0x2abc8fa87c18"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x2abc8edebc78"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortIRQ" scoped="" ref="0x2abc8fa86e08"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x2abc8edee968"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x2abc8fa89540"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2abc8fb70ca0"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x2abc8fb70ca0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2abc8fb9b350"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2abc8faad1d8"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2abc8faa9120"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2abc8fab5388"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2abc8faaa020"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2abc8fa95cd0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2abc8fab4a18"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2abc8faade80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2abc8faa9d88"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x2abc8fad33c8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2abc8fb82748"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2abc8fb82748"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2abc90c70590"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2abc8fad2020"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2abc8fb81c50"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2abc8fb81c50"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2abc90c6fac8"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x2abc8fad4150"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x2abc8fb0c020"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x2abc8fb0c020"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x2abc8fb09dc0"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2abc8fad27c8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2abc8ed8b3c8"/></to>
    </wire>
    <wire loc="296:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x2abc8faf4b58"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2abc8ec941c8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x2abc8fb40350"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2abc8ed8b3c8"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x2abc8fb43c70"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x2abc8edd74d0"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x2abc8fb03de0"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x2abc8edd6658"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x2abc8fb42020"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x2abc8edd57e0"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x2abc8fb41190"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x2abc8ede2968"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2abc8fb81510"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2abc90c6f388"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2abc90c6e3e8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2abc8fb80550"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2abc90c6eb68"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2abc90c72780"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2abc90c6c780"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2abc8ec941c8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2abc8fb675e8"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2abc8fb9dc90"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2abc8fb786e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2abc8fba4be0"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2abc8fba9a20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x2abc8fb97c48"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2abc8fba9a20"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x2abc8fb92020"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2abc8fba9a20"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x2abc8fb8e360"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x2abc90cc89c8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2abc8fb786e0"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x2abc90cc3a80"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2abc8fba9a20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="27:/opt/tinyos-2.1.2/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2abc8fc27540"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2abc8fb786e0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2abc8fcb7e48"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2abc8fc8e270"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2abc8fcbc450"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2abc8fc65108"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2abc8fc65108"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2abc8fc62e08"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2abc8fc96020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2abc8fb786e0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2abc90d1a398"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2abc90d0e9a8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2abc90d19020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2abc8f36f9f8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2abc8fda2bd8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2abc90d19bd8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2abc90d19bd8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2abc8f381190"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2abc8fda02a8"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2abc90d172a8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2abc90d172a8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2abc8f37b0d0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2abc90d0d5e8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2abc8fd64020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2abc90d0c268"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2abc8f381190"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2abc8fd64020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2abc8fdb72c8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2abc8fdb6060"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2abc8f3731c8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2abc8fdb6c38"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2abc8f381190"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2abc8fdb4268"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2abc8f36f9f8"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x2abc8fdb3020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2abc8ec941c8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x2abc8fdb37c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2abc8ec941c8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2abc8fd97a28"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2abc8f36f9f8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2abc8fd96700"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2abc8f381190"/></to>
    </wire>
    <wire loc="48:../../CMC/TinyECC/ECCC.nc">
      <from><interface-ref name="NN" scoped="" ref="0x2abc8fdd8758"/></from>
      <to><interface-ref name="NN" scoped="" ref="0x2abc8ff6c5d8"/></to>
    </wire>
    <wire loc="49:../../CMC/TinyECC/ECCC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2abc8fdd27c0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2abc901fb638"/></to>
    </wire>
    <wire loc="77:../../CMC/TinyECC/ECCC.nc">
      <from><interface-ref name="CurveParam" scoped="" ref="0x2abc8fdd2020"/></from>
      <to><interface-ref name="CurveParam" scoped="" ref="0x2abc9025fe18"/></to>
    </wire>
    <wire loc="78:../../CMC/TinyECC/ECCC.nc">
      <from><interface-ref name="CurveParam" scoped="" ref="0x2abc8ff66c40"/></from>
      <to><interface-ref name="CurveParam" scoped="" ref="0x2abc9025fe18"/></to>
    </wire>
    <wire loc="79:../../CMC/TinyECC/ECCC.nc">
      <from><interface-ref name="NN" scoped="" ref="0x2abc902f15d0"/></from>
      <to><interface-ref name="NN" scoped="" ref="0x2abc8ff6c5d8"/></to>
    </wire>
    <wire loc="41:../../CMC/TinyECC/ECIESC.nc">
      <from><interface-ref name="ECC" scoped="" ref="0x2abc904f8d40"/></from>
      <to><interface-ref name="ECC" scoped="" ref="0x2abc8fd93b98"/></to>
    </wire>
    <wire loc="42:../../CMC/TinyECC/ECIESC.nc">
      <from><interface-ref name="NN" scoped="" ref="0x2abc904fc778"/></from>
      <to><interface-ref name="NN" scoped="" ref="0x2abc8ff6c5d8"/></to>
    </wire>
    <wire loc="43:../../CMC/TinyECC/ECIESC.nc">
      <from><interface-ref name="SHA1" scoped="" ref="0x2abc904f6e50"/></from>
      <to><interface-ref name="SHA1" scoped="" ref="0x2abc9048ccb0"/></to>
    </wire>
    <wire loc="14:../../CMC/crypto/OCBModeC.nc">
      <from><interface-ref name="BlockCipher" scoped="" ref="0x2abc90514c68"/></from>
      <to><interface-ref name="BlockCipher" scoped="" ref="0x2abc9051d368"/></to>
    </wire>
    <wire loc="15:../../CMC/crypto/OCBModeC.nc">
      <from><interface-ref name="BlockCipherInfo" scoped="" ref="0x2abc905102b8"/></from>
      <to><interface-ref name="BlockCipherInfo" scoped="" ref="0x2abc9051dce8"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="41:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="40:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G5" loc="42(HplAtm128GeneralIOC.G5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="56:/opt/tinyos-2.1.2/tos/platforms/iris/MeasureClockC.nc">
      <documentation loc="47:/opt/tinyos-2.1.2/tos/platforms/iris/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/opt/tinyos-2.1.2/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/McuSleepC.nc" safe="">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.6 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/opt/tinyos-2.1.2/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CMCBlinkToRadioC" loc="4:CMCBlinkToRadioC.nc">
      <module/>
    </component>
    <component qname="CMCBlinkToRadioAppC.Timer0" loc="44(CMCBlinkToRadioAppC.Timer0):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abc8ed28020"/>
            <typename><typedef-ref name="TMilli" ref="0x2abc8ed28378"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP):/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1281AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2abc8f02d3e8"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1281Timer2AsyncC" loc="77:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer2AsyncP" loc="78:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc" safe="">
      <documentation loc="65:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
        <short>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 2 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abc8ed28020"/>
            <typename><typedef-ref name="TMilli" ref="0x2abc8ed28378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abc8ed28020"/>
            <typename><typedef-ref name="TMilli" ref="0x2abc8ed28378"/></typename>
          </type-tag>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abc8ed28020"/>
            <typename><typedef-ref name="TMilli" ref="0x2abc8ed28378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CMCBlinkToRadioAppC.CMC0" loc="23(CMCBlinkToRadioAppC.CMC0):../../CMC/CMCSocket.nc">
      <instance number="0">
        <component-ref qname="CMCSocket"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CMCC" loc="25:../../CMC/CMCC.nc">
      <configuration/>
    </component>
    <component qname="CMCC.TimerMilliC" loc="44(CMCC.TimerMilliC):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CMCP" loc="45:../../CMC/CMCP.nc">
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="37:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230ActiveMessageC" loc="41:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioC" loc="37:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioP" loc="39:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC" loc="37(RF230RadioC.RadioAlarmC):/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC.RadioAlarmP" loc="39(RF230RadioC.RadioAlarmC.RadioAlarmP):/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmP"/>
      </instance>
      <module/>
    </component>
    <component qname="TaskletC" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/TaskletC.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC" loc="35(RF230RadioC.ActiveMessageLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP" loc="38(RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/opt/tinyos-2.1.2/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.AutoResourceAcquireLayerC" loc="35(RF230RadioC.AutoResourceAcquireLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <instance number="0">
        <component-ref qname="AutoResourceAcquireLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC" loc="83(RF230RadioC.SendResourceC):/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:RADIO_SEND_RESOURCE">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Queue" loc="42(RF230RadioC.SendResourceC.Queue):/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Arbiter" loc="49(RF230RadioC.SendResourceC.Arbiter):/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154MessageLayerC" loc="35(RF230RadioC.Ieee154MessageLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154MessageLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TinyosNetworkLayerC" loc="50(RF230RadioC.TinyosNetworkLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <instance number="0">
        <component-ref qname="TinyosNetworkLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC" loc="35(RF230RadioC.Ieee154PacketLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP" loc="37(RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC" loc="35(RF230RadioC.UniqueLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC.UniqueLayerP" loc="38(RF230RadioC.UniqueLayerC.UniqueLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="NeighborhoodC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <configuration/>
    </component>
    <component qname="NeighborhoodP" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC.NeighborhoodFlagC" loc="35(RF230RadioC.UniqueLayerC.NeighborhoodFlagC):/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <instance number="0">
        <component-ref qname="NeighborhoodFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.PacketLinkLayerC" loc="73(RF230RadioC.PacketLinkLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketLinkLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC" loc="35(RF230RadioC.LowPowerListeningLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP" loc="35(RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC" loc="35(RF230RadioC.MessageBufferLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP" loc="39(RF230RadioC.MessageBufferLayerC.MessageBufferLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.CollisionAvoidanceLayerC" loc="35(RF230RadioC.CollisionAvoidanceLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP" loc="38(RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SoftwareAckLayerC" loc="38(RF230RadioC.SoftwareAckLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <instance number="0">
        <component-ref qname="SoftwareAckLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.CsmaLayerC" loc="35(RF230RadioC.CsmaLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="0">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC" loc="37(RF230RadioC.TimeStampingLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP" loc="38(RF230RadioC.TimeStampingLayerC.TimeStampingLayerP):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="19:/opt/tinyos-2.1.2/tos/system/LocalTimeMilliC.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/system/LocalTimeMilliC.nc">
        <short>&#10; Provide current time via the LocalTime&#60;TMilli> interface.</short>
        <long>&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MetadataFlagsLayerC" loc="38(RF230RadioC.MetadataFlagsLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <instance number="0">
        <component-ref qname="MetadataFlagsLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TrafficMonitorLayerC" loc="35(RF230RadioC.TrafficMonitorLayerC):/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="1">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230DriverLayerC" loc="38:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <configuration/>
    </component>
    <component qname="RF230DriverLayerP" loc="42:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <module/>
    </component>
    <component qname="HplRF230C" loc="37:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <configuration/>
    </component>
    <component qname="HplRF230P" loc="35:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <module/>
    </component>
    <component qname="Atm128SpiC" loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.7 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.12 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="83(Atm128SpiC.Arbiter):/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="42(Atm128SpiC.Arbiter.Queue):/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer1C" loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer1P" loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc" safe="">
      <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC" loc="28(HplRF230C.AlarmC):/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InitOneP.InitOne" loc="44(InitOneP.InitOne):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC.NAlarm" loc="51(HplRF230C.AlarmC.NAlarm):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abc8ed26430"/>
            <typename><typedef-ref name="TOne" ref="0x2abc8ed6b9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC" loc="37:/opt/tinyos-2.1.2/tos/platforms/iris/LocalTimeMicroC.nc">
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="42(CounterOne16C.NCounter):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abc8ed26430"/>
            <typename><typedef-ref name="TOne" ref="0x2abc8ed6b9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.TransformCounterC" loc="54(LocalTimeMicroC.TransformCounterC):/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abc8ed26430"/>
            <typename><typedef-ref name="TMicro" ref="0x2abc8ed26788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2abc8e3b4608"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abc8ed26430"/>
            <typename><typedef-ref name="TMicro" ref="0x2abc8ed26788"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2abc8e3b4608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.CounterToLocalTimeC" loc="46(LocalTimeMicroC.CounterToLocalTimeC):/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abc8ed26430"/>
            <typename><typedef-ref name="TMicro" ref="0x2abc8ed26788"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="34:/opt/tinyos-2.1.2/tos/platforms/micaz/BusyWaitMicroC.nc">
      <module/>
    </component>
    <component qname="CMCC.AMSenderC" loc="47(CMCC.AMSenderC):/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:8">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CMCC.AMSenderC.SenderC" loc="47(CMCC.AMSenderC.SenderC):/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2abc8f248848"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CMCC.AMSenderC.SenderC.AMQueueEntryP" loc="43(CMCC.AMSenderC.SenderC.AMQueueEntryP):/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2abc8f248848"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CMCC.AMReceiverC" loc="43(CMCC.AMReceiverC):/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:8">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ECCC" loc="37:../../CMC/TinyECC/ECCC.nc">
      <documentation loc="26:../../CMC/TinyECC/ECCC.nc">
        <short>&#10; ECCC.nc&#10; Configuration of Ecc&#10;&#10; Author: An Liu&#10; Date: 09/29/2006&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="ECCM" loc="33:../../CMC/TinyECC/ECCM.nc">
      <documentation loc="26:../../CMC/TinyECC/ECCM.nc">
        <short>&#10; ECCM, the module implement ECC.nc&#10;</short>
      </documentation>
      <module/>
    </component>
    <component qname="NNM" loc="44:../../CMC/TinyECC/NNM.nc">
      <documentation loc="27:../../CMC/TinyECC/NNM.nc">
        <short>&#10; module NNM, provide interface NN&#10; modified from nn.h and nn.c from RSAREF 2.0&#10;</short>
      </documentation>
      <module/>
    </component>
    <component qname="RandomLfsrC" loc="61:/opt/tinyos-2.1.2/tos/system/RandomLfsrC.nc">
      <documentation loc="50:/opt/tinyos-2.1.2/tos/system/RandomLfsrC.nc">
        <short>&#10; This is a 16 bit Linear Feedback Shift Register pseudo random number&#10;generator.</short>
        <long>&#10; This is a 16 bit Linear Feedback Shift Register pseudo random number&#10;generator. It is faster than the MLCG generator, but the numbers generated&#10; have less randomness.&#10;&#10; @author Alec Woo&#10; @author David Gay&#10; @author Philip Levis&#10; @date   August 8 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="secp128r1" loc="34:../../CMC/TinyECC/secp128r1.nc">
      <documentation loc="26:../../CMC/TinyECC/secp128r1.nc">
        <short>&#10; Module for curve secp128r1 in 8 bit form&#10; &#10; Author: An Liu&#10; Date: 09/15/2005&#10;</short>
      </documentation>
      <module/>
    </component>
    <component qname="secp128r2" loc="36:../../CMC/TinyECC/secp128r2.nc">
      <documentation loc="26:../../CMC/TinyECC/secp128r2.nc">
        <short>&#10; Module for curve secp128r2 in 8 bit form&#10;&#10; Author: An Liu&#10; Date: 09/15/2005&#10; Modified by: Panos Kampanakis&#10; Date: 01/31/2007&#10;</short>
      </documentation>
      <module/>
    </component>
    <component qname="secp160k1" loc="36:../../CMC/TinyECC/secp160k1.nc">
      <documentation loc="26:../../CMC/TinyECC/secp160k1.nc">
        <short>&#10; Module for curve secp160k1&#10;&#10; Author: An Liu&#10; Date: 09/15/2005&#10; Modified by: Panos Kampanakis&#10; Date: 01/31/2007&#10;</short>
      </documentation>
      <module/>
    </component>
    <component qname="secp160r1" loc="34:../../CMC/TinyECC/secp160r1.nc">
      <documentation loc="26:../../CMC/TinyECC/secp160r1.nc">
        <short>&#10; Module for curve secp160r1&#10;&#10; Author: An Liu&#10; Date: 09/15/2005&#10;</short>
      </documentation>
      <module/>
    </component>
    <component qname="secp160r2" loc="36:../../CMC/TinyECC/secp160r2.nc">
      <documentation loc="26:../../CMC/TinyECC/secp160r2.nc">
        <short>&#10; Module for secp160r2 in 16 bit form&#10;&#10; Author: An Liu&#10; Date: 09/15/2005&#10; Modified by: Panos Kampanakis&#10; Date: 01/31/2007&#10;</short>
      </documentation>
      <module/>
    </component>
    <component qname="secp192k1" loc="36:../../CMC/TinyECC/secp192k1.nc">
      <documentation loc="26:../../CMC/TinyECC/secp192k1.nc">
        <short>&#10; Module for curve secp192k1&#10;&#10; Author: An Liu&#10; Date: 09/15/2005&#10; Modified by: Panos Kampanakis&#10; Date: 01/31/2007&#10;</short>
      </documentation>
      <module/>
    </component>
    <component qname="secp192r1" loc="36:../../CMC/TinyECC/secp192r1.nc">
      <documentation loc="26:../../CMC/TinyECC/secp192r1.nc">
        <short>&#10; Module for curve secp192r1&#10;&#10; Author: An Liu&#10; Date: 09/15/2005&#10; Modified by: Panos Kampanakis&#10; Date: 01/31/2007&#10;</short>
      </documentation>
      <module/>
    </component>
    <component qname="ECIESC" loc="33:../../CMC/TinyECC/ECIESC.nc">
      <documentation loc="26:../../CMC/TinyECC/ECIESC.nc">
        <short>&#10; configuration for ECIES&#10; &#10; Author: An Liu&#10; Date: 05/06/2007&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="SHA1M" loc="42:../../CMC/TinyECC/SHA1M.nc">
      <module/>
    </component>
    <component qname="ECIESM" loc="35:../../CMC/TinyECC/ECIESM.nc">
      <documentation loc="26:../../CMC/TinyECC/ECIESM.nc">
        <short>&#10; Module implement ECIES operations&#10;</short>
      </documentation>
      <module/>
    </component>
    <component qname="OCBModeC" loc="5:../../CMC/crypto/OCBModeC.nc">
      <configuration/>
    </component>
    <component qname="OCBModeM" loc="40:../../CMC/crypto/OCBModeM.nc">
      <module/>
    </component>
    <component qname="AES128M" loc="17:../../CMC/crypto/AES128M.nc">
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2abc8ee0d8a8" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2abc8ee0dbf0" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2abc8ee1a020" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2abc8ee1d340" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2abc8ee1d6a8" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2abc8ee1da10" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2abc8ee1dd40" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2abc8eeaf508" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2abc8eeaf870" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2abc8eeafbd8" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2abc8eeae020" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2abc8f02d3e8" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2abc8f02d3e8"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2abc8f02d6d8" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1281AlarmAsyncP" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2abc8f03c9d0" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2abc8f03c9d0"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2abc8f03ccc0" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2abc8f02ac60" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2abc8f02ac60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2abc8f15e110" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2abc8f15e110"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x2abc8f15e420" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2abc8f1a50a8" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2abc8f1a50a8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="CMCSocket" loc="23:../../CMC/CMCSocket.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RadioAlarmC" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RadioAlarmP" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ActiveMessageLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ActiveMessageLayerP" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AutoResourceAcquireLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x2abc8f5acab0" loc="83:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x2abc8f5ca170" loc="42:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154MessageLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TinyosNetworkLayerC" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154PacketLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Ieee154PacketLayerP" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="UniqueLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="UniqueLayerP" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="NeighborhoodFlagC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlagC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketLinkLayerC" loc="73:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc" abstract="">
      <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyP" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MessageBufferLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="MessageBufferLayerP" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="RandomCollisionLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerP" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SoftwareAckLayerC" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="DummyLayerC" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerC" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerP" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MetadataFlagsLayerC" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmOne16C" loc="28:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x2abc8fc29e00" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2abc8fc29e00"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x2abc8fc261a0" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x2abc8fc2a750" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x2abc8fc2a750"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x2abc8fc5a020" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2abc8fc5a020"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x2abc8fc5a320" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x2abc8fc60430" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x2abc8fc60430"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x2abc8fc60b80" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2abc8fc60b80"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x2abc8fc90918" loc="55:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x2abc8fc90918"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x2abc8fc8d0a8" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x2abc8fc8d0a8"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x2abc8fc8d470" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x2abc8fc8d470"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x2abc8fc8dbe8" loc="58:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x2abc8fc8dbe8"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x2abc8fc8b020" loc="59:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x2abc8fc8b7b0" loc="60:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x2abc8fc8b7b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x2abc8fcfb758" loc="47:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2abc8f248848"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x2abc8fd3d348" loc="47:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2abc8f248848"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x2abc8fd39e20" loc="43:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2abc8f248848"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x2abc8fd5f2a8" loc="45:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x2abc8fd9c2a8" loc="43:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2abc8f248848"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x2abc8edae210" loc="58:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2abc8edae210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2abc8edae560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2abc8eda4da8" loc="57:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2abc8eda4da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2abc8edb1170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2abc8edb8690" loc="52:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2abc8edb8690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2abc8edb89e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2abc8edaca70" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2abc8edaca70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2abc8edacdc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2abc8edb3970" loc="50:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2abc8edb3970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2abc8edb3cc0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2abc8edb3e48"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2abc8edb8020"/>
        <function-ref name="actualMicro" scoped="" ref="0x2abc8edb81a8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2abc8edb8330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x2abc8edbe938" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x2abc8edbe938"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2abc8edbec88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2abc8edbe298" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2abc8edbe298"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2abc8edbe5e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x2abc8edbd060" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x2abc8edbd060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2abc8edbd3b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2abc8edb2da8" loc="41:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2abc8edb2da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2abc8edc6170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2abc8edb2718" loc="40:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2abc8edb2718"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2abc8edb2a68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2abc8edc24f8" loc="45:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2abc8edc24f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2abc8edc2848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x2abc8edca388" loc="44:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x2abc8edca388"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8edca6d8"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8edca860"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8edca9e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8edcab70"/>
        <function-ref name="get" scoped="" ref="0x2abc8edcacf8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8edcae80"/>
        <function-ref name="set" scoped="" ref="0x2abc8edc2030"/>
        <function-ref name="clr" scoped="" ref="0x2abc8edc21b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2abc8edc3140" loc="43:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2abc8edc3140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2abc8edc3490"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x2abc8ee07968" loc="98:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x2abc8ee07968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8ee060f0"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8ee06278"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8ee06400"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8ee06588"/>
        <function-ref name="get" scoped="" ref="0x2abc8ee06710"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8ee06898"/>
        <function-ref name="set" scoped="" ref="0x2abc8ee06a20"/>
        <function-ref name="clr" scoped="" ref="0x2abc8ee06ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x2abc8edf14d0" loc="72:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x2abc8edf14d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8edf1820"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8edf19a8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8edf1b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8edf1cb8"/>
        <function-ref name="get" scoped="" ref="0x2abc8edf1e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8edf0020"/>
        <function-ref name="set" scoped="" ref="0x2abc8edf01a8"/>
        <function-ref name="clr" scoped="" ref="0x2abc8edf0330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x2abc8edf54d0" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x2abc8edf54d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8edf5820"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8edf59a8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8edf5b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8edf5cb8"/>
        <function-ref name="get" scoped="" ref="0x2abc8edf5e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8edf4020"/>
        <function-ref name="set" scoped="" ref="0x2abc8edf41a8"/>
        <function-ref name="clr" scoped="" ref="0x2abc8edf4330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x2abc8edfc1a0" loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x2abc8edfc1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8edfc4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8edfc678"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8edfc800"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8edfc988"/>
        <function-ref name="get" scoped="" ref="0x2abc8edfcb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8edfcc98"/>
        <function-ref name="set" scoped="" ref="0x2abc8edfce20"/>
        <function-ref name="clr" scoped="" ref="0x2abc8edfb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x2abc8ee10658" loc="103:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x2abc8ee10658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8ee109a8"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8ee10b30"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8ee10cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8ee10e40"/>
        <function-ref name="get" scoped="" ref="0x2abc8ee0f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8ee0f1a8"/>
        <function-ref name="set" scoped="" ref="0x2abc8ee0f330"/>
        <function-ref name="clr" scoped="" ref="0x2abc8ee0f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x2abc8edd91a0" loc="50:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x2abc8edd91a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8edd94f0"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8edd9678"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8edd9800"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8edd9988"/>
        <function-ref name="get" scoped="" ref="0x2abc8edd9b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8edd9c98"/>
        <function-ref name="set" scoped="" ref="0x2abc8edd9e20"/>
        <function-ref name="clr" scoped="" ref="0x2abc8edd8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x2abc8edffe00" loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x2abc8edffe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8edfe1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8edfe330"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8edfe4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8edfe640"/>
        <function-ref name="get" scoped="" ref="0x2abc8edfe7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8edfe950"/>
        <function-ref name="set" scoped="" ref="0x2abc8edfead8"/>
        <function-ref name="clr" scoped="" ref="0x2abc8edfec60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x2abc8edd74d0" loc="53:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x2abc8edd74d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8edd7820"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8edd79a8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8edd7b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8edd7cb8"/>
        <function-ref name="get" scoped="" ref="0x2abc8edd7e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8edd6020"/>
        <function-ref name="set" scoped="" ref="0x2abc8edd61a8"/>
        <function-ref name="clr" scoped="" ref="0x2abc8edd6330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x2abc8ede9658" loc="64:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x2abc8ede9658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8ede99a8"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8ede9b30"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8ede9cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8ede9e40"/>
        <function-ref name="get" scoped="" ref="0x2abc8ede8020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8ede81a8"/>
        <function-ref name="set" scoped="" ref="0x2abc8ede8330"/>
        <function-ref name="clr" scoped="" ref="0x2abc8ede84b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x2abc8edee968" loc="75:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x2abc8edee968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8edeecb8"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8edeee40"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8edec020"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8edec1a8"/>
        <function-ref name="get" scoped="" ref="0x2abc8edec330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8edec4b8"/>
        <function-ref name="set" scoped="" ref="0x2abc8edec640"/>
        <function-ref name="clr" scoped="" ref="0x2abc8edec7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x2abc8ee02968" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x2abc8ee02968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8ee02cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8ee02e40"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8ee01020"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8ee011a8"/>
        <function-ref name="get" scoped="" ref="0x2abc8ee01330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8ee014b8"/>
        <function-ref name="set" scoped="" ref="0x2abc8ee01640"/>
        <function-ref name="clr" scoped="" ref="0x2abc8ee017c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x2abc8edd2968" loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x2abc8edd2968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8edd2cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8edd2e40"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8edd1020"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8edd11a8"/>
        <function-ref name="get" scoped="" ref="0x2abc8edd1330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8edd14b8"/>
        <function-ref name="set" scoped="" ref="0x2abc8edd1640"/>
        <function-ref name="clr" scoped="" ref="0x2abc8edd17c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x2abc8ede2968" loc="56:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x2abc8ede2968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8ede2cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8ede2e40"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8ede1020"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8ede11a8"/>
        <function-ref name="get" scoped="" ref="0x2abc8ede1330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8ede14b8"/>
        <function-ref name="set" scoped="" ref="0x2abc8ede1640"/>
        <function-ref name="clr" scoped="" ref="0x2abc8ede17c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x2abc8ede6af0" loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x2abc8ede6af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8ede6e40"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8ede5020"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8ede51a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8ede5330"/>
        <function-ref name="get" scoped="" ref="0x2abc8ede54b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8ede5640"/>
        <function-ref name="set" scoped="" ref="0x2abc8ede57c8"/>
        <function-ref name="clr" scoped="" ref="0x2abc8ede5950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x2abc8edfae00" loc="78:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x2abc8edfae00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8edf91a8"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8edf9330"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8edf94b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8edf9640"/>
        <function-ref name="get" scoped="" ref="0x2abc8edf97c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8edf9950"/>
        <function-ref name="set" scoped="" ref="0x2abc8edf9ad8"/>
        <function-ref name="clr" scoped="" ref="0x2abc8edf9c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x2abc8ee09658" loc="95:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x2abc8ee09658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8ee099a8"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8ee09b30"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8ee09cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8ee09e40"/>
        <function-ref name="get" scoped="" ref="0x2abc8ee08020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8ee081a8"/>
        <function-ref name="set" scoped="" ref="0x2abc8ee08330"/>
        <function-ref name="clr" scoped="" ref="0x2abc8ee084b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x2abc8ee03348" loc="101:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x2abc8ee03348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8ee03698"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8ee03820"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8ee039a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8ee03b30"/>
        <function-ref name="get" scoped="" ref="0x2abc8ee03cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8ee03e40"/>
        <function-ref name="set" scoped="" ref="0x2abc8ee11020"/>
        <function-ref name="clr" scoped="" ref="0x2abc8ee111a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x2abc8edf71a0" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x2abc8edf71a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8edf74f0"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8edf7678"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8edf7800"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8edf7988"/>
        <function-ref name="get" scoped="" ref="0x2abc8edf7b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8edf7c98"/>
        <function-ref name="set" scoped="" ref="0x2abc8edf7e20"/>
        <function-ref name="clr" scoped="" ref="0x2abc8edf6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x2abc8edcfe00" loc="48:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x2abc8edcfe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8edce1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8edce330"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8edce4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8edce640"/>
        <function-ref name="get" scoped="" ref="0x2abc8edce7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8edce950"/>
        <function-ref name="set" scoped="" ref="0x2abc8edcead8"/>
        <function-ref name="clr" scoped="" ref="0x2abc8edcec60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x2abc8edde020" loc="59:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x2abc8edde020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8edde370"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8edde4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8edde680"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8edde808"/>
        <function-ref name="get" scoped="" ref="0x2abc8edde990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8eddeb18"/>
        <function-ref name="set" scoped="" ref="0x2abc8eddeca0"/>
        <function-ref name="clr" scoped="" ref="0x2abc8eddee28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x2abc8ee05020" loc="99:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x2abc8ee05020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8ee05370"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8ee054f8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8ee05680"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8ee05808"/>
        <function-ref name="get" scoped="" ref="0x2abc8ee05990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8ee05b18"/>
        <function-ref name="set" scoped="" ref="0x2abc8ee05ca0"/>
        <function-ref name="clr" scoped="" ref="0x2abc8ee05e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x2abc8eddc348" loc="62:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x2abc8eddc348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8eddc698"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8eddc820"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8eddc9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8eddcb30"/>
        <function-ref name="get" scoped="" ref="0x2abc8eddccb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8eddce40"/>
        <function-ref name="set" scoped="" ref="0x2abc8edea020"/>
        <function-ref name="clr" scoped="" ref="0x2abc8edea1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x2abc8edf0658" loc="73:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x2abc8edf0658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8edf09a8"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8edf0b30"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8edf0cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8edf0e40"/>
        <function-ref name="get" scoped="" ref="0x2abc8edef020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8edef1a8"/>
        <function-ref name="set" scoped="" ref="0x2abc8edef330"/>
        <function-ref name="clr" scoped="" ref="0x2abc8edef4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x2abc8edf4658" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x2abc8edf4658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8edf49a8"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8edf4b30"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8edf4cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8edf4e40"/>
        <function-ref name="get" scoped="" ref="0x2abc8edf3020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8edf31a8"/>
        <function-ref name="set" scoped="" ref="0x2abc8edf3330"/>
        <function-ref name="clr" scoped="" ref="0x2abc8edf34b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x2abc8edfb348" loc="93:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x2abc8edfb348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8edfb698"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8edfb820"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8edfb9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8edfbb30"/>
        <function-ref name="get" scoped="" ref="0x2abc8edfbcb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8edfbe40"/>
        <function-ref name="set" scoped="" ref="0x2abc8ee0a020"/>
        <function-ref name="clr" scoped="" ref="0x2abc8ee0a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x2abc8edd8348" loc="51:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x2abc8edd8348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8edd8698"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8edd8820"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8edd89a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8edd8b30"/>
        <function-ref name="get" scoped="" ref="0x2abc8edd8cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8edd8e40"/>
        <function-ref name="set" scoped="" ref="0x2abc8edd7020"/>
        <function-ref name="clr" scoped="" ref="0x2abc8edd71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x2abc8edd6658" loc="54:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x2abc8edd6658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8edd69a8"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8edd6b30"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8edd6cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8edd6e40"/>
        <function-ref name="get" scoped="" ref="0x2abc8edd5020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8edd51a8"/>
        <function-ref name="set" scoped="" ref="0x2abc8edd5330"/>
        <function-ref name="clr" scoped="" ref="0x2abc8edd54b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x2abc8ede87e0" loc="65:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x2abc8ede87e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8ede8b30"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8ede8cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8ede8e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8ede7020"/>
        <function-ref name="get" scoped="" ref="0x2abc8ede71a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8ede7330"/>
        <function-ref name="set" scoped="" ref="0x2abc8ede74b8"/>
        <function-ref name="clr" scoped="" ref="0x2abc8ede7640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x2abc8edecaf0" loc="76:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x2abc8edecaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8edece40"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8edeb020"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8edeb1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8edeb330"/>
        <function-ref name="get" scoped="" ref="0x2abc8edeb4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8edeb640"/>
        <function-ref name="set" scoped="" ref="0x2abc8edeb7c8"/>
        <function-ref name="clr" scoped="" ref="0x2abc8edeb950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x2abc8ee01af0" loc="87:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x2abc8ee01af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8ee01e40"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8ee00020"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8ee001a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8ee00330"/>
        <function-ref name="get" scoped="" ref="0x2abc8ee004b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8ee00640"/>
        <function-ref name="set" scoped="" ref="0x2abc8ee007c8"/>
        <function-ref name="clr" scoped="" ref="0x2abc8ee00950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x2abc8edd1af0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x2abc8edd1af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8edd1e40"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8edd0020"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8edd01a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8edd0330"/>
        <function-ref name="get" scoped="" ref="0x2abc8edd04b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8edd0640"/>
        <function-ref name="set" scoped="" ref="0x2abc8edd07c8"/>
        <function-ref name="clr" scoped="" ref="0x2abc8edd0950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x2abc8ede1af0" loc="57:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x2abc8ede1af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8ede0020"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8ede01a8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8ede0330"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8ede04b8"/>
        <function-ref name="get" scoped="" ref="0x2abc8ede0640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8ede07c8"/>
        <function-ref name="set" scoped="" ref="0x2abc8ede0950"/>
        <function-ref name="clr" scoped="" ref="0x2abc8ede0ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x2abc8ede5c78" loc="68:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x2abc8ede5c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8ede4020"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8ede41a8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8ede4330"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8ede44b8"/>
        <function-ref name="get" scoped="" ref="0x2abc8ede4640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8ede47c8"/>
        <function-ref name="set" scoped="" ref="0x2abc8ede4950"/>
        <function-ref name="clr" scoped="" ref="0x2abc8ede4ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x2abc8ee087e0" loc="96:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x2abc8ee087e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8ee08b30"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8ee08cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8ee08e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8ee07020"/>
        <function-ref name="get" scoped="" ref="0x2abc8ee071a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8ee07330"/>
        <function-ref name="set" scoped="" ref="0x2abc8ee074b8"/>
        <function-ref name="clr" scoped="" ref="0x2abc8ee07640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x2abc8edf2020" loc="71:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x2abc8edf2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8edf2570"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8edf26f8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8edf2880"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8edf2a08"/>
        <function-ref name="get" scoped="" ref="0x2abc8edf2b90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8edf2d18"/>
        <function-ref name="set" scoped="" ref="0x2abc8edf1020"/>
        <function-ref name="clr" scoped="" ref="0x2abc8edf11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x2abc8edf6348" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x2abc8edf6348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8edf6698"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8edf6820"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8edf69a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8edf6b30"/>
        <function-ref name="get" scoped="" ref="0x2abc8edf6cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8edf6e40"/>
        <function-ref name="set" scoped="" ref="0x2abc8edf5020"/>
        <function-ref name="clr" scoped="" ref="0x2abc8edf51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x2abc8edfd020" loc="91:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x2abc8edfd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8edfd370"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8edfd4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8edfd680"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8edfd808"/>
        <function-ref name="get" scoped="" ref="0x2abc8edfd990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8edfdb18"/>
        <function-ref name="set" scoped="" ref="0x2abc8edfdca0"/>
        <function-ref name="clr" scoped="" ref="0x2abc8edfde28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x2abc8ee114d0" loc="102:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x2abc8ee114d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8ee11820"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8ee119a8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8ee11b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8ee11cb8"/>
        <function-ref name="get" scoped="" ref="0x2abc8ee11e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8ee10020"/>
        <function-ref name="set" scoped="" ref="0x2abc8ee101a8"/>
        <function-ref name="clr" scoped="" ref="0x2abc8ee10330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x2abc8edda020" loc="49:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x2abc8edda020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8edda370"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8edda4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8edda680"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8edda808"/>
        <function-ref name="get" scoped="" ref="0x2abc8edda990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8eddab18"/>
        <function-ref name="set" scoped="" ref="0x2abc8eddaca0"/>
        <function-ref name="clr" scoped="" ref="0x2abc8eddae28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x2abc8eddd1a0" loc="60:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x2abc8eddd1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8eddd4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8eddd678"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8eddd800"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8eddd988"/>
        <function-ref name="get" scoped="" ref="0x2abc8edddb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8edddc98"/>
        <function-ref name="set" scoped="" ref="0x2abc8eddde20"/>
        <function-ref name="clr" scoped="" ref="0x2abc8eddc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x2abc8ee00c78" loc="89:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x2abc8ee00c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8edff020"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8edff1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8edff330"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8edff4b8"/>
        <function-ref name="get" scoped="" ref="0x2abc8edff640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8edff7c8"/>
        <function-ref name="set" scoped="" ref="0x2abc8edff950"/>
        <function-ref name="clr" scoped="" ref="0x2abc8edffad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x2abc8edea4d0" loc="63:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x2abc8edea4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8edea820"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8edea9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8edeab30"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8edeacb8"/>
        <function-ref name="get" scoped="" ref="0x2abc8edeae40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8ede9020"/>
        <function-ref name="set" scoped="" ref="0x2abc8ede91a8"/>
        <function-ref name="clr" scoped="" ref="0x2abc8ede9330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x2abc8edef7e0" loc="74:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x2abc8edef7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8edefb30"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8edefcb8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8edefe40"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8edee020"/>
        <function-ref name="get" scoped="" ref="0x2abc8edee1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8edee330"/>
        <function-ref name="set" scoped="" ref="0x2abc8edee4b8"/>
        <function-ref name="clr" scoped="" ref="0x2abc8edee640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x2abc8edf37e0" loc="85:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x2abc8edf37e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8edf3b30"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8edf3cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8edf3e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8ee02020"/>
        <function-ref name="get" scoped="" ref="0x2abc8ee021a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8ee02330"/>
        <function-ref name="set" scoped="" ref="0x2abc8ee024b8"/>
        <function-ref name="clr" scoped="" ref="0x2abc8ee02640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x2abc8ee0a4d0" loc="94:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x2abc8ee0a4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8ee0a820"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8ee0a9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8ee0ab30"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8ee0acb8"/>
        <function-ref name="get" scoped="" ref="0x2abc8ee0ae40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8ee09020"/>
        <function-ref name="set" scoped="" ref="0x2abc8ee091a8"/>
        <function-ref name="clr" scoped="" ref="0x2abc8ee09330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x2abc8edc5790" loc="44:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x2abc8edc5790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8edc5ae0"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8edc5c68"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8edc5df0"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8edd2020"/>
        <function-ref name="get" scoped="" ref="0x2abc8edd21a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8edd2330"/>
        <function-ref name="set" scoped="" ref="0x2abc8edd24b8"/>
        <function-ref name="clr" scoped="" ref="0x2abc8edd2640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x2abc8edd57e0" loc="55:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x2abc8edd57e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8edd5b30"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8edd5cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8edd5e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8ede2020"/>
        <function-ref name="get" scoped="" ref="0x2abc8ede21a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8ede2330"/>
        <function-ref name="set" scoped="" ref="0x2abc8ede24b8"/>
        <function-ref name="clr" scoped="" ref="0x2abc8ede2640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x2abc8ede7968" loc="66:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x2abc8ede7968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8ede7cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8ede7e40"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8ede6020"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8ede61a8"/>
        <function-ref name="get" scoped="" ref="0x2abc8ede6330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8ede64b8"/>
        <function-ref name="set" scoped="" ref="0x2abc8ede6640"/>
        <function-ref name="clr" scoped="" ref="0x2abc8ede67c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x2abc8edebc78" loc="77:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x2abc8edebc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8edfa020"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8edfa1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8edfa330"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8edfa4b8"/>
        <function-ref name="get" scoped="" ref="0x2abc8edfa640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8edfa7c8"/>
        <function-ref name="set" scoped="" ref="0x2abc8edfa950"/>
        <function-ref name="clr" scoped="" ref="0x2abc8edfaad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x2abc8ee041a0" loc="100:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x2abc8ee041a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8ee044f0"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8ee04678"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8ee04800"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8ee04988"/>
        <function-ref name="get" scoped="" ref="0x2abc8ee04b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8ee04c98"/>
        <function-ref name="set" scoped="" ref="0x2abc8ee04e20"/>
        <function-ref name="clr" scoped="" ref="0x2abc8ee03020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x2abc8edf8020" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x2abc8edf8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8edf8370"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8edf84f8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8edf8680"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8edf8808"/>
        <function-ref name="get" scoped="" ref="0x2abc8edf8990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8edf8b18"/>
        <function-ref name="set" scoped="" ref="0x2abc8edf8ca0"/>
        <function-ref name="clr" scoped="" ref="0x2abc8edf8e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x2abc8ede4e00" loc="69:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x2abc8ede4e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8ede31a8"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8ede3330"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8ede34b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8ede3640"/>
        <function-ref name="get" scoped="" ref="0x2abc8ede37c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8ede3950"/>
        <function-ref name="set" scoped="" ref="0x2abc8ede3ad8"/>
        <function-ref name="clr" scoped="" ref="0x2abc8ede3c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x2abc8edd0c78" loc="47:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x2abc8edd0c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8edcf020"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8edcf1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8edcf330"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8edcf4b8"/>
        <function-ref name="get" scoped="" ref="0x2abc8edcf640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8edcf7c8"/>
        <function-ref name="set" scoped="" ref="0x2abc8edcf950"/>
        <function-ref name="clr" scoped="" ref="0x2abc8edcfad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x2abc8ede0e00" loc="58:/opt/tinyos-2.1.2/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x2abc8ede0e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8eddf1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8eddf330"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8eddf4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8eddf640"/>
        <function-ref name="get" scoped="" ref="0x2abc8eddf7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8eddf950"/>
        <function-ref name="set" scoped="" ref="0x2abc8eddfad8"/>
        <function-ref name="clr" scoped="" ref="0x2abc8eddfc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2abc8ee56120" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2abc8ee56120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8ee56470"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8ee565f8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8ee56780"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8ee56908"/>
        <function-ref name="get" scoped="" ref="0x2abc8ee56a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8ee56c18"/>
        <function-ref name="set" scoped="" ref="0x2abc8ee56da0"/>
        <function-ref name="clr" scoped="" ref="0x2abc8ee55020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2abc8ee535b8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2abc8ee535b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8ee53908"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8ee53a90"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8ee53c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8ee53da0"/>
        <function-ref name="get" scoped="" ref="0x2abc8ee62020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8ee621a8"/>
        <function-ref name="set" scoped="" ref="0x2abc8ee62330"/>
        <function-ref name="clr" scoped="" ref="0x2abc8ee624b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2abc8ee5adc0" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2abc8ee5adc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8ee59170"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8ee592f8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8ee59480"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8ee59608"/>
        <function-ref name="get" scoped="" ref="0x2abc8ee59790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8ee59918"/>
        <function-ref name="set" scoped="" ref="0x2abc8ee59aa0"/>
        <function-ref name="clr" scoped="" ref="0x2abc8ee59c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2abc8ee552a8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2abc8ee552a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8ee555f8"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8ee55780"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8ee55908"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8ee55a90"/>
        <function-ref name="get" scoped="" ref="0x2abc8ee55c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8ee55da0"/>
        <function-ref name="set" scoped="" ref="0x2abc8ee54020"/>
        <function-ref name="clr" scoped="" ref="0x2abc8ee541a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2abc8ee62740" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2abc8ee62740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8ee62a90"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8ee62c18"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8ee62da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8ee61020"/>
        <function-ref name="get" scoped="" ref="0x2abc8ee611a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8ee61330"/>
        <function-ref name="set" scoped="" ref="0x2abc8ee614b8"/>
        <function-ref name="clr" scoped="" ref="0x2abc8ee61640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2abc8ee58020" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2abc8ee58020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8ee58370"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8ee584f8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8ee58680"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8ee58808"/>
        <function-ref name="get" scoped="" ref="0x2abc8ee58990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8ee58b18"/>
        <function-ref name="set" scoped="" ref="0x2abc8ee58ca0"/>
        <function-ref name="clr" scoped="" ref="0x2abc8ee58e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2abc8ee54430" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2abc8ee54430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8ee54780"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8ee54908"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8ee54a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8ee54c18"/>
        <function-ref name="get" scoped="" ref="0x2abc8ee54da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8ee53020"/>
        <function-ref name="set" scoped="" ref="0x2abc8ee531a8"/>
        <function-ref name="clr" scoped="" ref="0x2abc8ee53330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2abc8ee618c8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2abc8ee618c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8ee61c18"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8ee61da0"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8ee60020"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8ee601a8"/>
        <function-ref name="get" scoped="" ref="0x2abc8ee60330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8ee604b8"/>
        <function-ref name="set" scoped="" ref="0x2abc8ee60640"/>
        <function-ref name="clr" scoped="" ref="0x2abc8ee607c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2abc906fd6a8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2abc906fd6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc906fd9f8"/>
        <function-ref name="isInput" scoped="" ref="0x2abc906fdb80"/>
        <function-ref name="toggle" scoped="" ref="0x2abc906fdd08"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc906fc020"/>
        <function-ref name="get" scoped="" ref="0x2abc906fc1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc906fc330"/>
        <function-ref name="set" scoped="" ref="0x2abc906fc4b8"/>
        <function-ref name="clr" scoped="" ref="0x2abc906fc640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2abc906fa710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2abc906fa710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc906faa60"/>
        <function-ref name="isInput" scoped="" ref="0x2abc906fabe8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc906fad70"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc906f9020"/>
        <function-ref name="get" scoped="" ref="0x2abc906f91a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc906f9330"/>
        <function-ref name="set" scoped="" ref="0x2abc906f94b8"/>
        <function-ref name="clr" scoped="" ref="0x2abc906f9640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2abc906f7710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2abc906f7710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc906f7a60"/>
        <function-ref name="isInput" scoped="" ref="0x2abc906f7be8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc906f7d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc906f6020"/>
        <function-ref name="get" scoped="" ref="0x2abc906f61a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc906f6330"/>
        <function-ref name="set" scoped="" ref="0x2abc906f64b8"/>
        <function-ref name="clr" scoped="" ref="0x2abc906f6640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2abc906f4710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2abc906f4710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc906f4a60"/>
        <function-ref name="isInput" scoped="" ref="0x2abc906f4be8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc906f4d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc906f3020"/>
        <function-ref name="get" scoped="" ref="0x2abc906f31a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc906f3330"/>
        <function-ref name="set" scoped="" ref="0x2abc906f34b8"/>
        <function-ref name="clr" scoped="" ref="0x2abc906f3640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2abc906f1710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2abc906f1710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc906f1a60"/>
        <function-ref name="isInput" scoped="" ref="0x2abc906f1be8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc906f1d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc906f0020"/>
        <function-ref name="get" scoped="" ref="0x2abc906f01a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc906f0330"/>
        <function-ref name="set" scoped="" ref="0x2abc906f04b8"/>
        <function-ref name="clr" scoped="" ref="0x2abc906f0640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2abc906ee710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2abc906ee710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc906eea60"/>
        <function-ref name="isInput" scoped="" ref="0x2abc906eebe8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc906eed70"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc906ed020"/>
        <function-ref name="get" scoped="" ref="0x2abc906ed1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc906ed330"/>
        <function-ref name="set" scoped="" ref="0x2abc906ed4b8"/>
        <function-ref name="clr" scoped="" ref="0x2abc906ed640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2abc906eb710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2abc906eb710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc906eba60"/>
        <function-ref name="isInput" scoped="" ref="0x2abc906ebbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc906ebd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc906ea020"/>
        <function-ref name="get" scoped="" ref="0x2abc906ea1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc906ea330"/>
        <function-ref name="set" scoped="" ref="0x2abc906ea4b8"/>
        <function-ref name="clr" scoped="" ref="0x2abc906ea640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2abc906e8710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2abc906e8710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc906e8a60"/>
        <function-ref name="isInput" scoped="" ref="0x2abc906e8be8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc906e8d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc906e7020"/>
        <function-ref name="get" scoped="" ref="0x2abc906e71a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc906e7330"/>
        <function-ref name="set" scoped="" ref="0x2abc906e74b8"/>
        <function-ref name="clr" scoped="" ref="0x2abc906e7640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2abc8ee69bd8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2abc8ee69bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8ee68020"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8ee681a8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8ee68330"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8ee684b8"/>
        <function-ref name="get" scoped="" ref="0x2abc8ee68640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8ee687c8"/>
        <function-ref name="set" scoped="" ref="0x2abc8ee68950"/>
        <function-ref name="clr" scoped="" ref="0x2abc8ee68ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2abc8ee65020" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2abc8ee65020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8ee65370"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8ee654f8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8ee65680"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8ee65808"/>
        <function-ref name="get" scoped="" ref="0x2abc8ee65990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8ee65b18"/>
        <function-ref name="set" scoped="" ref="0x2abc8ee65ca0"/>
        <function-ref name="clr" scoped="" ref="0x2abc8ee65e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2abc8ee6b930" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2abc8ee6b930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8ee6bc80"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8ee6be08"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8ee6a020"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8ee6a1a8"/>
        <function-ref name="get" scoped="" ref="0x2abc8ee6a330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8ee6a4b8"/>
        <function-ref name="set" scoped="" ref="0x2abc8ee6a640"/>
        <function-ref name="clr" scoped="" ref="0x2abc8ee6a7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2abc8ee68d60" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2abc8ee68d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8ee670d8"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8ee67260"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8ee673e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8ee67570"/>
        <function-ref name="get" scoped="" ref="0x2abc8ee676f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8ee67880"/>
        <function-ref name="set" scoped="" ref="0x2abc8ee67a08"/>
        <function-ref name="clr" scoped="" ref="0x2abc8ee67b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2abc8ee64120" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2abc8ee64120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8ee64470"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8ee645f8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8ee64780"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8ee64908"/>
        <function-ref name="get" scoped="" ref="0x2abc8ee64a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8ee64c18"/>
        <function-ref name="set" scoped="" ref="0x2abc8ee64da0"/>
        <function-ref name="clr" scoped="" ref="0x2abc8ee63020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2abc8ee6aa50" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2abc8ee6aa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8ee6ada0"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8ee69020"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8ee691a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8ee69330"/>
        <function-ref name="get" scoped="" ref="0x2abc8ee694b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8ee69640"/>
        <function-ref name="set" scoped="" ref="0x2abc8ee697c8"/>
        <function-ref name="clr" scoped="" ref="0x2abc8ee69950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2abc8ee67e18" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2abc8ee67e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8ee661a8"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8ee66330"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8ee664b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8ee66640"/>
        <function-ref name="get" scoped="" ref="0x2abc8ee667c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8ee66950"/>
        <function-ref name="set" scoped="" ref="0x2abc8ee66ad8"/>
        <function-ref name="clr" scoped="" ref="0x2abc8ee66c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2abc8ee632a8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2abc8ee632a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8ee635f8"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8ee63780"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8ee63908"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8ee63a90"/>
        <function-ref name="get" scoped="" ref="0x2abc8ee63c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8ee63da0"/>
        <function-ref name="set" scoped="" ref="0x2abc8ee74020"/>
        <function-ref name="clr" scoped="" ref="0x2abc8ee741a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2abc907076a8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2abc907076a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc907079f8"/>
        <function-ref name="isInput" scoped="" ref="0x2abc90707b80"/>
        <function-ref name="toggle" scoped="" ref="0x2abc90707d08"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc90706020"/>
        <function-ref name="get" scoped="" ref="0x2abc907061a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc90706330"/>
        <function-ref name="set" scoped="" ref="0x2abc907064b8"/>
        <function-ref name="clr" scoped="" ref="0x2abc90706640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2abc90704710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2abc90704710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc90704a60"/>
        <function-ref name="isInput" scoped="" ref="0x2abc90704be8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc90704d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc90703020"/>
        <function-ref name="get" scoped="" ref="0x2abc907031a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc90703330"/>
        <function-ref name="set" scoped="" ref="0x2abc907034b8"/>
        <function-ref name="clr" scoped="" ref="0x2abc90703640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2abc90701710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2abc90701710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc90701a60"/>
        <function-ref name="isInput" scoped="" ref="0x2abc90701be8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc90701d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc90772020"/>
        <function-ref name="get" scoped="" ref="0x2abc907721a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc90772330"/>
        <function-ref name="set" scoped="" ref="0x2abc907724b8"/>
        <function-ref name="clr" scoped="" ref="0x2abc90772640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2abc90770710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2abc90770710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc90770a60"/>
        <function-ref name="isInput" scoped="" ref="0x2abc90770be8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc90770d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc9076f020"/>
        <function-ref name="get" scoped="" ref="0x2abc9076f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc9076f330"/>
        <function-ref name="set" scoped="" ref="0x2abc9076f4b8"/>
        <function-ref name="clr" scoped="" ref="0x2abc9076f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2abc9076d710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2abc9076d710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc9076da60"/>
        <function-ref name="isInput" scoped="" ref="0x2abc9076dbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc9076dd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc9076c020"/>
        <function-ref name="get" scoped="" ref="0x2abc9076c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc9076c330"/>
        <function-ref name="set" scoped="" ref="0x2abc9076c4b8"/>
        <function-ref name="clr" scoped="" ref="0x2abc9076c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2abc9076a710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2abc9076a710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc9076aa60"/>
        <function-ref name="isInput" scoped="" ref="0x2abc9076abe8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc9076ad70"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc90769020"/>
        <function-ref name="get" scoped="" ref="0x2abc907691a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc90769330"/>
        <function-ref name="set" scoped="" ref="0x2abc907694b8"/>
        <function-ref name="clr" scoped="" ref="0x2abc90769640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2abc90767710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2abc90767710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc90767a60"/>
        <function-ref name="isInput" scoped="" ref="0x2abc90767be8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc90767d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc90766020"/>
        <function-ref name="get" scoped="" ref="0x2abc907661a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc90766330"/>
        <function-ref name="set" scoped="" ref="0x2abc907664b8"/>
        <function-ref name="clr" scoped="" ref="0x2abc90766640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2abc90764710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2abc90764710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc90764a60"/>
        <function-ref name="isInput" scoped="" ref="0x2abc90764be8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc90764d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc90763020"/>
        <function-ref name="get" scoped="" ref="0x2abc907631a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc90763330"/>
        <function-ref name="set" scoped="" ref="0x2abc907634b8"/>
        <function-ref name="clr" scoped="" ref="0x2abc90763640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2abc8ee6c740" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2abc8ee6c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8ee6ca90"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8ee6cc18"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8ee6cda0"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8ee7d020"/>
        <function-ref name="get" scoped="" ref="0x2abc8ee7d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8ee7d330"/>
        <function-ref name="set" scoped="" ref="0x2abc8ee7d4b8"/>
        <function-ref name="clr" scoped="" ref="0x2abc8ee7d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2abc8ee7bbd8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2abc8ee7bbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8ee7a020"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8ee7a1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8ee7a330"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8ee7a4b8"/>
        <function-ref name="get" scoped="" ref="0x2abc8ee7a640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8ee7a7c8"/>
        <function-ref name="set" scoped="" ref="0x2abc8ee7a950"/>
        <function-ref name="clr" scoped="" ref="0x2abc8ee7aad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2abc8ee6e500" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2abc8ee6e500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8ee6e850"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8ee6e9d8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8ee6eb60"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8ee6ece8"/>
        <function-ref name="get" scoped="" ref="0x2abc8ee6ee70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8ee6d020"/>
        <function-ref name="set" scoped="" ref="0x2abc8ee6d1a8"/>
        <function-ref name="clr" scoped="" ref="0x2abc8ee6d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2abc8ee7d8c8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2abc8ee7d8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8ee7dc18"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8ee7dda0"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8ee7c020"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8ee7c1a8"/>
        <function-ref name="get" scoped="" ref="0x2abc8ee7c330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8ee7c4b8"/>
        <function-ref name="set" scoped="" ref="0x2abc8ee7c640"/>
        <function-ref name="clr" scoped="" ref="0x2abc8ee7c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2abc8ee7ad60" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2abc8ee7ad60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8ee790d8"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8ee79260"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8ee793e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8ee79570"/>
        <function-ref name="get" scoped="" ref="0x2abc8ee796f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8ee79880"/>
        <function-ref name="set" scoped="" ref="0x2abc8ee79a08"/>
        <function-ref name="clr" scoped="" ref="0x2abc8ee79b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2abc8ee6d5b8" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2abc8ee6d5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8ee6d908"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8ee6da90"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8ee6dc18"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8ee6dda0"/>
        <function-ref name="get" scoped="" ref="0x2abc8ee6c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8ee6c1a8"/>
        <function-ref name="set" scoped="" ref="0x2abc8ee6c330"/>
        <function-ref name="clr" scoped="" ref="0x2abc8ee6c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2abc8ee7ca50" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2abc8ee7ca50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8ee7cda0"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8ee7b020"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8ee7b1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8ee7b330"/>
        <function-ref name="get" scoped="" ref="0x2abc8ee7b4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8ee7b640"/>
        <function-ref name="set" scoped="" ref="0x2abc8ee7b7c8"/>
        <function-ref name="clr" scoped="" ref="0x2abc8ee7b950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2abc8ee79e18" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2abc8ee79e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8ee771a8"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8ee77330"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8ee774b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8ee77640"/>
        <function-ref name="get" scoped="" ref="0x2abc8ee777c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8ee77950"/>
        <function-ref name="set" scoped="" ref="0x2abc8ee77ad8"/>
        <function-ref name="clr" scoped="" ref="0x2abc8ee77c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2abc907856a8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2abc907856a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc907859f8"/>
        <function-ref name="isInput" scoped="" ref="0x2abc90785b80"/>
        <function-ref name="toggle" scoped="" ref="0x2abc90785d08"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc90784020"/>
        <function-ref name="get" scoped="" ref="0x2abc907841a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc90784330"/>
        <function-ref name="set" scoped="" ref="0x2abc907844b8"/>
        <function-ref name="clr" scoped="" ref="0x2abc90784640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2abc90782710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2abc90782710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc90782a60"/>
        <function-ref name="isInput" scoped="" ref="0x2abc90782be8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc90782d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc90781020"/>
        <function-ref name="get" scoped="" ref="0x2abc907811a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc90781330"/>
        <function-ref name="set" scoped="" ref="0x2abc907814b8"/>
        <function-ref name="clr" scoped="" ref="0x2abc90781640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2abc9077f710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2abc9077f710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc9077fa60"/>
        <function-ref name="isInput" scoped="" ref="0x2abc9077fbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc9077fd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc9077e020"/>
        <function-ref name="get" scoped="" ref="0x2abc9077e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc9077e330"/>
        <function-ref name="set" scoped="" ref="0x2abc9077e4b8"/>
        <function-ref name="clr" scoped="" ref="0x2abc9077e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2abc9077c710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2abc9077c710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc9077ca60"/>
        <function-ref name="isInput" scoped="" ref="0x2abc9077cbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc9077cd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc9077b020"/>
        <function-ref name="get" scoped="" ref="0x2abc9077b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc9077b330"/>
        <function-ref name="set" scoped="" ref="0x2abc9077b4b8"/>
        <function-ref name="clr" scoped="" ref="0x2abc9077b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2abc90779710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2abc90779710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc90779a60"/>
        <function-ref name="isInput" scoped="" ref="0x2abc90779be8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc90779d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc90778020"/>
        <function-ref name="get" scoped="" ref="0x2abc907781a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc90778330"/>
        <function-ref name="set" scoped="" ref="0x2abc907784b8"/>
        <function-ref name="clr" scoped="" ref="0x2abc90778640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2abc90776710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2abc90776710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc90776a60"/>
        <function-ref name="isInput" scoped="" ref="0x2abc90776be8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc90776d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc90775020"/>
        <function-ref name="get" scoped="" ref="0x2abc907751a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc90775330"/>
        <function-ref name="set" scoped="" ref="0x2abc907754b8"/>
        <function-ref name="clr" scoped="" ref="0x2abc90775640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2abc90773710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2abc90773710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc90773a60"/>
        <function-ref name="isInput" scoped="" ref="0x2abc90773be8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc90773d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc907e6020"/>
        <function-ref name="get" scoped="" ref="0x2abc907e61a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc907e6330"/>
        <function-ref name="set" scoped="" ref="0x2abc907e64b8"/>
        <function-ref name="clr" scoped="" ref="0x2abc907e6640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2abc907e4710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2abc907e4710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc907e4a60"/>
        <function-ref name="isInput" scoped="" ref="0x2abc907e4be8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc907e4d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc907e3020"/>
        <function-ref name="get" scoped="" ref="0x2abc907e31a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc907e3330"/>
        <function-ref name="set" scoped="" ref="0x2abc907e34b8"/>
        <function-ref name="clr" scoped="" ref="0x2abc907e3640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2abc8ee81120" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2abc8ee81120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8ee81470"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8ee815f8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8ee81780"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8ee81908"/>
        <function-ref name="get" scoped="" ref="0x2abc8ee81a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8ee81c18"/>
        <function-ref name="set" scoped="" ref="0x2abc8ee81da0"/>
        <function-ref name="clr" scoped="" ref="0x2abc8ee80020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2abc8ee8f5b8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2abc8ee8f5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8ee8f908"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8ee8fa90"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8ee8fc18"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8ee8fda0"/>
        <function-ref name="get" scoped="" ref="0x2abc8ee8e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8ee8e1a8"/>
        <function-ref name="set" scoped="" ref="0x2abc8ee8e330"/>
        <function-ref name="clr" scoped="" ref="0x2abc8ee8e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2abc8ee84e40" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2abc8ee84e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8ee831c0"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8ee83348"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8ee834d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8ee83658"/>
        <function-ref name="get" scoped="" ref="0x2abc8ee837e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8ee83968"/>
        <function-ref name="set" scoped="" ref="0x2abc8ee83af0"/>
        <function-ref name="clr" scoped="" ref="0x2abc8ee83c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2abc8ee802a8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2abc8ee802a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8ee805f8"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8ee80780"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8ee80908"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8ee80a90"/>
        <function-ref name="get" scoped="" ref="0x2abc8ee80c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8ee80da0"/>
        <function-ref name="set" scoped="" ref="0x2abc8ee7f020"/>
        <function-ref name="clr" scoped="" ref="0x2abc8ee7f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2abc8ee8e740" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2abc8ee8e740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8ee8ea90"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8ee8ec18"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8ee8eda0"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8ee8d020"/>
        <function-ref name="get" scoped="" ref="0x2abc8ee8d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8ee8d330"/>
        <function-ref name="set" scoped="" ref="0x2abc8ee8d4b8"/>
        <function-ref name="clr" scoped="" ref="0x2abc8ee8d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2abc8ee82020" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2abc8ee82020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8ee82370"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8ee824f8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8ee82680"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8ee82808"/>
        <function-ref name="get" scoped="" ref="0x2abc8ee82990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8ee82b18"/>
        <function-ref name="set" scoped="" ref="0x2abc8ee82ca0"/>
        <function-ref name="clr" scoped="" ref="0x2abc8ee82e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2abc8ee7f430" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2abc8ee7f430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8ee7f780"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8ee7f908"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8ee7fa90"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8ee7fc18"/>
        <function-ref name="get" scoped="" ref="0x2abc8ee7fda0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8ee8f020"/>
        <function-ref name="set" scoped="" ref="0x2abc8ee8f1a8"/>
        <function-ref name="clr" scoped="" ref="0x2abc8ee8f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2abc8ee8d8c8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2abc8ee8d8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8ee8dc18"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8ee8dda0"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8ee8c020"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8ee8c1a8"/>
        <function-ref name="get" scoped="" ref="0x2abc8ee8c330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8ee8c4b8"/>
        <function-ref name="set" scoped="" ref="0x2abc8ee8c640"/>
        <function-ref name="clr" scoped="" ref="0x2abc8ee8c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2abc908086a8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2abc908086a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc908089f8"/>
        <function-ref name="isInput" scoped="" ref="0x2abc90808b80"/>
        <function-ref name="toggle" scoped="" ref="0x2abc90808d08"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc90806020"/>
        <function-ref name="get" scoped="" ref="0x2abc908061a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc90806330"/>
        <function-ref name="set" scoped="" ref="0x2abc908064b8"/>
        <function-ref name="clr" scoped="" ref="0x2abc90806640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2abc90804710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2abc90804710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc90804a60"/>
        <function-ref name="isInput" scoped="" ref="0x2abc90804be8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc90804d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc90803020"/>
        <function-ref name="get" scoped="" ref="0x2abc908031a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc90803330"/>
        <function-ref name="set" scoped="" ref="0x2abc908034b8"/>
        <function-ref name="clr" scoped="" ref="0x2abc90803640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2abc90801710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2abc90801710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc90801a60"/>
        <function-ref name="isInput" scoped="" ref="0x2abc90801be8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc90801d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc90800020"/>
        <function-ref name="get" scoped="" ref="0x2abc908001a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc90800330"/>
        <function-ref name="set" scoped="" ref="0x2abc908004b8"/>
        <function-ref name="clr" scoped="" ref="0x2abc90800640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2abc907fe710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2abc907fe710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc907fea60"/>
        <function-ref name="isInput" scoped="" ref="0x2abc907febe8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc907fed70"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc907fd020"/>
        <function-ref name="get" scoped="" ref="0x2abc907fd1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc907fd330"/>
        <function-ref name="set" scoped="" ref="0x2abc907fd4b8"/>
        <function-ref name="clr" scoped="" ref="0x2abc907fd640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2abc907fb710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2abc907fb710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc907fba60"/>
        <function-ref name="isInput" scoped="" ref="0x2abc907fbbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc907fbd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc907fa020"/>
        <function-ref name="get" scoped="" ref="0x2abc907fa1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc907fa330"/>
        <function-ref name="set" scoped="" ref="0x2abc907fa4b8"/>
        <function-ref name="clr" scoped="" ref="0x2abc907fa640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2abc907f8710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2abc907f8710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc907f8a60"/>
        <function-ref name="isInput" scoped="" ref="0x2abc907f8be8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc907f8d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc907f7020"/>
        <function-ref name="get" scoped="" ref="0x2abc907f71a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc907f7330"/>
        <function-ref name="set" scoped="" ref="0x2abc907f74b8"/>
        <function-ref name="clr" scoped="" ref="0x2abc907f7640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2abc907f5710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2abc907f5710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc907f5a60"/>
        <function-ref name="isInput" scoped="" ref="0x2abc907f5be8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc907f5d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc907f4020"/>
        <function-ref name="get" scoped="" ref="0x2abc907f41a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc907f4330"/>
        <function-ref name="set" scoped="" ref="0x2abc907f44b8"/>
        <function-ref name="clr" scoped="" ref="0x2abc907f4640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2abc907f2710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2abc907f2710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc907f2a60"/>
        <function-ref name="isInput" scoped="" ref="0x2abc907f2be8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc907f2d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc907f1020"/>
        <function-ref name="get" scoped="" ref="0x2abc907f11a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc907f1330"/>
        <function-ref name="set" scoped="" ref="0x2abc907f14b8"/>
        <function-ref name="clr" scoped="" ref="0x2abc907f1640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2abc8ee96bd8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2abc8ee96bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8ee95020"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8ee951a8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8ee95330"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8ee954b8"/>
        <function-ref name="get" scoped="" ref="0x2abc8ee95640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8ee957c8"/>
        <function-ref name="set" scoped="" ref="0x2abc8ee95950"/>
        <function-ref name="clr" scoped="" ref="0x2abc8ee95ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2abc8ee92020" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2abc8ee92020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8ee92370"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8ee924f8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8ee92680"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8ee92808"/>
        <function-ref name="get" scoped="" ref="0x2abc8ee92990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8ee92b18"/>
        <function-ref name="set" scoped="" ref="0x2abc8ee92ca0"/>
        <function-ref name="clr" scoped="" ref="0x2abc8ee92e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2abc8ee87930" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2abc8ee87930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8ee87c80"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8ee87e08"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8ee98020"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8ee981a8"/>
        <function-ref name="get" scoped="" ref="0x2abc8ee98330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8ee984b8"/>
        <function-ref name="set" scoped="" ref="0x2abc8ee98640"/>
        <function-ref name="clr" scoped="" ref="0x2abc8ee987c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2abc8ee95d60" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2abc8ee95d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8ee940d8"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8ee94260"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8ee943e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8ee94570"/>
        <function-ref name="get" scoped="" ref="0x2abc8ee946f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8ee94880"/>
        <function-ref name="set" scoped="" ref="0x2abc8ee94a08"/>
        <function-ref name="clr" scoped="" ref="0x2abc8ee94b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2abc8ee91120" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2abc8ee91120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8ee91470"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8ee915f8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8ee91780"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8ee91908"/>
        <function-ref name="get" scoped="" ref="0x2abc8ee91a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8ee91c18"/>
        <function-ref name="set" scoped="" ref="0x2abc8ee91da0"/>
        <function-ref name="clr" scoped="" ref="0x2abc8ee90020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2abc8ee98a50" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2abc8ee98a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8ee98da0"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8ee96020"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8ee961a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8ee96330"/>
        <function-ref name="get" scoped="" ref="0x2abc8ee964b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8ee96640"/>
        <function-ref name="set" scoped="" ref="0x2abc8ee967c8"/>
        <function-ref name="clr" scoped="" ref="0x2abc8ee96950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2abc8ee94e18" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2abc8ee94e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8ee931a8"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8ee93330"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8ee934b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8ee93640"/>
        <function-ref name="get" scoped="" ref="0x2abc8ee937c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8ee93950"/>
        <function-ref name="set" scoped="" ref="0x2abc8ee93ad8"/>
        <function-ref name="clr" scoped="" ref="0x2abc8ee93c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2abc8ee902a8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2abc8ee902a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8ee905f8"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8ee90780"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8ee90908"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8ee90a90"/>
        <function-ref name="get" scoped="" ref="0x2abc8ee90c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8ee90da0"/>
        <function-ref name="set" scoped="" ref="0x2abc8eea1020"/>
        <function-ref name="clr" scoped="" ref="0x2abc8eea11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2abc9088d6a8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2abc9088d6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc9088d9f8"/>
        <function-ref name="isInput" scoped="" ref="0x2abc9088db80"/>
        <function-ref name="toggle" scoped="" ref="0x2abc9088dd08"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc9088b020"/>
        <function-ref name="get" scoped="" ref="0x2abc9088b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc9088b330"/>
        <function-ref name="set" scoped="" ref="0x2abc9088b4b8"/>
        <function-ref name="clr" scoped="" ref="0x2abc9088b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2abc90889710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2abc90889710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc90889a60"/>
        <function-ref name="isInput" scoped="" ref="0x2abc90889be8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc90889d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc90888020"/>
        <function-ref name="get" scoped="" ref="0x2abc908881a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc90888330"/>
        <function-ref name="set" scoped="" ref="0x2abc908884b8"/>
        <function-ref name="clr" scoped="" ref="0x2abc90888640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2abc90886710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2abc90886710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc90886a60"/>
        <function-ref name="isInput" scoped="" ref="0x2abc90886be8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc90886d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc90885020"/>
        <function-ref name="get" scoped="" ref="0x2abc908851a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc90885330"/>
        <function-ref name="set" scoped="" ref="0x2abc908854b8"/>
        <function-ref name="clr" scoped="" ref="0x2abc90885640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2abc90883710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2abc90883710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc90883a60"/>
        <function-ref name="isInput" scoped="" ref="0x2abc90883be8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc90883d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc90882020"/>
        <function-ref name="get" scoped="" ref="0x2abc908821a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc90882330"/>
        <function-ref name="set" scoped="" ref="0x2abc908824b8"/>
        <function-ref name="clr" scoped="" ref="0x2abc90882640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2abc90880710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2abc90880710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc90880a60"/>
        <function-ref name="isInput" scoped="" ref="0x2abc90880be8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc90880d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc9087f020"/>
        <function-ref name="get" scoped="" ref="0x2abc9087f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc9087f330"/>
        <function-ref name="set" scoped="" ref="0x2abc9087f4b8"/>
        <function-ref name="clr" scoped="" ref="0x2abc9087f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2abc9087d710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2abc9087d710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc9087da60"/>
        <function-ref name="isInput" scoped="" ref="0x2abc9087dbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc9087dd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc9087c020"/>
        <function-ref name="get" scoped="" ref="0x2abc9087c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc9087c330"/>
        <function-ref name="set" scoped="" ref="0x2abc9087c4b8"/>
        <function-ref name="clr" scoped="" ref="0x2abc9087c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2abc9087a710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2abc9087a710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc9087aa60"/>
        <function-ref name="isInput" scoped="" ref="0x2abc9087abe8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc9087ad70"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc90879020"/>
        <function-ref name="get" scoped="" ref="0x2abc908791a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc90879330"/>
        <function-ref name="set" scoped="" ref="0x2abc908794b8"/>
        <function-ref name="clr" scoped="" ref="0x2abc90879640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2abc90877710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2abc90877710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc90877a60"/>
        <function-ref name="isInput" scoped="" ref="0x2abc90877be8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc90877d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc90876020"/>
        <function-ref name="get" scoped="" ref="0x2abc908761a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc90876330"/>
        <function-ref name="set" scoped="" ref="0x2abc908764b8"/>
        <function-ref name="clr" scoped="" ref="0x2abc90876640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2abc8ee99740" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2abc8ee99740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8ee99a90"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8ee99c18"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8ee99da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8eeaa020"/>
        <function-ref name="get" scoped="" ref="0x2abc8eeaa1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8eeaa330"/>
        <function-ref name="set" scoped="" ref="0x2abc8eeaa4b8"/>
        <function-ref name="clr" scoped="" ref="0x2abc8eeaa640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2abc8eea8bd8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2abc8eea8bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8eea7020"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8eea71a8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8eea7330"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8eea74b8"/>
        <function-ref name="get" scoped="" ref="0x2abc8eea7640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8eea77c8"/>
        <function-ref name="set" scoped="" ref="0x2abc8eea7950"/>
        <function-ref name="clr" scoped="" ref="0x2abc8eea7ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2abc8ee9b500" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2abc8ee9b500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8ee9b850"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8ee9b9d8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8ee9bb60"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8ee9bce8"/>
        <function-ref name="get" scoped="" ref="0x2abc8ee9be70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8ee9a020"/>
        <function-ref name="set" scoped="" ref="0x2abc8ee9a1a8"/>
        <function-ref name="clr" scoped="" ref="0x2abc8ee9a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2abc8eeaa8c8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2abc8eeaa8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8eeaac18"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8eeaada0"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8eea9020"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8eea91a8"/>
        <function-ref name="get" scoped="" ref="0x2abc8eea9330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8eea94b8"/>
        <function-ref name="set" scoped="" ref="0x2abc8eea9640"/>
        <function-ref name="clr" scoped="" ref="0x2abc8eea97c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2abc8eea7d60" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2abc8eea7d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8eea60d8"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8eea6260"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8eea63e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8eea6570"/>
        <function-ref name="get" scoped="" ref="0x2abc8eea66f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8eea6880"/>
        <function-ref name="set" scoped="" ref="0x2abc8eea6a08"/>
        <function-ref name="clr" scoped="" ref="0x2abc8eea6b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2abc8ee9a5b8" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2abc8ee9a5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8ee9a908"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8ee9aa90"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8ee9ac18"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8ee9ada0"/>
        <function-ref name="get" scoped="" ref="0x2abc8ee99020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8ee991a8"/>
        <function-ref name="set" scoped="" ref="0x2abc8ee99330"/>
        <function-ref name="clr" scoped="" ref="0x2abc8ee994b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2abc8eea9a50" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2abc8eea9a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8eea9da0"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8eea8020"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8eea81a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8eea8330"/>
        <function-ref name="get" scoped="" ref="0x2abc8eea84b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8eea8640"/>
        <function-ref name="set" scoped="" ref="0x2abc8eea87c8"/>
        <function-ref name="clr" scoped="" ref="0x2abc8eea8950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2abc8eea6e18" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2abc8eea6e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8eea51a8"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8eea5330"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8eea54b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8eea5640"/>
        <function-ref name="get" scoped="" ref="0x2abc8eea57c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8eea5950"/>
        <function-ref name="set" scoped="" ref="0x2abc8eea5ad8"/>
        <function-ref name="clr" scoped="" ref="0x2abc8eea5c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2abc9089d6a8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2abc9089d6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc9089d9f8"/>
        <function-ref name="isInput" scoped="" ref="0x2abc9089db80"/>
        <function-ref name="toggle" scoped="" ref="0x2abc9089dd08"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc9089c020"/>
        <function-ref name="get" scoped="" ref="0x2abc9089c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc9089c330"/>
        <function-ref name="set" scoped="" ref="0x2abc9089c4b8"/>
        <function-ref name="clr" scoped="" ref="0x2abc9089c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2abc9089a710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2abc9089a710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc9089aa60"/>
        <function-ref name="isInput" scoped="" ref="0x2abc9089abe8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc9089ad70"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc90898020"/>
        <function-ref name="get" scoped="" ref="0x2abc908981a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc90898330"/>
        <function-ref name="set" scoped="" ref="0x2abc908984b8"/>
        <function-ref name="clr" scoped="" ref="0x2abc90898640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2abc9090e710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2abc9090e710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc9090ea60"/>
        <function-ref name="isInput" scoped="" ref="0x2abc9090ebe8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc9090ed70"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc9090d020"/>
        <function-ref name="get" scoped="" ref="0x2abc9090d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc9090d330"/>
        <function-ref name="set" scoped="" ref="0x2abc9090d4b8"/>
        <function-ref name="clr" scoped="" ref="0x2abc9090d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2abc9090b710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2abc9090b710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc9090ba60"/>
        <function-ref name="isInput" scoped="" ref="0x2abc9090bbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc9090bd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc9090a020"/>
        <function-ref name="get" scoped="" ref="0x2abc9090a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc9090a330"/>
        <function-ref name="set" scoped="" ref="0x2abc9090a4b8"/>
        <function-ref name="clr" scoped="" ref="0x2abc9090a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2abc90908710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2abc90908710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc90908a60"/>
        <function-ref name="isInput" scoped="" ref="0x2abc90908be8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc90908d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc90907020"/>
        <function-ref name="get" scoped="" ref="0x2abc909071a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc90907330"/>
        <function-ref name="set" scoped="" ref="0x2abc909074b8"/>
        <function-ref name="clr" scoped="" ref="0x2abc90907640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2abc90905710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2abc90905710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc90905a60"/>
        <function-ref name="isInput" scoped="" ref="0x2abc90905be8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc90905d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc90904020"/>
        <function-ref name="get" scoped="" ref="0x2abc909041a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc90904330"/>
        <function-ref name="set" scoped="" ref="0x2abc909044b8"/>
        <function-ref name="clr" scoped="" ref="0x2abc90904640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2abc90902710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2abc90902710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc90902a60"/>
        <function-ref name="isInput" scoped="" ref="0x2abc90902be8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc90902d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc90901020"/>
        <function-ref name="get" scoped="" ref="0x2abc909011a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc90901330"/>
        <function-ref name="set" scoped="" ref="0x2abc909014b8"/>
        <function-ref name="clr" scoped="" ref="0x2abc90901640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2abc908ff710" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2abc908ff710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc908ffa60"/>
        <function-ref name="isInput" scoped="" ref="0x2abc908ffbe8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc908ffd70"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc908fe020"/>
        <function-ref name="get" scoped="" ref="0x2abc908fe1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc908fe330"/>
        <function-ref name="set" scoped="" ref="0x2abc908fe4b8"/>
        <function-ref name="clr" scoped="" ref="0x2abc908fe640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2abc8eeb03e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2abc8eeb03e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8eeb0730"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8eeb08b8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8eeb0a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8eeb0bc8"/>
        <function-ref name="get" scoped="" ref="0x2abc8eeb0d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8eebd020"/>
        <function-ref name="set" scoped="" ref="0x2abc8eebd1a8"/>
        <function-ref name="clr" scoped="" ref="0x2abc8eebd330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2abc8eeccc38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2abc8eeccc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8eecb020"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8eecb1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8eecb330"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8eecb4b8"/>
        <function-ref name="get" scoped="" ref="0x2abc8eecb640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8eecb7c8"/>
        <function-ref name="set" scoped="" ref="0x2abc8eecb950"/>
        <function-ref name="clr" scoped="" ref="0x2abc8eecbad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2abc8eec63e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2abc8eec63e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8eec6730"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8eec68b8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8eec6a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8eec6bc8"/>
        <function-ref name="get" scoped="" ref="0x2abc8eec6d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8eed7020"/>
        <function-ref name="set" scoped="" ref="0x2abc8eed71a8"/>
        <function-ref name="clr" scoped="" ref="0x2abc8eed7330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2abc8eed3c38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2abc8eed3c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8eed2020"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8eed21a8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8eed2330"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8eed24b8"/>
        <function-ref name="get" scoped="" ref="0x2abc8eed2640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8eed27c8"/>
        <function-ref name="set" scoped="" ref="0x2abc8eed2950"/>
        <function-ref name="clr" scoped="" ref="0x2abc8eed2ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2abc8eee03e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2abc8eee03e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8eee0730"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8eee08b8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8eee0a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8eee0bc8"/>
        <function-ref name="get" scoped="" ref="0x2abc8eee0d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8eedf020"/>
        <function-ref name="set" scoped="" ref="0x2abc8eedf1a8"/>
        <function-ref name="clr" scoped="" ref="0x2abc8eedf330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2abc8eedbc38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2abc8eedbc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8eeda020"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8eeda1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8eeda330"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8eeda4b8"/>
        <function-ref name="get" scoped="" ref="0x2abc8eeda640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8eeda7c8"/>
        <function-ref name="set" scoped="" ref="0x2abc8eeda950"/>
        <function-ref name="clr" scoped="" ref="0x2abc8eedaad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2abc8eee8480" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2abc8eee8480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8eee87d0"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8eee8958"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8eee8ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8eee8c68"/>
        <function-ref name="get" scoped="" ref="0x2abc8eee8df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8eee6020"/>
        <function-ref name="set" scoped="" ref="0x2abc8eee61a8"/>
        <function-ref name="clr" scoped="" ref="0x2abc8eee6330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2abc8eee3c38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2abc8eee3c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8eee2020"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8eee21a8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8eee2330"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8eee24b8"/>
        <function-ref name="get" scoped="" ref="0x2abc8eee2640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8eee27c8"/>
        <function-ref name="set" scoped="" ref="0x2abc8eee2950"/>
        <function-ref name="clr" scoped="" ref="0x2abc8eee2ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2abc8eef0520" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2abc8eef0520"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8eef0870"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8eef09f8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8eef0b80"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8eef0d08"/>
        <function-ref name="get" scoped="" ref="0x2abc8eeef020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8eeef1a8"/>
        <function-ref name="set" scoped="" ref="0x2abc8eeef330"/>
        <function-ref name="clr" scoped="" ref="0x2abc8eeef4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2abc8eeeccd8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2abc8eeeccd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8eeea0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8eeea228"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8eeea3b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8eeea538"/>
        <function-ref name="get" scoped="" ref="0x2abc8eeea6c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8eeea848"/>
        <function-ref name="set" scoped="" ref="0x2abc8eeea9d0"/>
        <function-ref name="clr" scoped="" ref="0x2abc8eeeab58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2abc8eefa3e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2abc8eefa3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8eefa730"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8eefa8b8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8eefaa40"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8eefabc8"/>
        <function-ref name="get" scoped="" ref="0x2abc8eefad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8eef9020"/>
        <function-ref name="set" scoped="" ref="0x2abc8eef91a8"/>
        <function-ref name="clr" scoped="" ref="0x2abc8eef9330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2abc8eef5c38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2abc8eef5c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8eef4020"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8eef41a8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8eef4330"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8eef44b8"/>
        <function-ref name="get" scoped="" ref="0x2abc8eef4640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8eef47c8"/>
        <function-ref name="set" scoped="" ref="0x2abc8eef4950"/>
        <function-ref name="clr" scoped="" ref="0x2abc8eef4ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2abc8ef043e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2abc8ef043e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8ef04730"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8ef048b8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8ef04a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8ef04bc8"/>
        <function-ref name="get" scoped="" ref="0x2abc8ef04d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8ef03020"/>
        <function-ref name="set" scoped="" ref="0x2abc8ef031a8"/>
        <function-ref name="clr" scoped="" ref="0x2abc8ef03330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2abc8eeffc38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2abc8eeffc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8eefe020"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8eefe1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8eefe330"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8eefe4b8"/>
        <function-ref name="get" scoped="" ref="0x2abc8eefe640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8eefe7c8"/>
        <function-ref name="set" scoped="" ref="0x2abc8eefe950"/>
        <function-ref name="clr" scoped="" ref="0x2abc8eefead8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2abc8ef3d4b0" loc="61:/opt/tinyos-2.1.2/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2abc8ef3d4b0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2abc8ec996f0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2abc8ec996f0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2abc8ef3d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2abc8ef3dae0" loc="62:/opt/tinyos-2.1.2/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2abc8ef3dae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2abc8ef3de30"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2abc8ef3c020"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2abc8ef3c1a8"/>
        <function-ref name="actualMicro" scoped="" ref="0x2abc8ef3c330"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2abc8ef3c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2abc8ef59418" loc="60:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2abc8ef59418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2abc8ef59768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2abc8edafc38" loc="57:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2abc8edafc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2abc8ef5a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x2abc8ef5ace0" loc="59:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2abc8ef5ace0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2abc8ef590a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x2abc8ef5a308" loc="58:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2abc8ef5a308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2abc8ef5a658"/>
        <function-ref name="taskLoop" scoped="" ref="0x2abc8ef5a7e0"/>
        <function-ref name="runNextTask" scoped="" ref="0x2abc8ef5a968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2abc8ec941c8" loc="48:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2abc8ec941c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2abc8ec94518"/>
        <function-ref name="runTask" scoped="" ref="0x2abc8ec946a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2abc8ecbb5c8" loc="47:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2abc8ecbb5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2abc8ecbb918"/>
        <function-ref name="taskLoop" scoped="" ref="0x2abc8ecbbaa0"/>
        <function-ref name="runNextTask" scoped="" ref="0x2abc8ecbbc28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2abc8ed65c58" loc="56:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2abc8ed65c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2abc8ed72020"/>
        <function-ref name="runTask" scoped="" ref="0x2abc8ed721a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x2abc8ed6f168" loc="57:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2abc8ed6f168"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2abc8ed6f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2abc8ed66d88" loc="55:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2abc8ed66d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2abc8ed65170"/>
        <function-ref name="taskLoop" scoped="" ref="0x2abc8ed652f8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2abc8ed65480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x2abc8ed8a988" loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2abc8ed8a988"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2abc8ed8acd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x2abc8ecbae28" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2abc8ecbae28"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2abc8ed8e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x2abc8ed8b3c8" loc="85:/opt/tinyos-2.1.2/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2abc8ed8b3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2abc8ed8b718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2abc8ef82c38" loc="46:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2abc8ef82c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2abc8ef76020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2abc8ef761a8"/>
        <function-ref name="led1On" scoped="" ref="0x2abc8ef76330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2abc8ef764b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2abc8ef76640"/>
        <function-ref name="get" scoped="" ref="0x2abc8ef767c8"/>
        <function-ref name="led1Off" scoped="" ref="0x2abc8ef76950"/>
        <function-ref name="led2Off" scoped="" ref="0x2abc8ef75020"/>
        <function-ref name="set" scoped="" ref="0x2abc8ef76ad8"/>
        <function-ref name="led0On" scoped="" ref="0x2abc8ef76c60"/>
        <function-ref name="led2On" scoped="" ref="0x2abc8ef76de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x2abc8ef7dce8" loc="50:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2abc8ef7dce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8ef7c0a0"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8ef7c228"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8ef7c3b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8ef7c538"/>
        <function-ref name="get" scoped="" ref="0x2abc8ef7c6c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8ef7c848"/>
        <function-ref name="set" scoped="" ref="0x2abc8ef7c9d0"/>
        <function-ref name="clr" scoped="" ref="0x2abc8ef7cb58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2abc8ef7e020" loc="46:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2abc8ef7e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2abc8ef7e370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x2abc8ef7ce70" loc="51:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2abc8ef7ce70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8ef7b1e8"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8ef7b370"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8ef7b4f8"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8ef7b680"/>
        <function-ref name="get" scoped="" ref="0x2abc8ef7b808"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8ef7b990"/>
        <function-ref name="set" scoped="" ref="0x2abc8ef7bb18"/>
        <function-ref name="clr" scoped="" ref="0x2abc8ef7bca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2abc8ef7e5e8" loc="47:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2abc8ef7e5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2abc8ef7e938"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2abc8ef7eac0"/>
        <function-ref name="led1On" scoped="" ref="0x2abc8ef7ec48"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2abc8ef7edd0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2abc8ef7d020"/>
        <function-ref name="get" scoped="" ref="0x2abc8ef7d1a8"/>
        <function-ref name="led1Off" scoped="" ref="0x2abc8ef7d330"/>
        <function-ref name="led2Off" scoped="" ref="0x2abc8ef7d950"/>
        <function-ref name="set" scoped="" ref="0x2abc8ef7d4b8"/>
        <function-ref name="led0On" scoped="" ref="0x2abc8ef7d640"/>
        <function-ref name="led2On" scoped="" ref="0x2abc8ef7d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x2abc8ef7a020" loc="52:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2abc8ef7a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8ef7a370"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8ef7a4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8ef7a680"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8ef7a808"/>
        <function-ref name="get" scoped="" ref="0x2abc8ef7a990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8ef7ab18"/>
        <function-ref name="set" scoped="" ref="0x2abc8ef7aca0"/>
        <function-ref name="clr" scoped="" ref="0x2abc8ef7ae28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x2abc8ef7fe10" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2abc8ef7fe10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8efa11a8"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8efa1330"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8efa14b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8efa1640"/>
        <function-ref name="get" scoped="" ref="0x2abc8efa17c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8efa1950"/>
        <function-ref name="set" scoped="" ref="0x2abc8efa1ad8"/>
        <function-ref name="clr" scoped="" ref="0x2abc8efa1c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x2abc8efa0020" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2abc8efa0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8efa0370"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8efa04f8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8efa0680"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8efa0808"/>
        <function-ref name="get" scoped="" ref="0x2abc8efa0990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8efa0b18"/>
        <function-ref name="set" scoped="" ref="0x2abc8efa0ca0"/>
        <function-ref name="clr" scoped="" ref="0x2abc8efa0e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x2abc8ef9d2d8" loc="47:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2abc8ef9d2d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2abc8ef9d628"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x2abc8ef9e1b0" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2abc8ef9e1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8ef9e500"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8ef9e688"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8ef9e810"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8ef9e998"/>
        <function-ref name="get" scoped="" ref="0x2abc8ef9eb20"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8ef9eca8"/>
        <function-ref name="set" scoped="" ref="0x2abc8ef9ee30"/>
        <function-ref name="clr" scoped="" ref="0x2abc8ef9d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0" ref="0x2abc8efb5578" loc="7:CMCBlinkToRadioC.nc">
      <component-ref qname="CMCBlinkToRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0" scoped="" ref="0x2abc8efb5578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abc8ed28020"/>
            <typename><typedef-ref name="TMilli" ref="0x2abc8ed28378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2abc8efb48f0"/>
        <function-ref name="fired" scoped="" ref="0x2abc8efa9020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2abc8efa9d10"/>
        <function-ref name="isOneShot" scoped="" ref="0x2abc8efa98c0"/>
        <function-ref name="getdt" scoped="" ref="0x2abc8efb21c0"/>
        <function-ref name="gett0" scoped="" ref="0x2abc8efb4d40"/>
        <function-ref name="isRunning" scoped="" ref="0x2abc8efa9470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2abc8efaa0f8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2abc8efb4320"/>
        <function-ref name="startOneShot" scoped="" ref="0x2abc8efaa598"/>
        <function-ref name="stop" scoped="" ref="0x2abc8efaaa38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2abc8efac1f8" loc="5:CMCBlinkToRadioC.nc">
      <component-ref qname="CMCBlinkToRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2abc8efac1f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2abc8efac548"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x2abc8efc36f0" loc="9:CMCBlinkToRadioC.nc">
      <component-ref qname="CMCBlinkToRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x2abc8efc36f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2abc8efc3a40"/>
        <function-ref name="stopDone" scoped="" ref="0x2abc8efc3bc8"/>
        <function-ref name="start" scoped="" ref="0x2abc8efc3d50"/>
        <function-ref name="stop" scoped="" ref="0x2abc8efb1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CMC0" ref="0x2abc8efe45d8" loc="10:CMCBlinkToRadioC.nc">
      <component-ref qname="CMCBlinkToRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CMC0" scoped="" ref="0x2abc8efe45d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CMC"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2abc8efe4928"/>
        <function-ref name="init" scoped="" ref="0x2abc8efe4ab0"/>
        <function-ref name="bind" scoped="" ref="0x2abc8efe4c38"/>
        <function-ref name="connect" scoped="" ref="0x2abc8efe4dc0"/>
        <function-ref name="recv" scoped="" ref="0x2abc8efb0020"/>
        <function-ref name="connected" scoped="" ref="0x2abc8efb01a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2abc8efb0330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2abc8efac800" loc="6:CMCBlinkToRadioC.nc">
      <component-ref qname="CMCBlinkToRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2abc8efac800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2abc8efacb50"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2abc8efaccd8"/>
        <function-ref name="led1On" scoped="" ref="0x2abc8eface60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2abc8efab020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2abc8efab1a8"/>
        <function-ref name="get" scoped="" ref="0x2abc8efab330"/>
        <function-ref name="led1Off" scoped="" ref="0x2abc8efab4b8"/>
        <function-ref name="led2Off" scoped="" ref="0x2abc8efabad8"/>
        <function-ref name="set" scoped="" ref="0x2abc8efab640"/>
        <function-ref name="led0On" scoped="" ref="0x2abc8efab7c8"/>
        <function-ref name="led2On" scoped="" ref="0x2abc8efab950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2abc8efffe28" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="CMCBlinkToRadioAppC.Timer0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2abc8efffe28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abc8ed28020"/>
            <typename><typedef-ref name="TMilli" ref="0x2abc8ed28378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2abc8f1ce0c0"/>
        <function-ref name="fired" scoped="" ref="0x2abc8f1b3798"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2abc8f1cf4d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2abc8f1cf088"/>
        <function-ref name="getdt" scoped="" ref="0x2abc8f1ce960"/>
        <function-ref name="gett0" scoped="" ref="0x2abc8f1ce510"/>
        <function-ref name="isRunning" scoped="" ref="0x2abc8f1b3be8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2abc8f1b49e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2abc8f1cfaa8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2abc8f1b4e80"/>
        <function-ref name="stop" scoped="" ref="0x2abc8f1b3348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2abc8f00f7d8" loc="49:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2abc8f00f7d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abc8ed28020"/>
            <typename><typedef-ref name="TMilli" ref="0x2abc8ed28378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2abc8f00ba18"/>
        <function-ref name="fired" scoped="" ref="0x2abc8f00c158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2abc8f00ce48"/>
        <function-ref name="isOneShot" scoped="" ref="0x2abc8f00c9f8"/>
        <function-ref name="getdt" scoped="" ref="0x2abc8f00a2e8"/>
        <function-ref name="gett0" scoped="" ref="0x2abc8f00be68"/>
        <function-ref name="isRunning" scoped="" ref="0x2abc8f00c5a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2abc8f00e370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2abc8f00b448"/>
        <function-ref name="startOneShot" scoped="" ref="0x2abc8f00e810"/>
        <function-ref name="stop" scoped="" ref="0x2abc8f00ecb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2abc8f01edb8" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2abc8f01edb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abc8ed28020"/>
            <typename><typedef-ref name="TMilli" ref="0x2abc8ed28378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2abc8f019088"/>
        <function-ref name="fired" scoped="" ref="0x2abc8f01c708"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2abc8f01a470"/>
        <function-ref name="isOneShot" scoped="" ref="0x2abc8f01a020"/>
        <function-ref name="getdt" scoped="" ref="0x2abc8f019928"/>
        <function-ref name="gett0" scoped="" ref="0x2abc8f0194d8"/>
        <function-ref name="isRunning" scoped="" ref="0x2abc8f01cb58"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2abc8f01d930"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2abc8f01aa40"/>
        <function-ref name="startOneShot" scoped="" ref="0x2abc8f01ddd0"/>
        <function-ref name="stop" scoped="" ref="0x2abc8f01c2b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2abc8f014298" loc="47:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2abc8f014298"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abc8ed28020"/>
            <typename><typedef-ref name="TMilli" ref="0x2abc8ed28378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2abc8f014e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2abc8f01e0c0" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2abc8f01e0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2abc8f01e410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x2abc8f0363b8" loc="29:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x2abc8f0363b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abc8ed28020"/>
            <typename><typedef-ref name="TMilli" ref="0x2abc8ed28378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2abc8e3b4608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2abc8f035130"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2abc8f035a40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2abc8f0355b8"/>
        <function-ref name="overflow" scoped="" ref="0x2abc8f031020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2abc8f0168e8" loc="27:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2abc8f0168e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2abc8f016c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x2abc8f0281c8" loc="28:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x2abc8f0281c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abc8ed28020"/>
            <typename><typedef-ref name="TMilli" ref="0x2abc8ed28378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2abc8e3b4608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2abc8f020918"/>
        <function-ref name="fired" scoped="" ref="0x2abc8f021980"/>
        <function-ref name="startAt" scoped="" ref="0x2abc8f020310"/>
        <function-ref name="isRunning" scoped="" ref="0x2abc8f021e08"/>
        <function-ref name="getAlarm" scoped="" ref="0x2abc8f020da0"/>
        <function-ref name="start" scoped="" ref="0x2abc8f021020"/>
        <function-ref name="stop" scoped="" ref="0x2abc8f0214f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2abc8f12a7c8" loc="61:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2abc8f12a7c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abc8ed28020"/>
            <typename><typedef-ref name="TMilli" ref="0x2abc8ed28378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2abc8e3b4608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2abc8f126020"/>
        <function-ref name="fired" scoped="" ref="0x2abc8f127020"/>
        <function-ref name="startAt" scoped="" ref="0x2abc8f127930"/>
        <function-ref name="isRunning" scoped="" ref="0x2abc8f1274a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2abc8f1264a8"/>
        <function-ref name="start" scoped="" ref="0x2abc8f128578"/>
        <function-ref name="stop" scoped="" ref="0x2abc8f128a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2abc8f12a020" loc="60:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2abc8f12a020"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2abc8ec99388"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2abc8ec99388"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2abc8f12a370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2abc8f126a90" loc="62:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2abc8f126a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abc8ed28020"/>
            <typename><typedef-ref name="TMilli" ref="0x2abc8ed28378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2abc8e3b4608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2abc8f124828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2abc8f123190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2abc8f124cb0"/>
        <function-ref name="overflow" scoped="" ref="0x2abc8f123618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x2abc90997b60" loc="66:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2abc90997b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2abc90996020"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2abc909961a8"/>
        <function-ref name="getControlA" scoped="" ref="0x2abc90996330"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2abc909964b8"/>
        <function-ref name="setControlB" scoped="" ref="0x2abc90996640"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2abc909967c8"/>
        <function-ref name="getControlB" scoped="" ref="0x2abc90996950"/>
        <function-ref name="setControlA" scoped="" ref="0x2abc90996ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2abc909a3808" loc="61:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2abc909a3808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abc8ed28020"/>
            <typename><typedef-ref name="TMilli" ref="0x2abc8ed28378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2abc8e3b4608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2abc9099f020"/>
        <function-ref name="fired" scoped="" ref="0x2abc909a0020"/>
        <function-ref name="startAt" scoped="" ref="0x2abc909a0930"/>
        <function-ref name="isRunning" scoped="" ref="0x2abc909a04a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2abc9099f4a8"/>
        <function-ref name="start" scoped="" ref="0x2abc909a1598"/>
        <function-ref name="stop" scoped="" ref="0x2abc909a1a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2abc909a3060" loc="60:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2abc909a3060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2abc909a33b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2abc9099fa90" loc="62:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2abc9099fa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abc8ed28020"/>
            <typename><typedef-ref name="TMilli" ref="0x2abc8ed28378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2abc8e3b4608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2abc9099e828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2abc9099c190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2abc9099ecb0"/>
        <function-ref name="overflow" scoped="" ref="0x2abc9099c618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x2abc90991060" loc="68:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2abc90991060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x2abc909913b0"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x2abc90991538"/>
        <function-ref name="controlABusy" scoped="" ref="0x2abc909916c0"/>
        <function-ref name="controlBBusy" scoped="" ref="0x2abc90991848"/>
        <function-ref name="countBusy" scoped="" ref="0x2abc909919d0"/>
        <function-ref name="compareABusy" scoped="" ref="0x2abc90991b58"/>
        <function-ref name="getAssr" scoped="" ref="0x2abc90991ce0"/>
        <function-ref name="setAssr" scoped="" ref="0x2abc90991e68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x2abc90996e68" loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2abc90996e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2abc90993798"/>
        <function-ref name="fired" scoped="" ref="0x2abc909944f8"/>
        <function-ref name="get" scoped="" ref="0x2abc90995a18"/>
        <function-ref name="reset" scoped="" ref="0x2abc90994980"/>
        <function-ref name="isOn" scoped="" ref="0x2abc90993c20"/>
        <function-ref name="set" scoped="" ref="0x2abc90994020"/>
        <function-ref name="start" scoped="" ref="0x2abc90994e08"/>
        <function-ref name="stop" scoped="" ref="0x2abc90993310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2abc9099cb98" loc="65:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2abc9099cb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2abc90999db8"/>
        <function-ref name="test" scoped="" ref="0x2abc909994a8"/>
        <function-ref name="get" scoped="" ref="0x2abc9099b760"/>
        <function-ref name="setScale" scoped="" ref="0x2abc90997270"/>
        <function-ref name="getScale" scoped="" ref="0x2abc90997748"/>
        <function-ref name="reset" scoped="" ref="0x2abc9099a580"/>
        <function-ref name="overflow" scoped="" ref="0x2abc9099a0f8"/>
        <function-ref name="isOn" scoped="" ref="0x2abc90999930"/>
        <function-ref name="set" scoped="" ref="0x2abc9099bbe8"/>
        <function-ref name="start" scoped="" ref="0x2abc9099aa08"/>
        <function-ref name="stop" scoped="" ref="0x2abc90999020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2abc8f0bf3c0" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2abc8f0bf3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2abc8f0bf710"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2abc8f0bf898"/>
        <function-ref name="getControlA" scoped="" ref="0x2abc8f0bfa20"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2abc8f0bfba8"/>
        <function-ref name="setControlB" scoped="" ref="0x2abc8f0bfd30"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2abc8f0be020"/>
        <function-ref name="getControlB" scoped="" ref="0x2abc8f0be1a8"/>
        <function-ref name="setControlA" scoped="" ref="0x2abc8f0be330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x2abc8f0ba9e8" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2abc8f0ba9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x2abc8f0bad38"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x2abc8f0b9020"/>
        <function-ref name="controlABusy" scoped="" ref="0x2abc8f0b91a8"/>
        <function-ref name="controlBBusy" scoped="" ref="0x2abc8f0b9330"/>
        <function-ref name="countBusy" scoped="" ref="0x2abc8f0b94b8"/>
        <function-ref name="compareABusy" scoped="" ref="0x2abc8f0b9640"/>
        <function-ref name="getAssr" scoped="" ref="0x2abc8f0b97c8"/>
        <function-ref name="setAssr" scoped="" ref="0x2abc8f0b9950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2abc8f0be7f8" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2abc8f0be7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2abc8f0ba020"/>
        <function-ref name="fired" scoped="" ref="0x2abc8f0bdd08"/>
        <function-ref name="get" scoped="" ref="0x2abc8f0bd3a8"/>
        <function-ref name="reset" scoped="" ref="0x2abc8f0bb1f8"/>
        <function-ref name="isOn" scoped="" ref="0x2abc8f0ba4a8"/>
        <function-ref name="set" scoped="" ref="0x2abc8f0bd830"/>
        <function-ref name="start" scoped="" ref="0x2abc8f0bb680"/>
        <function-ref name="stop" scoped="" ref="0x2abc8f0bbb08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2abc8f0aa288" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2abc8f0aa288"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2abc8f0c04a8"/>
        <function-ref name="test" scoped="" ref="0x2abc8f0c2a40"/>
        <function-ref name="get" scoped="" ref="0x2abc8f0aae08"/>
        <function-ref name="setScale" scoped="" ref="0x2abc8f0c0930"/>
        <function-ref name="getScale" scoped="" ref="0x2abc8f0c0e08"/>
        <function-ref name="reset" scoped="" ref="0x2abc8f0a9c70"/>
        <function-ref name="overflow" scoped="" ref="0x2abc8f0a97e8"/>
        <function-ref name="isOn" scoped="" ref="0x2abc8f0c0020"/>
        <function-ref name="set" scoped="" ref="0x2abc8f0a9310"/>
        <function-ref name="start" scoped="" ref="0x2abc8f0c2130"/>
        <function-ref name="stop" scoped="" ref="0x2abc8f0c25b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2abc8f0ca020" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2abc8f0ca020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2abc8f0ca370"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2abc8f0ca4f8"/>
        <function-ref name="getControlA" scoped="" ref="0x2abc8f0ca680"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2abc8f0ca808"/>
        <function-ref name="setControlB" scoped="" ref="0x2abc8f0ca990"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2abc8f0cab18"/>
        <function-ref name="getControlB" scoped="" ref="0x2abc8f0caca0"/>
        <function-ref name="setControlA" scoped="" ref="0x2abc8f0cae28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2abc8f0c5578" loc="85:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2abc8f0c5578"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2abc8f0c58c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x2abc8f0c5c78" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2abc8f0c5c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x2abc8f0c4020"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x2abc8f0c41a8"/>
        <function-ref name="controlABusy" scoped="" ref="0x2abc8f0c4330"/>
        <function-ref name="controlBBusy" scoped="" ref="0x2abc8f0c44b8"/>
        <function-ref name="countBusy" scoped="" ref="0x2abc8f0c4640"/>
        <function-ref name="compareABusy" scoped="" ref="0x2abc8f0c47c8"/>
        <function-ref name="getAssr" scoped="" ref="0x2abc8f0c4950"/>
        <function-ref name="setAssr" scoped="" ref="0x2abc8f0c4ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2abc8f0c9340" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2abc8f0c9340"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2abc8f0c6c20"/>
        <function-ref name="fired" scoped="" ref="0x2abc8f0c8980"/>
        <function-ref name="get" scoped="" ref="0x2abc8f0c8020"/>
        <function-ref name="reset" scoped="" ref="0x2abc8f0c8e08"/>
        <function-ref name="isOn" scoped="" ref="0x2abc8f0c50f8"/>
        <function-ref name="set" scoped="" ref="0x2abc8f0c84a8"/>
        <function-ref name="start" scoped="" ref="0x2abc8f0c6310"/>
        <function-ref name="stop" scoped="" ref="0x2abc8f0c6798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2abc8f0b8e00" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2abc8f0b8e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2abc8f0cb0f8"/>
        <function-ref name="test" scoped="" ref="0x2abc8f0cc798"/>
        <function-ref name="get" scoped="" ref="0x2abc8f0cfa18"/>
        <function-ref name="setScale" scoped="" ref="0x2abc8f0cb580"/>
        <function-ref name="getScale" scoped="" ref="0x2abc8f0cba58"/>
        <function-ref name="reset" scoped="" ref="0x2abc8f0ce980"/>
        <function-ref name="overflow" scoped="" ref="0x2abc8f0ce4f8"/>
        <function-ref name="isOn" scoped="" ref="0x2abc8f0ccc20"/>
        <function-ref name="set" scoped="" ref="0x2abc8f0ce020"/>
        <function-ref name="start" scoped="" ref="0x2abc8f0cee08"/>
        <function-ref name="stop" scoped="" ref="0x2abc8f0cc310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2abc8f164cf0" loc="74:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x2abc8f164cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2abc8f1620a0"/>
        <function-ref name="runTask" scoped="" ref="0x2abc8f162228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2abc8f14cc70" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2abc8f14cc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abc8ed28020"/>
            <typename><typedef-ref name="TMilli" ref="0x2abc8ed28378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2abc8e3b4608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2abc8f164410"/>
        <function-ref name="fired" scoped="" ref="0x2abc8f1654a8"/>
        <function-ref name="startAt" scoped="" ref="0x2abc8f165db8"/>
        <function-ref name="isRunning" scoped="" ref="0x2abc8f165930"/>
        <function-ref name="getAlarm" scoped="" ref="0x2abc8f164898"/>
        <function-ref name="start" scoped="" ref="0x2abc8f1669f0"/>
        <function-ref name="stop" scoped="" ref="0x2abc8f165020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2abc8f151ab0" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2abc8f151ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abc8ed28020"/>
            <typename><typedef-ref name="TMilli" ref="0x2abc8ed28378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2abc8f14dd60"/>
        <function-ref name="fired" scoped="" ref="0x2abc8f14e470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2abc8f14d1c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2abc8f14ed10"/>
        <function-ref name="getdt" scoped="" ref="0x2abc8f14c648"/>
        <function-ref name="gett0" scoped="" ref="0x2abc8f14c1f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2abc8f14e8c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2abc8f14f620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2abc8f14d790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2abc8f14fac0"/>
        <function-ref name="stop" scoped="" ref="0x2abc8f14e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2abc8f1a9020" loc="71:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x2abc8f1a9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2abc8f1a9370"/>
        <function-ref name="runTask" scoped="" ref="0x2abc8f1a94f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2abc8f1b0e80" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x2abc8f1b0e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abc8ed28020"/>
            <typename><typedef-ref name="TMilli" ref="0x2abc8ed28378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2abc8f1ab238"/>
        <function-ref name="fired" scoped="" ref="0x2abc8f1ad910"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2abc8f1ac648"/>
        <function-ref name="isOneShot" scoped="" ref="0x2abc8f1ac1f8"/>
        <function-ref name="getdt" scoped="" ref="0x2abc8f1abad8"/>
        <function-ref name="gett0" scoped="" ref="0x2abc8f1ab688"/>
        <function-ref name="isRunning" scoped="" ref="0x2abc8f1add60"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2abc8f1ae9f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2abc8f1acc18"/>
        <function-ref name="startOneShot" scoped="" ref="0x2abc8f1ad020"/>
        <function-ref name="stop" scoped="" ref="0x2abc8f1ad4c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2abc8f198af8" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2abc8f198af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abc8ed28020"/>
            <typename><typedef-ref name="TMilli" ref="0x2abc8ed28378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2abc8f1b0020"/>
        <function-ref name="fired" scoped="" ref="0x2abc8f195530"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2abc8f1b12d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2abc8f195e10"/>
        <function-ref name="getdt" scoped="" ref="0x2abc8f1b0900"/>
        <function-ref name="gett0" scoped="" ref="0x2abc8f1b0490"/>
        <function-ref name="isRunning" scoped="" ref="0x2abc8f1959a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2abc8f1966f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2abc8f1b18c8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2abc8f196bb0"/>
        <function-ref name="stop" scoped="" ref="0x2abc8f1950c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2abc8f1a6440" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2abc8f1a6440"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abc8ed28020"/>
            <typename><typedef-ref name="TMilli" ref="0x2abc8ed28378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2abc8f1bb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2abc8f1bb648" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2abc8f1bb648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abc8ed28020"/>
            <typename><typedef-ref name="TMilli" ref="0x2abc8ed28378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2abc8e3b4608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2abc8f1ba3f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2abc8f1bad00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2abc8f1ba878"/>
        <function-ref name="overflow" scoped="" ref="0x2abc8f1b91f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CMC" ref="0x2abc8f1cb248" loc="24:../../CMC/CMCSocket.nc">
      <component-ref qname="CMCBlinkToRadioAppC.CMC0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CMC" scoped="" ref="0x2abc8f1cb248"/></type-interface>
      <instance>
        <interfacedef-ref qname="CMC"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2abc8f1cb598"/>
        <function-ref name="init" scoped="" ref="0x2abc8f1cb720"/>
        <function-ref name="bind" scoped="" ref="0x2abc8f1cb8a8"/>
        <function-ref name="connect" scoped="" ref="0x2abc8f1cba30"/>
        <function-ref name="recv" scoped="" ref="0x2abc8f1cbbb8"/>
        <function-ref name="connected" scoped="" ref="0x2abc8f1cbd40"/>
        <function-ref name="sendDone" scoped="" ref="0x2abc906ae020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CMC" ref="0x2abc8f1c99c0" loc="26:../../CMC/CMCC.nc">
      <component-ref qname="CMCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CMC" scoped="" ref="0x2abc8f1c99c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CMC"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2abc8f1c9d10"/>
        <function-ref name="init" scoped="" ref="0x2abc8f1c6020"/>
        <function-ref name="bind" scoped="" ref="0x2abc8f1c61a8"/>
        <function-ref name="connect" scoped="" ref="0x2abc8f1c6330"/>
        <function-ref name="recv" scoped="" ref="0x2abc8f1c64b8"/>
        <function-ref name="connected" scoped="" ref="0x2abc8f1c6640"/>
        <function-ref name="sendDone" scoped="" ref="0x2abc8f1c67c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2abc8f1c4a60" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="CMCC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2abc8f1c4a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abc8ed28020"/>
            <typename><typedef-ref name="TMilli" ref="0x2abc8ed28378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2abc8f1dfd60"/>
        <function-ref name="fired" scoped="" ref="0x2abc8f1c2470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2abc8f1df1c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2abc8f1c2d10"/>
        <function-ref name="getdt" scoped="" ref="0x2abc8f1dd648"/>
        <function-ref name="gett0" scoped="" ref="0x2abc8f1dd1f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2abc8f1c28c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2abc8f1c3620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2abc8f1df790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2abc8f1c3ac0"/>
        <function-ref name="stop" scoped="" ref="0x2abc8f1c2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2abc8f1d4ca0" loc="46:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2abc8f1d4ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2abc8f1d7020"/>
        <function-ref name="rand32" scoped="" ref="0x2abc8f1d71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2abc8f1d66f0" loc="45:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x2abc8f1d66f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2abc8f1d8370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2abc8f1dc998" loc="44:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2abc8f1dc998"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2abc8f1dcce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2abc8f1eea08" loc="48:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2abc8f1eea08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2abc8f1eed58"/>
        <function-ref name="rand32" scoped="" ref="0x2abc8f1ed020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2abc8f1d19f0" loc="47:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x2abc8f1d19f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2abc8f1ee560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2abc8f1d1198" loc="46:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2abc8f1d1198"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2abc8f1d14e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CMC" ref="0x2abc8f1fde38" loc="46:../../CMC/CMCP.nc">
      <component-ref qname="CMCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CMC" scoped="" ref="0x2abc8f1fde38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CMC"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2abc8f1fb1c0"/>
        <function-ref name="init" scoped="" ref="0x2abc8f1fb348"/>
        <function-ref name="bind" scoped="" ref="0x2abc8f1fb4d0"/>
        <function-ref name="connect" scoped="" ref="0x2abc8f1fb658"/>
        <function-ref name="recv" scoped="" ref="0x2abc8f1fb7e0"/>
        <function-ref name="connected" scoped="" ref="0x2abc8f1fb968"/>
        <function-ref name="sendDone" scoped="" ref="0x2abc8f1fbaf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2abc8f1fa448" loc="49:../../CMC/CMCP.nc">
      <component-ref qname="CMCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2abc8f1fa448"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2abc8f1fa798"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SHA1" ref="0x2abc8f2d89d0" loc="65:../../CMC/CMCP.nc">
      <component-ref qname="CMCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHA1" scoped="" ref="0x2abc8f2d89d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SHA1"/>
      </instance>
      <interface-functions>
        <function-ref name="reset" scoped="" ref="0x2abc8f2d8e20"/>
        <function-ref name="update" scoped="" ref="0x2abc8f2e2020"/>
        <function-ref name="digest" scoped="" ref="0x2abc8f2e21a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2abc8f267740" loc="54:../../CMC/CMCP.nc">
      <component-ref qname="CMCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2abc8f267740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2abc8f267a90"/>
        <function-ref name="payloadLength" scoped="" ref="0x2abc8f267c18"/>
        <function-ref name="getPayload" scoped="" ref="0x2abc8f267da0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2abc8f1f3020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2abc8f1f31a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x2abc8f27f958" loc="55:../../CMC/CMCP.nc">
      <component-ref qname="CMCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2abc8f27f958"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2abc8f27fca8"/>
        <function-ref name="getPayload" scoped="" ref="0x2abc8f27fe30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2abc8f1f2020"/>
        <function-ref name="cancel" scoped="" ref="0x2abc8f1f21a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2abc8f1f2330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ECC" ref="0x2abc8f2e39c8" loc="62:../../CMC/CMCP.nc">
      <component-ref qname="CMCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ECC" scoped="" ref="0x2abc8f2e39c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ECC"/>
      </instance>
      <interface-functions>
        <function-ref name="get_param" scoped="" ref="0x2abc8f2e3d18"/>
        <function-ref name="point2octet" scoped="" ref="0x2abc8f2b6020"/>
        <function-ref name="win_mul" scoped="" ref="0x2abc8f2b61a8"/>
        <function-ref name="gen_private_key" scoped="" ref="0x2abc8f2b6330"/>
        <function-ref name="win_mul_Z" scoped="" ref="0x2abc8f2b64b8"/>
        <function-ref name="octet2point" scoped="" ref="0x2abc8f2b6640"/>
        <function-ref name="init" scoped="" ref="0x2abc8f2b67c8"/>
        <function-ref name="add_proj" scoped="" ref="0x2abc8f2b6950"/>
        <function-ref name="point_is_zero" scoped="" ref="0x2abc8f2b6ad8"/>
        <function-ref name="mul" scoped="" ref="0x2abc8f2b6c60"/>
        <function-ref name="dbl_proj" scoped="" ref="0x2abc8f2b6de8"/>
        <function-ref name="win_mul_base" scoped="" ref="0x2abc8f2b5020"/>
        <function-ref name="check_point" scoped="" ref="0x2abc8f2b51a8"/>
        <function-ref name="win_precompute_Z" scoped="" ref="0x2abc8f2b5430"/>
        <function-ref name="add" scoped="" ref="0x2abc8f2b55b8"/>
        <function-ref name="gen_public_key" scoped="" ref="0x2abc8f2b5740"/>
        <function-ref name="win_precompute" scoped="" ref="0x2abc8f2b58c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2abc8f1f5aa0" loc="52:../../CMC/CMCP.nc">
      <component-ref qname="CMCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2abc8f1f5aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2abc8f1f5df0"/>
        <function-ref name="rand32" scoped="" ref="0x2abc8f1f4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2abc8f1fbda8" loc="47:../../CMC/CMCP.nc">
      <component-ref qname="CMCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2abc8f1fbda8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2abc8f1fa170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x2abc8f268020" loc="56:../../CMC/CMCP.nc">
      <component-ref qname="CMCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2abc8f268020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2abc8f268370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OCBMode" ref="0x2abc8f271aa8" loc="59:../../CMC/CMCP.nc">
      <component-ref qname="CMCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OCBMode" scoped="" ref="0x2abc8f271aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="OCBMode"/>
      </instance>
      <interface-functions>
        <function-ref name="decrypt" scoped="" ref="0x2abc8f271df8"/>
        <function-ref name="init" scoped="" ref="0x2abc8f25f020"/>
        <function-ref name="set_counter" scoped="" ref="0x2abc8f25f1a8"/>
        <function-ref name="get_counter" scoped="" ref="0x2abc8f25f330"/>
        <function-ref name="encrypt" scoped="" ref="0x2abc8f25f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NN" ref="0x2abc8f2b9538" loc="61:../../CMC/CMCP.nc">
      <component-ref qname="CMCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NN" scoped="" ref="0x2abc8f2b9538"/></type-interface>
      <instance>
        <interfacedef-ref qname="NN"/>
      </instance>
      <interface-functions>
        <function-ref name="ModSqr" scoped="" ref="0x2abc8f2b9888"/>
        <function-ref name="LShift" scoped="" ref="0x2abc8f2b9a10"/>
        <function-ref name="ModSmall" scoped="" ref="0x2abc8f2b9b98"/>
        <function-ref name="Gcd" scoped="" ref="0x2abc8f2b9d20"/>
        <function-ref name="ModExp" scoped="" ref="0x2abc8f27c020"/>
        <function-ref name="ModNeg" scoped="" ref="0x2abc8f27c1a8"/>
        <function-ref name="AddDigitMult" scoped="" ref="0x2abc8f27c330"/>
        <function-ref name="ModBarrett" scoped="" ref="0x2abc8f27c4b8"/>
        <function-ref name="Digits" scoped="" ref="0x2abc8f27c640"/>
        <function-ref name="ModSub" scoped="" ref="0x2abc8f27c7c8"/>
        <function-ref name="ModDiv" scoped="" ref="0x2abc8f27c950"/>
        <function-ref name="Cmp" scoped="" ref="0x2abc8f27cad8"/>
        <function-ref name="ModBarrettInit" scoped="" ref="0x2abc8f27cc60"/>
        <function-ref name="AssignDigit" scoped="" ref="0x2abc8f26f020"/>
        <function-ref name="BarrettSetBuf" scoped="" ref="0x2abc8f26f1a8"/>
        <function-ref name="ModMult" scoped="" ref="0x2abc8f26f330"/>
        <function-ref name="Sub" scoped="" ref="0x2abc8f26f4b8"/>
        <function-ref name="Mult" scoped="" ref="0x2abc8f26f640"/>
        <function-ref name="ModMultOpt" scoped="" ref="0x2abc8f26f7c8"/>
        <function-ref name="Assign" scoped="" ref="0x2abc8f26f950"/>
        <function-ref name="Decode" scoped="" ref="0x2abc8f26fad8"/>
        <function-ref name="Encode" scoped="" ref="0x2abc8f26fc60"/>
        <function-ref name="Assign2Exp" scoped="" ref="0x2abc8f26fde8"/>
        <function-ref name="Mod" scoped="" ref="0x2abc8f2b8020"/>
        <function-ref name="ModSqrRootOpt" scoped="" ref="0x2abc8f2b81a8"/>
        <function-ref name="Div" scoped="" ref="0x2abc8f2b8530"/>
        <function-ref name="Add" scoped="" ref="0x2abc8f2b86b8"/>
        <function-ref name="ModAdd" scoped="" ref="0x2abc8f2b8840"/>
        <function-ref name="One" scoped="" ref="0x2abc8f2b89c8"/>
        <function-ref name="Bits" scoped="" ref="0x2abc8f2b8b50"/>
        <function-ref name="TestBit" scoped="" ref="0x2abc8f2b8cd8"/>
        <function-ref name="Equal" scoped="" ref="0x2abc8f2b8e60"/>
        <function-ref name="ModSqrOpt" scoped="" ref="0x2abc8f2b7020"/>
        <function-ref name="AssignZero" scoped="" ref="0x2abc8f2b71a8"/>
        <function-ref name="RShift" scoped="" ref="0x2abc8f2b7330"/>
        <function-ref name="ModDivOpt" scoped="" ref="0x2abc8f2b74b8"/>
        <function-ref name="ModInv" scoped="" ref="0x2abc8f2b7640"/>
        <function-ref name="Even" scoped="" ref="0x2abc8f2b77c8"/>
        <function-ref name="Zero" scoped="" ref="0x2abc8f2b7950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ECIES" ref="0x2abc8f2dc2b8" loc="63:../../CMC/CMCP.nc">
      <component-ref qname="CMCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ECIES" scoped="" ref="0x2abc8f2dc2b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ECIES"/>
      </instance>
      <interface-functions>
        <function-ref name="decrypt" scoped="" ref="0x2abc8f2dc608"/>
        <function-ref name="init" scoped="" ref="0x2abc8f2dc790"/>
        <function-ref name="encrypt" scoped="" ref="0x2abc8f2dc918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2abc8f1fab60" loc="50:../../CMC/CMCP.nc">
      <component-ref qname="CMCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2abc8f1fab60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abc8ed28020"/>
            <typename><typedef-ref name="TMilli" ref="0x2abc8ed28378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2abc8f1f6d98"/>
        <function-ref name="fired" scoped="" ref="0x2abc8f1f84d8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2abc8f1f61f8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2abc8f1f8d78"/>
        <function-ref name="getdt" scoped="" ref="0x2abc8f1f5688"/>
        <function-ref name="gett0" scoped="" ref="0x2abc8f1f5238"/>
        <function-ref name="isRunning" scoped="" ref="0x2abc8f1f8928"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2abc8f1f96f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2abc8f1f67c8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2abc8f1f9b90"/>
        <function-ref name="stop" scoped="" ref="0x2abc8f1f8088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2abc8f374140" loc="41:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2abc8f374140"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2abc8f374490"/>
        <function-ref name="stopDone" scoped="" ref="0x2abc8f374618"/>
        <function-ref name="start" scoped="" ref="0x2abc8f3747a0"/>
        <function-ref name="stop" scoped="" ref="0x2abc8f374928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2abc8f36f420" loc="46:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2abc8f36f420"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2abc8f248848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2abc8f36f770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2abc8f36f9f8" loc="48:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2abc8f36f9f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2abc8f36fd48"/>
        <function-ref name="payloadLength" scoped="" ref="0x2abc8f36e020"/>
        <function-ref name="getPayload" scoped="" ref="0x2abc8f36e1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2abc8f36e330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2abc8f36e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2abc8f3731c8" loc="43:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2abc8f3731c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2abc8f373518"/>
        <function-ref name="getPayload" scoped="" ref="0x2abc8f3736a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2abc8f373828"/>
        <function-ref name="cancel" scoped="" ref="0x2abc8f3739b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2abc8f373b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2abc8f372e48" loc="45:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2abc8f372e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2abc8f3701c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2abc8f39b848" loc="52:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2abc8f39b848"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2abc8f39bb98"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2abc8f39bd20"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2abc8f36b020"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2abc8f36b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2abc8f372300" loc="44:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2abc8f372300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2abc8f372650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2abc8f37b0d0" loc="51:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2abc8f37b0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2abc8f37b420"/>
        <function-ref name="noAck" scoped="" ref="0x2abc8f37b5a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2abc8f37b730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2abc8f394828" loc="53:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2abc8f394828"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2abc8f394b78"/>
        <function-ref name="setRetries" scoped="" ref="0x2abc8f394d00"/>
        <function-ref name="getRetries" scoped="" ref="0x2abc8f380020"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2abc8f3801a8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2abc8f380330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2abc8f381190" loc="49:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2abc8f381190"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2abc8f3814e0"/>
        <function-ref name="source" scoped="" ref="0x2abc8f381668"/>
        <function-ref name="address" scoped="" ref="0x2abc8f3817f0"/>
        <function-ref name="destination" scoped="" ref="0x2abc8f381978"/>
        <function-ref name="setSource" scoped="" ref="0x2abc8f381b00"/>
        <function-ref name="setDestination" scoped="" ref="0x2abc8f381c88"/>
        <function-ref name="type" scoped="" ref="0x2abc8f381e10"/>
        <function-ref name="setType" scoped="" ref="0x2abc8f36c020"/>
        <function-ref name="isForMe" scoped="" ref="0x2abc8f36c1a8"/>
        <function-ref name="setGroup" scoped="" ref="0x2abc8f36c330"/>
        <function-ref name="localGroup" scoped="" ref="0x2abc8f36c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x2abc8f390550" loc="54:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x2abc8f390550"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x2abc8f3908a0"/>
        <function-ref name="setChannel" scoped="" ref="0x2abc8f390a28"/>
        <function-ref name="getChannel" scoped="" ref="0x2abc8f390bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMicro" ref="0x2abc8f393260" loc="56:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x2abc8f393260"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abc8ed26430"/>
            <typename><typedef-ref name="TMicro" ref="0x2abc8ed26788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2abc8e3b4608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2abc8f38f700"/>
        <function-ref name="clear" scoped="" ref="0x2abc8f38fde0"/>
        <function-ref name="isValid" scoped="" ref="0x2abc8f38f020"/>
        <function-ref name="set" scoped="" ref="0x2abc8f3ad4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2abc8f3ac130" loc="57:/opt/tinyos-2.1.2/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2abc8f3ac130"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abc8ed28020"/>
            <typename><typedef-ref name="TMilli" ref="0x2abc8ed28378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2abc8e3b4608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2abc8f3ab700"/>
        <function-ref name="clear" scoped="" ref="0x2abc8f3abde0"/>
        <function-ref name="isValid" scoped="" ref="0x2abc8f3ab020"/>
        <function-ref name="set" scoped="" ref="0x2abc8f3a94f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2abc8f3a86d8" loc="45:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2abc8f3a86d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2abc8f3a8a28"/>
        <function-ref name="stopDone" scoped="" ref="0x2abc8f3a8bb0"/>
        <function-ref name="start" scoped="" ref="0x2abc8f3a8d38"/>
        <function-ref name="stop" scoped="" ref="0x2abc8f3a5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x2abc8f3b7d28" loc="66:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x2abc8f3b7d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2abc8f3b4388"/>
        <function-ref name="get" scoped="" ref="0x2abc8f3b5e00"/>
        <function-ref name="isSet" scoped="" ref="0x2abc8f3b58f0"/>
        <function-ref name="set" scoped="" ref="0x2abc8f3b4898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2abc8f3d0130" loc="71:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2abc8f3d0130"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abc8ed28020"/>
            <typename><typedef-ref name="TMilli" ref="0x2abc8ed28378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2abc8e3b4608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2abc8f3cf588"/>
        <function-ref name="clear" scoped="" ref="0x2abc8f3cfc68"/>
        <function-ref name="isValid" scoped="" ref="0x2abc8f3d0e80"/>
        <function-ref name="set" scoped="" ref="0x2abc8f3ce380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2abc8f3a2020" loc="50:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2abc8f3a2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2abc8f248848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2abc8f3a2370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2abc8f3a0e38" loc="56:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2abc8f3a0e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2abc8f39f1c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2abc8f39f348"/>
        <function-ref name="getPayload" scoped="" ref="0x2abc8f39f4d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2abc8f39f658"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2abc8f39f7e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2abc8f3a5798" loc="47:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2abc8f3a5798"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2abc8f248848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2abc8f3a5ae8"/>
        <function-ref name="getPayload" scoped="" ref="0x2abc8f3a5c70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2abc8f3a5df8"/>
        <function-ref name="cancel" scoped="" ref="0x2abc8f3a4020"/>
        <function-ref name="sendDone" scoped="" ref="0x2abc8f3a41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2abc8f3a3498" loc="49:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2abc8f3a3498"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2abc8f248848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2abc8f3a37e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x2abc8f3b9870" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x2abc8f3b9870"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2abc8f3b7020"/>
        <function-ref name="get" scoped="" ref="0x2abc8f3b89a0"/>
        <function-ref name="isSet" scoped="" ref="0x2abc8f3b8490"/>
        <function-ref name="set" scoped="" ref="0x2abc8f3b7530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2abc8f39daf8" loc="60:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2abc8f39daf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2abc8f39de48"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2abc8f3c2020"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2abc8f3c21a8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2abc8f3c2330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2abc8f3a4928" loc="48:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2abc8f3a4928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2abc8f248848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2abc8f3a4c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x2abc8f3d5190" loc="70:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2abc8f3d5190"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abc8ed26430"/>
            <typename><typedef-ref name="TRadio" ref="0x2abc8f236140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2abc8e3b4608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2abc8f3d3700"/>
        <function-ref name="clear" scoped="" ref="0x2abc8f3d3de0"/>
        <function-ref name="isValid" scoped="" ref="0x2abc8f3d3020"/>
        <function-ref name="set" scoped="" ref="0x2abc8f3d24f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x2abc8f3d4d80" loc="69:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2abc8f3d4d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abc8ed26430"/>
            <typename><typedef-ref name="TRadio" ref="0x2abc8f236140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2abc8f3b1928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x2abc8f3ba390" loc="64:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x2abc8f3ba390"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2abc8f3c0a40"/>
        <function-ref name="get" scoped="" ref="0x2abc8f3c0530"/>
        <function-ref name="isSet" scoped="" ref="0x2abc8f3c0020"/>
        <function-ref name="set" scoped="" ref="0x2abc8f3b9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2abc8f39d1a0" loc="59:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2abc8f39d1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2abc8f39d4f0"/>
        <function-ref name="noAck" scoped="" ref="0x2abc8f39d678"/>
        <function-ref name="wasAcked" scoped="" ref="0x2abc8f39d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x2abc8f3a2be0" loc="53:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x2abc8f3a2be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2abc8f248848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2abc8f3a0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2abc8f3c25e0" loc="61:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2abc8f3c25e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2abc8f3c2930"/>
        <function-ref name="setRetries" scoped="" ref="0x2abc8f3c2ab8"/>
        <function-ref name="getRetries" scoped="" ref="0x2abc8f3c2c40"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2abc8f3c2dc8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2abc8f3c1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2abc8f39fa80" loc="57:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2abc8f39fa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2abc8f39fdd0"/>
        <function-ref name="source" scoped="" ref="0x2abc8f39e020"/>
        <function-ref name="address" scoped="" ref="0x2abc8f39e1a8"/>
        <function-ref name="destination" scoped="" ref="0x2abc8f39e330"/>
        <function-ref name="setSource" scoped="" ref="0x2abc8f39e4b8"/>
        <function-ref name="setDestination" scoped="" ref="0x2abc8f39e640"/>
        <function-ref name="type" scoped="" ref="0x2abc8f39e7c8"/>
        <function-ref name="setType" scoped="" ref="0x2abc8f39e950"/>
        <function-ref name="isForMe" scoped="" ref="0x2abc8f39ead8"/>
        <function-ref name="setGroup" scoped="" ref="0x2abc8f39ec60"/>
        <function-ref name="localGroup" scoped="" ref="0x2abc8f39ede8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x2abc8f3c12e8" loc="62:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x2abc8f3c12e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x2abc8f3c1738"/>
        <function-ref name="setChannel" scoped="" ref="0x2abc8f3c18c0"/>
        <function-ref name="getChannel" scoped="" ref="0x2abc8f3c1a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2abc8f3d4570" loc="67:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2abc8f3d4570"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2abc8f3d48c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x2abc8f3a0860" loc="54:/opt/tinyos-2.1.2/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x2abc8f3a0860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2abc8f248848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2abc8f3a0bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2abc8f3cd4a0" loc="41:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2abc8f3cd4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2abc8f3cd7f0"/>
        <function-ref name="stopDone" scoped="" ref="0x2abc8f3cd978"/>
        <function-ref name="start" scoped="" ref="0x2abc8f3cdb00"/>
        <function-ref name="stop" scoped="" ref="0x2abc8f3cdc88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x2abc8f3ee348" loc="80:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x2abc8f3ee348"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2abc8f3eda40"/>
        <function-ref name="get" scoped="" ref="0x2abc8f3ed530"/>
        <function-ref name="isSet" scoped="" ref="0x2abc8f3ed020"/>
        <function-ref name="set" scoped="" ref="0x2abc8f3ec020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Notifier" ref="0x2abc8f3e5020" loc="60:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Notifier" scoped="" ref="0x2abc8f3e5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2abc8f3e5370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendResource" ref="0x2abc8f3dbd60" loc="62:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendResource" scoped="" ref="0x2abc8f3dbd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2abc8f3df1e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2abc8f3df370"/>
        <function-ref name="request" scoped="" ref="0x2abc8f3df4f8"/>
        <function-ref name="granted" scoped="" ref="0x2abc8f3df680"/>
        <function-ref name="isOwner" scoped="" ref="0x2abc8f3df808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2abc8f3c7cd0" loc="47:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2abc8f3c7cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2abc8f248848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2abc8f3c60a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2abc8f3ca498" loc="44:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2abc8f3ca498"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2abc8f248848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2abc8f3ca7e8"/>
        <function-ref name="getPayload" scoped="" ref="0x2abc8f3ca970"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2abc8f3caaf8"/>
        <function-ref name="cancel" scoped="" ref="0x2abc8f3cac80"/>
        <function-ref name="sendDone" scoped="" ref="0x2abc8f3cae08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2abc8f3c71c8" loc="46:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2abc8f3c71c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2abc8f248848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2abc8f3c7518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x2abc8f3f9c40" loc="64:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x2abc8f3f9c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x2abc8f3de020"/>
        <function-ref name="address" scoped="" ref="0x2abc8f3de1a8"/>
        <function-ref name="destination" scoped="" ref="0x2abc8f3de330"/>
        <function-ref name="setSource" scoped="" ref="0x2abc8f3de4b8"/>
        <function-ref name="setDestination" scoped="" ref="0x2abc8f3de640"/>
        <function-ref name="pan" scoped="" ref="0x2abc8f3de7c8"/>
        <function-ref name="setPan" scoped="" ref="0x2abc8f3de950"/>
        <function-ref name="isForMe" scoped="" ref="0x2abc8f3dead8"/>
        <function-ref name="localPan" scoped="" ref="0x2abc8f3dec60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForIeee154Message" ref="0x2abc8f3d9060" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForIeee154Message" scoped="" ref="0x2abc8f3d9060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2abc8f3d93b0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2abc8f3d9538"/>
        <function-ref name="getPayload" scoped="" ref="0x2abc8f3d96c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2abc8f3d9848"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2abc8f3d99d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x2abc8f3f1020" loc="79:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x2abc8f3f1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2abc8f3f0608"/>
        <function-ref name="get" scoped="" ref="0x2abc8f3f00f8"/>
        <function-ref name="isSet" scoped="" ref="0x2abc8f3f1ba0"/>
        <function-ref name="set" scoped="" ref="0x2abc8f3f0b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2abc8f3f76a8" loc="69:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2abc8f3f76a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2abc8f3f79f8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2abc8f3f7b80"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2abc8f3f7d08"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2abc8f3f6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForActiveMessage" ref="0x2abc8f3c31e0" loc="54:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForActiveMessage" scoped="" ref="0x2abc8f3c31e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2abc8f3c3530"/>
        <function-ref name="payloadLength" scoped="" ref="0x2abc8f3c36b8"/>
        <function-ref name="getPayload" scoped="" ref="0x2abc8f3c3840"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2abc8f3c39c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2abc8f3c3b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2abc8f3c85b0" loc="45:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2abc8f3c85b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2abc8f248848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2abc8f3c8900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x2abc8f3e9298" loc="84:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2abc8f3e9298"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abc8ed26430"/>
            <typename><typedef-ref name="TRadio" ref="0x2abc8f236140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2abc8e3b4608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2abc8f410900"/>
        <function-ref name="clear" scoped="" ref="0x2abc8f40e020"/>
        <function-ref name="isValid" scoped="" ref="0x2abc8f410220"/>
        <function-ref name="set" scoped="" ref="0x2abc8f40e700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x2abc8f3ece78" loc="83:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2abc8f3ece78"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abc8ed26430"/>
            <typename><typedef-ref name="TRadio" ref="0x2abc8f236140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2abc8f3eaa28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x2abc8f3f5b78" loc="78:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x2abc8f3f5b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2abc8f3f3190"/>
        <function-ref name="get" scoped="" ref="0x2abc8f3f4c38"/>
        <function-ref name="isSet" scoped="" ref="0x2abc8f3f4728"/>
        <function-ref name="set" scoped="" ref="0x2abc8f3f36a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2abc8f3d9cf8" loc="68:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2abc8f3d9cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2abc8f3f70a0"/>
        <function-ref name="noAck" scoped="" ref="0x2abc8f3f7228"/>
        <function-ref name="wasAcked" scoped="" ref="0x2abc8f3f73b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x2abc8f3e1b00" loc="58:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x2abc8f3e1b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2abc8f3e1e50"/>
        <function-ref name="getPayload" scoped="" ref="0x2abc8f3e6020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2abc8f3e61a8"/>
        <function-ref name="cancel" scoped="" ref="0x2abc8f3e6330"/>
        <function-ref name="sendDone" scoped="" ref="0x2abc8f3e64b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x2abc8f3c6910" loc="50:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x2abc8f3c6910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2abc8f248848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2abc8f3c6c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2abc8f3f62d0" loc="70:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2abc8f3f62d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2abc8f3f6620"/>
        <function-ref name="setRetries" scoped="" ref="0x2abc8f3f67a8"/>
        <function-ref name="getRetries" scoped="" ref="0x2abc8f3f6930"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2abc8f3f6ab8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2abc8f3f6c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x2abc8f3f5020" loc="76:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x2abc8f3f5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x2abc8f3f5370"/>
        <function-ref name="setChannel" scoped="" ref="0x2abc8f3f54f8"/>
        <function-ref name="getChannel" scoped="" ref="0x2abc8f3f5680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2abc8f3c5ac0" loc="53:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2abc8f3c5ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2abc8f3c5e10"/>
        <function-ref name="source" scoped="" ref="0x2abc8f3c4020"/>
        <function-ref name="address" scoped="" ref="0x2abc8f3c41a8"/>
        <function-ref name="destination" scoped="" ref="0x2abc8f3c4330"/>
        <function-ref name="setSource" scoped="" ref="0x2abc8f3c44b8"/>
        <function-ref name="setDestination" scoped="" ref="0x2abc8f3c4640"/>
        <function-ref name="type" scoped="" ref="0x2abc8f3c47c8"/>
        <function-ref name="setType" scoped="" ref="0x2abc8f3c4950"/>
        <function-ref name="isForMe" scoped="" ref="0x2abc8f3c4ad8"/>
        <function-ref name="setGroup" scoped="" ref="0x2abc8f3c4c60"/>
        <function-ref name="localGroup" scoped="" ref="0x2abc8f3c4de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2abc8f40d378" loc="85:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2abc8f40d378"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abc8ed28020"/>
            <typename><typedef-ref name="TMilli" ref="0x2abc8ed28378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2abc8e3b4608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2abc8f40c7d8"/>
        <function-ref name="clear" scoped="" ref="0x2abc8f40a020"/>
        <function-ref name="isValid" scoped="" ref="0x2abc8f40c0f8"/>
        <function-ref name="set" scoped="" ref="0x2abc8f40a700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x2abc8f3e6818" loc="59:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x2abc8f3e6818"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2abc8f3e6b68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2abc8f3ec668" loc="81:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2abc8f3ec668"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2abc8f3ec9b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x2abc8f3c54d0" loc="51:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x2abc8f3c54d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2abc8f248848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2abc8f3c5820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DummyConfig" ref="0x2abc8f42b300" loc="51:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DummyConfig" scoped="" ref="0x2abc8f42b300"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x2abc8f42b650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrafficMonitorConfig" ref="0x2abc8f417c00" loc="47:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficMonitorConfig" scoped="" ref="0x2abc8f417c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getBytes" scoped="" ref="0x2abc8f41e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageConfig" ref="0x2abc8f42e760" loc="50:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageConfig" scoped="" ref="0x2abc8f42e760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2abc8f42eab0"/>
        <function-ref name="checkFrame" scoped="" ref="0x2abc8f42ec38"/>
        <function-ref name="source" scoped="" ref="0x2abc8f42edc0"/>
        <function-ref name="destination" scoped="" ref="0x2abc8f416020"/>
        <function-ref name="setSource" scoped="" ref="0x2abc8f4161a8"/>
        <function-ref name="setDestination" scoped="" ref="0x2abc8f416330"/>
        <function-ref name="setGroup" scoped="" ref="0x2abc8f4164b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlottedCollisionConfig" ref="0x2abc8f435570" loc="49:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SlottedCollisionConfig" scoped="" ref="0x2abc8f435570"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getInitialDelay" scoped="" ref="0x2abc8f4358c0"/>
        <function-ref name="getScheduleExponent" scoped="" ref="0x2abc8f435a48"/>
        <function-ref name="getCollisionWindowLength" scoped="" ref="0x2abc8f435bd0"/>
        <function-ref name="getTransmitTime" scoped="" ref="0x2abc8f435d58"/>
        <function-ref name="getCollisionWindowStart" scoped="" ref="0x2abc8f419020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x2abc8f45c3f0" loc="61:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2abc8f45c3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2abc8f45c740"/>
        <function-ref name="wait" scoped="" ref="0x2abc8f45c8c8"/>
        <function-ref name="cancel" scoped="" ref="0x2abc8f45ca50"/>
        <function-ref name="isFree" scoped="" ref="0x2abc8f45cbd8"/>
        <function-ref name="getNow" scoped="" ref="0x2abc8f45cd60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RF230Packet" ref="0x2abc8f456688" loc="62:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230Packet" scoped="" ref="0x2abc8f456688"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2abc8f4569d8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2abc8f456b60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2abc8f456ce8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2abc8f456e70"/>
        <function-ref name="headerLength" scoped="" ref="0x2abc8f45f020"/>
        <function-ref name="metadataLength" scoped="" ref="0x2abc8f45f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2abc8f45f730" loc="64:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2abc8f45f730"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abc8ed26430"/>
            <typename><typedef-ref name="TRadio" ref="0x2abc8f236140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2abc8e3b4608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2abc8f45bcc0"/>
        <function-ref name="clear" scoped="" ref="0x2abc8f454420"/>
        <function-ref name="isValid" scoped="" ref="0x2abc8f45b5e0"/>
        <function-ref name="set" scoped="" ref="0x2abc8f454b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RF230DriverConfig" ref="0x2abc8f400e48" loc="43:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230DriverConfig" scoped="" ref="0x2abc8f400e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2abc8f4051c0"/>
        <function-ref name="headerLength" scoped="" ref="0x2abc8f405348"/>
        <function-ref name="metadataLength" scoped="" ref="0x2abc8f4054d0"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x2abc8f405658"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x2abc8f4057e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaConfig" ref="0x2abc8f4186c0" loc="46:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaConfig" scoped="" ref="0x2abc8f4186c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="requiresSoftwareCCA" scoped="" ref="0x2abc8f418a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareAckConfig" ref="0x2abc8f41faf0" loc="44:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0x2abc8f41faf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x2abc8f41fe40"/>
        <function-ref name="createAckPacket" scoped="" ref="0x2abc8f404020"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2abc8f4041a8"/>
        <function-ref name="isAckPacket" scoped="" ref="0x2abc8f404330"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x2abc8f4044b8"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x2abc8f404640"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2abc8f4047c8"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2abc8f404950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x2abc8f43a5e8" loc="60:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2abc8f43a5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x2abc8f43a938"/>
        <function-ref name="getDSN" scoped="" ref="0x2abc8f43aac0"/>
        <function-ref name="setFCF" scoped="" ref="0x2abc8f43ac48"/>
        <function-ref name="isAckFrame" scoped="" ref="0x2abc8f43add0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x2abc8f434020"/>
        <function-ref name="createDataFrame" scoped="" ref="0x2abc8f4341a8"/>
        <function-ref name="setDSN" scoped="" ref="0x2abc8f434330"/>
        <function-ref name="createAckReply" scoped="" ref="0x2abc8f4344b8"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x2abc8f434640"/>
        <function-ref name="isDataFrame" scoped="" ref="0x2abc8f4347c8"/>
        <function-ref name="getAckRequired" scoped="" ref="0x2abc8f434950"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x2abc8f434ad8"/>
        <function-ref name="localAddr" scoped="" ref="0x2abc8f434c60"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2abc8f42c020"/>
        <function-ref name="localPan" scoped="" ref="0x2abc8f42c1a8"/>
        <function-ref name="setDestAddr" scoped="" ref="0x2abc8f42c330"/>
        <function-ref name="createAckFrame" scoped="" ref="0x2abc8f42c4b8"/>
        <function-ref name="setFramePending" scoped="" ref="0x2abc8f42c640"/>
        <function-ref name="setDestPan" scoped="" ref="0x2abc8f42c7c8"/>
        <function-ref name="isForMe" scoped="" ref="0x2abc8f42c950"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2abc8f42cad8"/>
        <function-ref name="getFCF" scoped="" ref="0x2abc8f42cc60"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2abc8f42cde8"/>
        <function-ref name="getDestAddr" scoped="" ref="0x2abc8f439020"/>
        <function-ref name="getFramePending" scoped="" ref="0x2abc8f4391a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UniqueConfig" ref="0x2abc8f41bb40" loc="45:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x2abc8f41bb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x2abc8f3ff020"/>
        <function-ref name="reportChannelError" scoped="" ref="0x2abc8f3ff1a8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x2abc8f3ff330"/>
        <function-ref name="getSender" scoped="" ref="0x2abc8f3ff4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RandomCollisionConfig" ref="0x2abc8f4120d0" loc="48:/opt/tinyos-2.1.2/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RandomCollisionConfig" scoped="" ref="0x2abc8f4120d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x2abc8f412420"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x2abc8f4125a8"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x2abc8f412730"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x2abc8f4128b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x2abc8f4f2180" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2abc8f4f2180"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2abc8f4f24f0"/>
        <function-ref name="wait" scoped="" ref="0x2abc8f4f2678"/>
        <function-ref name="cancel" scoped="" ref="0x2abc8f4f2800"/>
        <function-ref name="isFree" scoped="" ref="0x2abc8f4f2988"/>
        <function-ref name="getNow" scoped="" ref="0x2abc8f4f2b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2abc8f4e7190" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2abc8f4e7190"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2abc8ec996f0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2abc8ec996f0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abc8ed26430"/>
            <typename><typedef-ref name="TRadio" ref="0x2abc8f236140"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x2abc8f236540"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2abc8f4e4918"/>
        <function-ref name="fired" scoped="" ref="0x2abc8f4e6980"/>
        <function-ref name="startAt" scoped="" ref="0x2abc8f4e4310"/>
        <function-ref name="isRunning" scoped="" ref="0x2abc8f4e6e08"/>
        <function-ref name="getAlarm" scoped="" ref="0x2abc8f4e4da0"/>
        <function-ref name="start" scoped="" ref="0x2abc8f4e6020"/>
        <function-ref name="stop" scoped="" ref="0x2abc8f4e64f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x2abc90a89c58" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2abc90a89c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2abc90a88020"/>
        <function-ref name="wait" scoped="" ref="0x2abc90a881a8"/>
        <function-ref name="cancel" scoped="" ref="0x2abc90a88330"/>
        <function-ref name="isFree" scoped="" ref="0x2abc90a884b8"/>
        <function-ref name="getNow" scoped="" ref="0x2abc90a88640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2abc90a88af8" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2abc90a88af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abc8ed26430"/>
            <typename><typedef-ref name="TRadio" ref="0x2abc8f236140"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x2abc8f236540"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2abc90a84190"/>
        <function-ref name="fired" scoped="" ref="0x2abc90a85230"/>
        <function-ref name="startAt" scoped="" ref="0x2abc90a85b40"/>
        <function-ref name="isRunning" scoped="" ref="0x2abc90a856b8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2abc90a84618"/>
        <function-ref name="start" scoped="" ref="0x2abc90a86878"/>
        <function-ref name="stop" scoped="" ref="0x2abc90a86d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x2abc90a849f0" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x2abc90a849f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x2abc90a84d40"/>
        <function-ref name="suspend" scoped="" ref="0x2abc90a83020"/>
        <function-ref name="resume" scoped="" ref="0x2abc90a831a8"/>
        <function-ref name="run" scoped="" ref="0x2abc90a83330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Tasklet" ref="0x2abc8f4caa98" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/TaskletC.nc">
      <component-ref qname="TaskletC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x2abc8f4caa98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x2abc8f4cade8"/>
        <function-ref name="suspend" scoped="" ref="0x2abc8f4f1020"/>
        <function-ref name="resume" scoped="" ref="0x2abc8f4f11a8"/>
        <function-ref name="run" scoped="" ref="0x2abc8f4f1330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2abc8f599430" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2abc8f599430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2abc8f599780"/>
        <function-ref name="cancel" scoped="" ref="0x2abc8f599908"/>
        <function-ref name="sendDone" scoped="" ref="0x2abc8f599a90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2abc8f599d18" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2abc8f599d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2abc8f5980a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2abc8f59b1a0" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2abc8f59b1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2abc8f248848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2abc8f59b510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2abc8f59f700" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2abc8f59f700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2abc8f59fa50"/>
        <function-ref name="payloadLength" scoped="" ref="0x2abc8f59fbd8"/>
        <function-ref name="getPayload" scoped="" ref="0x2abc8f59fd60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2abc8f59d020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2abc8f59d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2abc8f59d510" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2abc8f59d510"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2abc8f248848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2abc8f59d880"/>
        <function-ref name="getPayload" scoped="" ref="0x2abc8f59da08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2abc8f59db90"/>
        <function-ref name="cancel" scoped="" ref="0x2abc8f59dd18"/>
        <function-ref name="sendDone" scoped="" ref="0x2abc8f59c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2abc8f59caa0" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2abc8f59caa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2abc8f248848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2abc8f59ce10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2abc8f59a678" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2abc8f59a678"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2abc8f59a9c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2abc8f59ab50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2abc8f59acd8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2abc8f59ae60"/>
        <function-ref name="headerLength" scoped="" ref="0x2abc8f599020"/>
        <function-ref name="metadataLength" scoped="" ref="0x2abc8f5991a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2abc8f598328" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2abc8f598328"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2abc8f598678"/>
        <function-ref name="checkFrame" scoped="" ref="0x2abc8f598800"/>
        <function-ref name="source" scoped="" ref="0x2abc8f598988"/>
        <function-ref name="destination" scoped="" ref="0x2abc8f598b10"/>
        <function-ref name="setSource" scoped="" ref="0x2abc8f598c98"/>
        <function-ref name="setDestination" scoped="" ref="0x2abc8f598e20"/>
        <function-ref name="setGroup" scoped="" ref="0x2abc8f597020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2abc8f59c388" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2abc8f59c388"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2abc8f248848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2abc8f59c6f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x2abc8f59b8b8" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x2abc8f59b8b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2abc8f248848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2abc8f59bc28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2abc8f5a01f0" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2abc8f5a01f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2abc8f5a0540"/>
        <function-ref name="source" scoped="" ref="0x2abc8f5a06c8"/>
        <function-ref name="address" scoped="" ref="0x2abc8f5a0850"/>
        <function-ref name="destination" scoped="" ref="0x2abc8f5a09d8"/>
        <function-ref name="setSource" scoped="" ref="0x2abc8f5a0b60"/>
        <function-ref name="setDestination" scoped="" ref="0x2abc8f5a0ce8"/>
        <function-ref name="type" scoped="" ref="0x2abc8f5a0e70"/>
        <function-ref name="setType" scoped="" ref="0x2abc8f59f020"/>
        <function-ref name="isForMe" scoped="" ref="0x2abc8f59f1a8"/>
        <function-ref name="setGroup" scoped="" ref="0x2abc8f59f330"/>
        <function-ref name="localGroup" scoped="" ref="0x2abc8f59f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x2abc8f59a020" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x2abc8f59a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2abc8f248848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2abc8f59a390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2abc90a64060" loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2abc90a64060"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2abc90a643b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2abc90a65740" loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2abc90a65740"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2abc90a65a90"/>
        <function-ref name="cancel" scoped="" ref="0x2abc90a65c18"/>
        <function-ref name="sendDone" scoped="" ref="0x2abc90a65da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2abc90a67388" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2abc90a67388"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2abc8f248848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2abc90a676f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2abc90a6b888" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2abc90a6b888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2abc90a6bbd8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2abc90a6bd60"/>
        <function-ref name="getPayload" scoped="" ref="0x2abc90a6a020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2abc90a6a1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2abc90a6a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2abc90a6a698" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2abc90a6a698"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2abc8f248848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2abc90a6aa08"/>
        <function-ref name="getPayload" scoped="" ref="0x2abc90a6ab90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2abc90a6ad18"/>
        <function-ref name="cancel" scoped="" ref="0x2abc90a69020"/>
        <function-ref name="sendDone" scoped="" ref="0x2abc90a691a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2abc90a69c28" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2abc90a69c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2abc8f248848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2abc90a67020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2abc90a6d470" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2abc90a6d470"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2abc90a6d7c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2abc90a6d948"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2abc90a6dad0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2abc90a6dc58"/>
        <function-ref name="headerLength" scoped="" ref="0x2abc90a6dde0"/>
        <function-ref name="metadataLength" scoped="" ref="0x2abc90a6c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2abc90a64638" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2abc90a64638"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2abc90a64a88"/>
        <function-ref name="checkFrame" scoped="" ref="0x2abc90a64c10"/>
        <function-ref name="source" scoped="" ref="0x2abc90a64d98"/>
        <function-ref name="destination" scoped="" ref="0x2abc90a63020"/>
        <function-ref name="setSource" scoped="" ref="0x2abc90a631a8"/>
        <function-ref name="setDestination" scoped="" ref="0x2abc90a63330"/>
        <function-ref name="setGroup" scoped="" ref="0x2abc90a634b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x2abc90a63700" loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2abc90a63700"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2abc90a63a50"/>
        <function-ref name="changed" scoped="" ref="0x2abc90a63bd8"/>
        <function-ref name="amGroup" scoped="" ref="0x2abc90a63d60"/>
        <function-ref name="setAddress" scoped="" ref="0x2abc90a62020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2abc90a66838" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2abc90a66838"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2abc90a66b88"/>
        <function-ref name="payloadLength" scoped="" ref="0x2abc90a66d10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2abc90a65020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2abc90a651a8"/>
        <function-ref name="headerLength" scoped="" ref="0x2abc90a65330"/>
        <function-ref name="metadataLength" scoped="" ref="0x2abc90a654b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2abc90a69510" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2abc90a69510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2abc8f248848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2abc90a69880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x2abc90a67aa0" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x2abc90a67aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2abc8f248848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2abc90a67e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2abc90a6c268" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2abc90a6c268"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2abc90a6c5b8"/>
        <function-ref name="source" scoped="" ref="0x2abc90a6c740"/>
        <function-ref name="address" scoped="" ref="0x2abc90a6c8c8"/>
        <function-ref name="destination" scoped="" ref="0x2abc90a6ca50"/>
        <function-ref name="setSource" scoped="" ref="0x2abc90a6cbd8"/>
        <function-ref name="setDestination" scoped="" ref="0x2abc90a6cd60"/>
        <function-ref name="type" scoped="" ref="0x2abc90a6b020"/>
        <function-ref name="setType" scoped="" ref="0x2abc90a6b1a8"/>
        <function-ref name="isForMe" scoped="" ref="0x2abc90a6b330"/>
        <function-ref name="setGroup" scoped="" ref="0x2abc90a6b4b8"/>
        <function-ref name="localGroup" scoped="" ref="0x2abc90a6b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x2abc90a661e0" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x2abc90a661e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2abc8f248848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2abc90a66550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x2abc8f589c60" loc="54:/opt/tinyos-2.1.2/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2abc8f589c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2abc8f586020"/>
        <function-ref name="changed" scoped="" ref="0x2abc8f5861a8"/>
        <function-ref name="amGroup" scoped="" ref="0x2abc8f586330"/>
        <function-ref name="setAddress" scoped="" ref="0x2abc8f5864b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2abc8f591a48" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2abc8f591a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2abc8f591d98"/>
        <function-ref name="cancel" scoped="" ref="0x2abc8f5b0020"/>
        <function-ref name="sendDone" scoped="" ref="0x2abc8f5b01a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2abc8f5b03f0" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2abc8f5b03f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2abc8f5b0740"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2abc8f5b08c8"/>
        <function-ref name="request" scoped="" ref="0x2abc8f5b0a50"/>
        <function-ref name="granted" scoped="" ref="0x2abc8f5b0bd8"/>
        <function-ref name="isOwner" scoped="" ref="0x2abc8f5b0d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x2abc8f591100" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x2abc8f591100"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2abc8f591450"/>
        <function-ref name="cancel" scoped="" ref="0x2abc8f5915d8"/>
        <function-ref name="sendDone" scoped="" ref="0x2abc8f591760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2abc8f608020" loc="86:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2abc8f608020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2abc8f608390"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2abc8f608518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2abc8f607020" loc="89:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2abc8f607020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2abc8f607390"/>
        <function-ref name="configure" scoped="" ref="0x2abc8f607518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2abc8f609200" loc="85:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2abc8f609200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2abc8f609570"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2abc8f6096f8"/>
        <function-ref name="request" scoped="" ref="0x2abc8f609880"/>
        <function-ref name="granted" scoped="" ref="0x2abc8f609a08"/>
        <function-ref name="isOwner" scoped="" ref="0x2abc8f609b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2abc8f608760" loc="87:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2abc8f608760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2abc8f608ab0"/>
        <function-ref name="userId" scoped="" ref="0x2abc8f608c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2abc90a94398" loc="44:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2abc90a94398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2abc90a946e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2abc90a94970" loc="45:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x2abc90a94970"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2abc90a94cc0"/>
        <function-ref name="isEmpty" scoped="" ref="0x2abc90a94e48"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2abc90a93020"/>
        <function-ref name="dequeue" scoped="" ref="0x2abc90a931a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2abc90b10510" loc="52:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2abc90b10510"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2abc90b10880"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2abc90b10a08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2abc90b0f570" loc="56:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2abc90b0f570"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2abc90b0f8e0"/>
        <function-ref name="configure" scoped="" ref="0x2abc90b0fa68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2abc90b0fcf0" loc="57:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2abc90b0fcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2abc90b0e0a0"/>
        <function-ref name="isEmpty" scoped="" ref="0x2abc90b0e228"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2abc90b0e3b0"/>
        <function-ref name="dequeue" scoped="" ref="0x2abc90b0e538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2abc90b11720" loc="51:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2abc90b11720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2abc90b11a90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2abc90b11c18"/>
        <function-ref name="request" scoped="" ref="0x2abc90b11da0"/>
        <function-ref name="granted" scoped="" ref="0x2abc90b10020"/>
        <function-ref name="isOwner" scoped="" ref="0x2abc90b101a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2abc90b10c50" loc="53:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2abc90b10c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2abc90b0f020"/>
        <function-ref name="userId" scoped="" ref="0x2abc90b0f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2abc90b0e800" loc="69:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2abc90b0e800"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2abc90b0eb50"/>
        <function-ref name="runTask" scoped="" ref="0x2abc90b0ecd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2abc8f661ba0" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2abc8f661ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2abc8f660020"/>
        <function-ref name="cancel" scoped="" ref="0x2abc8f6601a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2abc8f660330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2abc8f6605b8" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2abc8f6605b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2abc8f660908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2abc8f636840" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2abc8f636840"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2abc8f636b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2abc8f604980" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2abc8f604980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2abc8f604cd0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2abc8f604e58"/>
        <function-ref name="getPayload" scoped="" ref="0x2abc8f637020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2abc8f6371a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2abc8f637330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x2abc8f632d98" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2abc8f632d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2abc8f661170"/>
        <function-ref name="payloadLength" scoped="" ref="0x2abc8f6612f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2abc8f661480"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2abc8f661608"/>
        <function-ref name="headerLength" scoped="" ref="0x2abc8f661790"/>
        <function-ref name="metadataLength" scoped="" ref="0x2abc8f661918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x2abc8f636e38" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2abc8f636e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x2abc8f6341c0"/>
        <function-ref name="getDSN" scoped="" ref="0x2abc8f634348"/>
        <function-ref name="setFCF" scoped="" ref="0x2abc8f6344d0"/>
        <function-ref name="isAckFrame" scoped="" ref="0x2abc8f634658"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x2abc8f6347e0"/>
        <function-ref name="createDataFrame" scoped="" ref="0x2abc8f634968"/>
        <function-ref name="setDSN" scoped="" ref="0x2abc8f634af0"/>
        <function-ref name="createAckReply" scoped="" ref="0x2abc8f634c78"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x2abc8f634e00"/>
        <function-ref name="isDataFrame" scoped="" ref="0x2abc8f633020"/>
        <function-ref name="getAckRequired" scoped="" ref="0x2abc8f6331a8"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x2abc8f633330"/>
        <function-ref name="localAddr" scoped="" ref="0x2abc8f6334b8"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2abc8f633740"/>
        <function-ref name="localPan" scoped="" ref="0x2abc8f6338c8"/>
        <function-ref name="setDestAddr" scoped="" ref="0x2abc8f633a50"/>
        <function-ref name="createAckFrame" scoped="" ref="0x2abc8f633bd8"/>
        <function-ref name="setFramePending" scoped="" ref="0x2abc8f633d60"/>
        <function-ref name="setDestPan" scoped="" ref="0x2abc8f632020"/>
        <function-ref name="isForMe" scoped="" ref="0x2abc8f6321a8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2abc8f632330"/>
        <function-ref name="getFCF" scoped="" ref="0x2abc8f6324b8"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2abc8f632640"/>
        <function-ref name="getDestAddr" scoped="" ref="0x2abc8f6327c8"/>
        <function-ref name="getFramePending" scoped="" ref="0x2abc8f632950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x2abc8f637578" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x2abc8f637578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2abc8f6378c8"/>
        <function-ref name="getPayload" scoped="" ref="0x2abc8f637a50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2abc8f637bd8"/>
        <function-ref name="cancel" scoped="" ref="0x2abc8f637d60"/>
        <function-ref name="sendDone" scoped="" ref="0x2abc8f636020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x2abc8f6362a8" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x2abc8f6362a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2abc8f6365f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2abc8f689490" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2abc8f689490"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2abc8f6897e0"/>
        <function-ref name="cancel" scoped="" ref="0x2abc8f689968"/>
        <function-ref name="sendDone" scoped="" ref="0x2abc8f689af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2abc8f689d78" loc="70:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2abc8f689d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2abc8f6880f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x2abc8f68c880" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x2abc8f68c880"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2abc8f68cbd0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2abc8f68cd58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2abc8f68b020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2abc8f68b1a8"/>
        <function-ref name="headerLength" scoped="" ref="0x2abc8f68b330"/>
        <function-ref name="metadataLength" scoped="" ref="0x2abc8f68b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosReceive" ref="0x2abc8f68a060" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosReceive" scoped="" ref="0x2abc8f68a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2abc8f68a3b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2abc8f688378" loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2abc8f688378"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2abc8f6886c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2abc8f688850"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2abc8f6889d8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2abc8f688b60"/>
        <function-ref name="headerLength" scoped="" ref="0x2abc8f688ce8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2abc8f688e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosSend" ref="0x2abc8f68b740" loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosSend" scoped="" ref="0x2abc8f68b740"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2abc8f68ba90"/>
        <function-ref name="cancel" scoped="" ref="0x2abc8f68bc18"/>
        <function-ref name="sendDone" scoped="" ref="0x2abc8f68bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x2abc8f65a838" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x2abc8f65a838"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2abc8f65ab88"/>
        <function-ref name="cancel" scoped="" ref="0x2abc8f65ad10"/>
        <function-ref name="sendDone" scoped="" ref="0x2abc8f68c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x2abc8f68c2a8" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x2abc8f68c2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2abc8f68c5f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosPacket" ref="0x2abc8f68a638" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosPacket" scoped="" ref="0x2abc8f68a638"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2abc8f68a988"/>
        <function-ref name="payloadLength" scoped="" ref="0x2abc8f68ab10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2abc8f68ac98"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2abc8f68ae20"/>
        <function-ref name="headerLength" scoped="" ref="0x2abc8f689020"/>
        <function-ref name="metadataLength" scoped="" ref="0x2abc8f6891a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x2abc8f727900" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x2abc8f727900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x2abc8f727c50"/>
        <function-ref name="address" scoped="" ref="0x2abc8f727dd8"/>
        <function-ref name="destination" scoped="" ref="0x2abc8f726020"/>
        <function-ref name="setSource" scoped="" ref="0x2abc8f7261a8"/>
        <function-ref name="setDestination" scoped="" ref="0x2abc8f726330"/>
        <function-ref name="pan" scoped="" ref="0x2abc8f7264b8"/>
        <function-ref name="setPan" scoped="" ref="0x2abc8f726640"/>
        <function-ref name="isForMe" scoped="" ref="0x2abc8f7267c8"/>
        <function-ref name="localPan" scoped="" ref="0x2abc8f726950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2abc8f726b98" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2abc8f726b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2abc8f725020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2abc8f7251a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2abc8f725330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2abc8f7254b8"/>
        <function-ref name="headerLength" scoped="" ref="0x2abc8f725640"/>
        <function-ref name="metadataLength" scoped="" ref="0x2abc8f7257c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x2abc8f72a980" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2abc8f72a980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x2abc8f72acd0"/>
        <function-ref name="getDSN" scoped="" ref="0x2abc8f72ae58"/>
        <function-ref name="setFCF" scoped="" ref="0x2abc8f729020"/>
        <function-ref name="isAckFrame" scoped="" ref="0x2abc8f7291a8"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x2abc8f729330"/>
        <function-ref name="createDataFrame" scoped="" ref="0x2abc8f7294b8"/>
        <function-ref name="setDSN" scoped="" ref="0x2abc8f729640"/>
        <function-ref name="createAckReply" scoped="" ref="0x2abc8f7297c8"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x2abc8f729950"/>
        <function-ref name="isDataFrame" scoped="" ref="0x2abc8f729ad8"/>
        <function-ref name="getAckRequired" scoped="" ref="0x2abc8f729c60"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x2abc8f729de8"/>
        <function-ref name="localAddr" scoped="" ref="0x2abc8f728020"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2abc8f7282a8"/>
        <function-ref name="localPan" scoped="" ref="0x2abc8f728430"/>
        <function-ref name="setDestAddr" scoped="" ref="0x2abc8f7285b8"/>
        <function-ref name="createAckFrame" scoped="" ref="0x2abc8f728740"/>
        <function-ref name="setFramePending" scoped="" ref="0x2abc8f7288c8"/>
        <function-ref name="setDestPan" scoped="" ref="0x2abc8f728a50"/>
        <function-ref name="isForMe" scoped="" ref="0x2abc8f728bd8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2abc8f728d60"/>
        <function-ref name="getFCF" scoped="" ref="0x2abc8f727020"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2abc8f7271a8"/>
        <function-ref name="getDestAddr" scoped="" ref="0x2abc8f727330"/>
        <function-ref name="getFramePending" scoped="" ref="0x2abc8f7274b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2abc8f725ab0" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2abc8f725ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2abc8f725e00"/>
        <function-ref name="payloadLength" scoped="" ref="0x2abc8f724020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2abc8f7241a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2abc8f724330"/>
        <function-ref name="headerLength" scoped="" ref="0x2abc8f7244b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2abc8f724640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x2abc90b29d98" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x2abc90b29d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x2abc90b28170"/>
        <function-ref name="address" scoped="" ref="0x2abc90b282f8"/>
        <function-ref name="destination" scoped="" ref="0x2abc90b28480"/>
        <function-ref name="setSource" scoped="" ref="0x2abc90b28608"/>
        <function-ref name="setDestination" scoped="" ref="0x2abc90b28790"/>
        <function-ref name="pan" scoped="" ref="0x2abc90b28918"/>
        <function-ref name="setPan" scoped="" ref="0x2abc90b28aa0"/>
        <function-ref name="isForMe" scoped="" ref="0x2abc90b28c28"/>
        <function-ref name="localPan" scoped="" ref="0x2abc90b28db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2abc90b27020" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2abc90b27020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2abc90b27370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2abc90b274f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2abc90b27680"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2abc90b27808"/>
        <function-ref name="headerLength" scoped="" ref="0x2abc90b27990"/>
        <function-ref name="metadataLength" scoped="" ref="0x2abc90b27b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x2abc90b30d50" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2abc90b30d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x2abc90b2b0d8"/>
        <function-ref name="getDSN" scoped="" ref="0x2abc90b2b260"/>
        <function-ref name="setFCF" scoped="" ref="0x2abc90b2b3e8"/>
        <function-ref name="isAckFrame" scoped="" ref="0x2abc90b2b570"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x2abc90b2b6f8"/>
        <function-ref name="createDataFrame" scoped="" ref="0x2abc90b2b880"/>
        <function-ref name="setDSN" scoped="" ref="0x2abc90b2ba08"/>
        <function-ref name="createAckReply" scoped="" ref="0x2abc90b2bb90"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x2abc90b2bd18"/>
        <function-ref name="isDataFrame" scoped="" ref="0x2abc90b2a020"/>
        <function-ref name="getAckRequired" scoped="" ref="0x2abc90b2a1a8"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x2abc90b2a330"/>
        <function-ref name="localAddr" scoped="" ref="0x2abc90b2a4b8"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2abc90b2a740"/>
        <function-ref name="localPan" scoped="" ref="0x2abc90b2a8c8"/>
        <function-ref name="setDestAddr" scoped="" ref="0x2abc90b2aa50"/>
        <function-ref name="createAckFrame" scoped="" ref="0x2abc90b2abd8"/>
        <function-ref name="setFramePending" scoped="" ref="0x2abc90b2ad60"/>
        <function-ref name="setDestPan" scoped="" ref="0x2abc90b29020"/>
        <function-ref name="isForMe" scoped="" ref="0x2abc90b291a8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2abc90b29330"/>
        <function-ref name="getFCF" scoped="" ref="0x2abc90b294b8"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2abc90b29640"/>
        <function-ref name="getDestAddr" scoped="" ref="0x2abc90b297c8"/>
        <function-ref name="getFramePending" scoped="" ref="0x2abc90b29950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x2abc90b27dc0" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2abc90b27dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2abc90b26170"/>
        <function-ref name="changed" scoped="" ref="0x2abc90b262f8"/>
        <function-ref name="amGroup" scoped="" ref="0x2abc90b26480"/>
        <function-ref name="setAddress" scoped="" ref="0x2abc90b26608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2abc90b26890" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2abc90b26890"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2abc90b26be0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2abc90b26d68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2abc90b25020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2abc90b251a8"/>
        <function-ref name="headerLength" scoped="" ref="0x2abc90b25330"/>
        <function-ref name="metadataLength" scoped="" ref="0x2abc90b254b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2abc8f78d510" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2abc8f78d510"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2abc8f78d860"/>
        <function-ref name="cancel" scoped="" ref="0x2abc8f78d9e8"/>
        <function-ref name="sendDone" scoped="" ref="0x2abc8f78db70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2abc8f78ddf8" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2abc8f78ddf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2abc8f78c170"/>
        <function-ref name="header" scoped="" ref="0x2abc8f78c2f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2abc8f78f470" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2abc8f78f470"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2abc8f78f7c0"/>
        <function-ref name="cancel" scoped="" ref="0x2abc8f78f948"/>
        <function-ref name="sendDone" scoped="" ref="0x2abc8f78fad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2abc8f78c580" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2abc8f78c580"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x2abc8f78c8d0"/>
        <function-ref name="reportChannelError" scoped="" ref="0x2abc8f78ca58"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x2abc8f78cbe0"/>
        <function-ref name="getSender" scoped="" ref="0x2abc8f78cd68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2abc8f78fd18" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2abc8f78fd18"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2abc8f78d0a0"/>
        <function-ref name="header" scoped="" ref="0x2abc8f78d228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2abc90b5b458" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2abc90b5b458"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2abc90b5b7a8"/>
        <function-ref name="cancel" scoped="" ref="0x2abc90b5b930"/>
        <function-ref name="sendDone" scoped="" ref="0x2abc90b5bab8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2abc90b5bd40" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2abc90b5bd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2abc90b5a0d8"/>
        <function-ref name="header" scoped="" ref="0x2abc90b5a260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0x2abc90b59bd8" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2abc90b59bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2abc90b57020"/>
        <function-ref name="clearAll" scoped="" ref="0x2abc90b571a8"/>
        <function-ref name="get" scoped="" ref="0x2abc90b57330"/>
        <function-ref name="set" scoped="" ref="0x2abc90b574b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2abc90b60da0" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2abc90b60da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2abc90b5c170"/>
        <function-ref name="cancel" scoped="" ref="0x2abc90b5c2f8"/>
        <function-ref name="sendDone" scoped="" ref="0x2abc90b5c480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0x2abc90b59020" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x2abc90b59020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x2abc90b59370"/>
        <function-ref name="insertNode" scoped="" ref="0x2abc90b594f8"/>
        <function-ref name="getNode" scoped="" ref="0x2abc90b59680"/>
        <function-ref name="evicted" scoped="" ref="0x2abc90b59808"/>
        <function-ref name="getIndex" scoped="" ref="0x2abc90b59990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2abc90b5c6c8" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2abc90b5c6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2abc90b5ca18"/>
        <function-ref name="header" scoped="" ref="0x2abc90b5cba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2abc90b5cde8" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2abc90b5cde8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2abc90b5b170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UniqueConfig" ref="0x2abc90b5a4a8" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x2abc90b5a4a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x2abc90b5a7f8"/>
        <function-ref name="reportChannelError" scoped="" ref="0x2abc90b5a980"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x2abc90b5ab08"/>
        <function-ref name="getSender" scoped="" ref="0x2abc90b5ac90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x2abc8f759d58" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <component-ref qname="NeighborhoodC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x2abc8f759d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x2abc8f7560d8"/>
        <function-ref name="insertNode" scoped="" ref="0x2abc8f756260"/>
        <function-ref name="getNode" scoped="" ref="0x2abc8f7563e8"/>
        <function-ref name="evicted" scoped="" ref="0x2abc8f756570"/>
        <function-ref name="getIndex" scoped="" ref="0x2abc8f7566f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x2abc8f752b18" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2abc8f752b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2abc8f752e68"/>
        <function-ref name="clearAll" scoped="" ref="0x2abc8f751020"/>
        <function-ref name="get" scoped="" ref="0x2abc8f7511a8"/>
        <function-ref name="set" scoped="" ref="0x2abc8f751330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x2abc8f753850" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x2abc8f753850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x2abc8f753ba0"/>
        <function-ref name="insertNode" scoped="" ref="0x2abc8f753d28"/>
        <function-ref name="getNode" scoped="" ref="0x2abc8f752020"/>
        <function-ref name="evicted" scoped="" ref="0x2abc8f7521a8"/>
        <function-ref name="getIndex" scoped="" ref="0x2abc8f752330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2abc8f753238" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2abc8f753238"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2abc8f753588"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x2abc90b55140" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.NeighborhoodFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2abc90b55140"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2abc90b55490"/>
        <function-ref name="clearAll" scoped="" ref="0x2abc90b55618"/>
        <function-ref name="get" scoped="" ref="0x2abc90b557a0"/>
        <function-ref name="set" scoped="" ref="0x2abc90b55928"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2abc8f77cc38" loc="85:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2abc8f77cc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2abc8f77b020"/>
        <function-ref name="cancel" scoped="" ref="0x2abc8f77b1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2abc8f77b330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2abc8f77b5b8" loc="86:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2abc8f77b5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2abc8f77b908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedPacketAcks" ref="0x2abc8f7ae100" loc="93:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x2abc8f7ae100"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2abc8f7ae450"/>
        <function-ref name="noAck" scoped="" ref="0x2abc8f7ae5d8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2abc8f7ae760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2abc8f77f2e8" loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2abc8f77f2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2abc8f77f638"/>
        <function-ref name="cancel" scoped="" ref="0x2abc8f77f7c0"/>
        <function-ref name="sendDone" scoped="" ref="0x2abc8f77f948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2abc8f77ee20" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2abc8f77ee20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2abc8f77c1a8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2abc8f77c330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2abc8f77c4b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2abc8f77c640"/>
        <function-ref name="headerLength" scoped="" ref="0x2abc8f77c7c8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2abc8f77c950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2abc8f77bb90" loc="87:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2abc8f77bb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2abc8f77a020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2abc8f77a1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2abc8f77a330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2abc8f77a4b8"/>
        <function-ref name="headerLength" scoped="" ref="0x2abc8f77a640"/>
        <function-ref name="metadataLength" scoped="" ref="0x2abc8f77a7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UnconnectedPacketLink" ref="0x2abc8f7af470" loc="92:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x2abc8f7af470"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2abc8f7af7c0"/>
        <function-ref name="setRetries" scoped="" ref="0x2abc8f7af948"/>
        <function-ref name="getRetries" scoped="" ref="0x2abc8f7afad0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2abc8f7afc58"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2abc8f7afde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2abc8f77fbd0" loc="78:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2abc8f77fbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2abc8f77e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x2abc8f77aa10" loc="88:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2abc8f77aa10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2abc8f77ad60"/>
        <function-ref name="noAck" scoped="" ref="0x2abc8f7af020"/>
        <function-ref name="wasAcked" scoped="" ref="0x2abc8f7af1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2abc8f77e268" loc="79:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2abc8f77e268"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2abc8f77e5b8"/>
        <function-ref name="setRetries" scoped="" ref="0x2abc8f77e740"/>
        <function-ref name="getRetries" scoped="" ref="0x2abc8f77e8c8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2abc8f77ea50"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2abc8f77ebd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2abc8f7a9988" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2abc8f7a9988"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2abc8f7a9cd8"/>
        <function-ref name="stopDone" scoped="" ref="0x2abc8f7a9e60"/>
        <function-ref name="start" scoped="" ref="0x2abc8f795020"/>
        <function-ref name="stop" scoped="" ref="0x2abc8f7951a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2abc8f7c85c8" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2abc8f7c85c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2abc8f7c8918"/>
        <function-ref name="cancel" scoped="" ref="0x2abc8f7c8aa0"/>
        <function-ref name="sendDone" scoped="" ref="0x2abc8f7c8c28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2abc8f7c7020" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2abc8f7c7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2abc8f7c7370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2abc8f795430" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2abc8f795430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2abc8f795780"/>
        <function-ref name="cancel" scoped="" ref="0x2abc8f795908"/>
        <function-ref name="sendDone" scoped="" ref="0x2abc8f795a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2abc8f7ca2e8" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2abc8f7ca2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2abc8f7ca638"/>
        <function-ref name="payloadLength" scoped="" ref="0x2abc8f7ca7c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2abc8f7ca948"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2abc8f7caad0"/>
        <function-ref name="headerLength" scoped="" ref="0x2abc8f7cac58"/>
        <function-ref name="metadataLength" scoped="" ref="0x2abc8f7cade0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2abc8f7c9060" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2abc8f7c9060"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2abc8f7c93b0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2abc8f7c9538"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2abc8f7c96c0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2abc8f7c9848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2abc8f7c9b30" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x2abc8f7c9b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2abc8f7c9e80"/>
        <function-ref name="stopDone" scoped="" ref="0x2abc8f7c8030"/>
        <function-ref name="start" scoped="" ref="0x2abc8f7c81b8"/>
        <function-ref name="stop" scoped="" ref="0x2abc8f7c8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2abc8f795d18" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2abc8f795d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2abc8f7ca0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2abc8f7c75f8" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2abc8f7c75f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2abc8f7c7948"/>
        <function-ref name="payloadLength" scoped="" ref="0x2abc8f7c7ad0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2abc8f7c7c58"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2abc8f7c7de0"/>
        <function-ref name="headerLength" scoped="" ref="0x2abc8f7c5020"/>
        <function-ref name="metadataLength" scoped="" ref="0x2abc8f7c51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2abc90bb5458" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2abc90bb5458"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2abc90bb57a8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2abc90bb5930"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2abc90bb5ab8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2abc90bb5c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2abc8f838270" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2abc8f838270"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2abc8f8385c0"/>
        <function-ref name="stopDone" scoped="" ref="0x2abc8f838748"/>
        <function-ref name="start" scoped="" ref="0x2abc8f8388d0"/>
        <function-ref name="stop" scoped="" ref="0x2abc8f838a58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x2abc8f8355d8" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2abc8f8355d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2abc8f835928"/>
        <function-ref name="turnOn" scoped="" ref="0x2abc8f835ab0"/>
        <function-ref name="setChannel" scoped="" ref="0x2abc8f835c38"/>
        <function-ref name="done" scoped="" ref="0x2abc8f835dc0"/>
        <function-ref name="standby" scoped="" ref="0x2abc8f834020"/>
        <function-ref name="getChannel" scoped="" ref="0x2abc8f8341a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2abc8f838ce0" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2abc8f838ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2abc8f8370a0"/>
        <function-ref name="cancel" scoped="" ref="0x2abc8f837228"/>
        <function-ref name="sendDone" scoped="" ref="0x2abc8f8373b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x2abc8f834c98" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2abc8f834c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2abc8f833020"/>
        <function-ref name="header" scoped="" ref="0x2abc8f8331a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2abc8f837638" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2abc8f837638"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2abc8f837988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x2abc8f8343f0" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2abc8f8343f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2abc8f834740"/>
        <function-ref name="ready" scoped="" ref="0x2abc8f8348c8"/>
        <function-ref name="sendDone" scoped="" ref="0x2abc8f834a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x2abc8f837bd0" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x2abc8f837bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x2abc8f835020"/>
        <function-ref name="setChannel" scoped="" ref="0x2abc8f8351a8"/>
        <function-ref name="getChannel" scoped="" ref="0x2abc8f835330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2abc90bae870" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2abc90bae870"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2abc90baebc0"/>
        <function-ref name="stopDone" scoped="" ref="0x2abc90baed48"/>
        <function-ref name="start" scoped="" ref="0x2abc90bad020"/>
        <function-ref name="stop" scoped="" ref="0x2abc90bad1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x2abc90bad430" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2abc90bad430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2abc90bad780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x2abc90baa450" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2abc90baa450"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2abc90baa7a0"/>
        <function-ref name="turnOn" scoped="" ref="0x2abc90baa928"/>
        <function-ref name="setChannel" scoped="" ref="0x2abc90baaab0"/>
        <function-ref name="done" scoped="" ref="0x2abc90baac38"/>
        <function-ref name="standby" scoped="" ref="0x2abc90baadc0"/>
        <function-ref name="getChannel" scoped="" ref="0x2abc90ba9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2abc90bada08" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2abc90bada08"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2abc90badd58"/>
        <function-ref name="cancel" scoped="" ref="0x2abc90bac020"/>
        <function-ref name="sendDone" scoped="" ref="0x2abc90bac1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x2abc90ba74f0" loc="189:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x2abc90ba74f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2abc90ba7840"/>
        <function-ref name="runTask" scoped="" ref="0x2abc90ba79c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x2abc90ba8578" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2abc90ba8578"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2abc90ba88c8"/>
        <function-ref name="header" scoped="" ref="0x2abc90ba8a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stateDoneTask" ref="0x2abc90ba7c90" loc="144:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stateDoneTask" scoped="" ref="0x2abc90ba7c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2abc90ba6020"/>
        <function-ref name="runTask" scoped="" ref="0x2abc90ba61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2abc90bac430" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2abc90bac430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2abc90bac780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="deliverTask" ref="0x2abc90ba8d18" loc="322:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="deliverTask" scoped="" ref="0x2abc90ba8d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2abc90ba70a0"/>
        <function-ref name="runTask" scoped="" ref="0x2abc90ba7228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x2abc90ba9c98" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2abc90ba9c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2abc90ba8020"/>
        <function-ref name="ready" scoped="" ref="0x2abc90ba81a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2abc90ba8330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x2abc90bac9c8" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x2abc90bac9c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x2abc90bacd18"/>
        <function-ref name="setChannel" scoped="" ref="0x2abc90baa020"/>
        <function-ref name="getChannel" scoped="" ref="0x2abc90baa1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x2abc90ba9268" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x2abc90ba9268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x2abc90ba95b8"/>
        <function-ref name="suspend" scoped="" ref="0x2abc90ba9740"/>
        <function-ref name="resume" scoped="" ref="0x2abc90ba98c8"/>
        <function-ref name="run" scoped="" ref="0x2abc90ba9a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2abc8f8680c0" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2abc8f8680c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2abc8f868410"/>
        <function-ref name="ready" scoped="" ref="0x2abc8f868598"/>
        <function-ref name="sendDone" scoped="" ref="0x2abc8f868720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2abc8f8689a8" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2abc8f8689a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2abc8f868cf8"/>
        <function-ref name="header" scoped="" ref="0x2abc8f868e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x2abc8f8670f0" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2abc8f8670f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2abc8f867440"/>
        <function-ref name="wait" scoped="" ref="0x2abc8f8675c8"/>
        <function-ref name="cancel" scoped="" ref="0x2abc8f867750"/>
        <function-ref name="isFree" scoped="" ref="0x2abc8f8678d8"/>
        <function-ref name="getNow" scoped="" ref="0x2abc8f867a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2abc8f867ce8" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2abc8f867ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x2abc8f8660a0"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x2abc8f866228"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x2abc8f8663b0"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x2abc8f866538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2abc8f8698c8" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2abc8f8698c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2abc8f869c18"/>
        <function-ref name="header" scoped="" ref="0x2abc8f869da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2abc8f869020" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2abc8f869020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2abc8f869370"/>
        <function-ref name="ready" scoped="" ref="0x2abc8f8694f8"/>
        <function-ref name="sendDone" scoped="" ref="0x2abc8f869680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2abc90bf4d38" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2abc90bf4d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2abc90bf20d8"/>
        <function-ref name="ready" scoped="" ref="0x2abc90bf2260"/>
        <function-ref name="sendDone" scoped="" ref="0x2abc90bf23e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2abc90bf2670" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2abc90bf2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2abc90bf29c0"/>
        <function-ref name="header" scoped="" ref="0x2abc90bf2b48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x2abc90bf2d90" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2abc90bf2d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2abc90bf1170"/>
        <function-ref name="wait" scoped="" ref="0x2abc90bf12f8"/>
        <function-ref name="cancel" scoped="" ref="0x2abc90bf1480"/>
        <function-ref name="isFree" scoped="" ref="0x2abc90bf1608"/>
        <function-ref name="getNow" scoped="" ref="0x2abc90bf1790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2abc90bf19d8" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2abc90bf19d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2abc90bf1d28"/>
        <function-ref name="rand32" scoped="" ref="0x2abc90bf0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2abc90bf02a8" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2abc90bf02a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x2abc90bf05f8"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x2abc90bf0780"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x2abc90bf0908"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x2abc90bf0a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2abc90bf4578" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2abc90bf4578"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2abc90bf48c8"/>
        <function-ref name="header" scoped="" ref="0x2abc90bf4a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2abc90bf6b58" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2abc90bf6b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2abc90bf4020"/>
        <function-ref name="ready" scoped="" ref="0x2abc90bf41a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2abc90bf4330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="calcNextRandom" ref="0x2abc90bf0d58" loc="78:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="calcNextRandom" scoped="" ref="0x2abc90bf0d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2abc90bef0d8"/>
        <function-ref name="runTask" scoped="" ref="0x2abc90bef260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2abc8f8aad38" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2abc8f8aad38"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2abc8f8a80d8"/>
        <function-ref name="ready" scoped="" ref="0x2abc8f8a8260"/>
        <function-ref name="sendDone" scoped="" ref="0x2abc8f8a83e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2abc8f8a8670" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2abc8f8a8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2abc8f8a89c0"/>
        <function-ref name="header" scoped="" ref="0x2abc8f8a8b48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x2abc8f8a8d90" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2abc8f8a8d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2abc8f8a7170"/>
        <function-ref name="wait" scoped="" ref="0x2abc8f8a72f8"/>
        <function-ref name="cancel" scoped="" ref="0x2abc8f8a7480"/>
        <function-ref name="isFree" scoped="" ref="0x2abc8f8a7608"/>
        <function-ref name="getNow" scoped="" ref="0x2abc8f8a7790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AckReceivedFlag" ref="0x2abc8f8a6bd8" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AckReceivedFlag" scoped="" ref="0x2abc8f8a6bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2abc8f8a5020"/>
        <function-ref name="get" scoped="" ref="0x2abc8f8a51a8"/>
        <function-ref name="setValue" scoped="" ref="0x2abc8f8a5330"/>
        <function-ref name="set" scoped="" ref="0x2abc8f8a54b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2abc8f8a7a18" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2abc8f8a7a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x2abc8f8a7d68"/>
        <function-ref name="createAckPacket" scoped="" ref="0x2abc8f8a6020"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2abc8f8a61a8"/>
        <function-ref name="isAckPacket" scoped="" ref="0x2abc8f8a6330"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x2abc8f8a64b8"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x2abc8f8a6640"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2abc8f8a67c8"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2abc8f8a6950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2abc8f860b50" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2abc8f860b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2abc8f8aa020"/>
        <function-ref name="header" scoped="" ref="0x2abc8f8aa1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2abc8f8602a8" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2abc8f8602a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2abc8f8605f8"/>
        <function-ref name="ready" scoped="" ref="0x2abc8f860780"/>
        <function-ref name="sendDone" scoped="" ref="0x2abc8f860908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2abc8f8aa3f0" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2abc8f8aa3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2abc8f8aa740"/>
        <function-ref name="noAck" scoped="" ref="0x2abc8f8aa8c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2abc8f8aaa50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2abc8f8c8978" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2abc8f8c8978"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2abc8f8c8cc8"/>
        <function-ref name="stopDone" scoped="" ref="0x2abc8f8c8e50"/>
        <function-ref name="start" scoped="" ref="0x2abc8f8c7020"/>
        <function-ref name="stop" scoped="" ref="0x2abc8f8c71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x2abc8f8c3020" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x2abc8f8c3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2abc8f8c3370"/>
        <function-ref name="request" scoped="" ref="0x2abc8f8c34f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2abc8f8bf5b8" loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2abc8f8bf5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2abc8f8bf908"/>
        <function-ref name="ready" scoped="" ref="0x2abc8f8bfa90"/>
        <function-ref name="sendDone" scoped="" ref="0x2abc8f8bfc18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2abc8f8be020" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2abc8f8be020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2abc8f8be370"/>
        <function-ref name="header" scoped="" ref="0x2abc8f8be4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x2abc8f8c5268" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2abc8f8c5268"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2abc8f8c55b8"/>
        <function-ref name="turnOn" scoped="" ref="0x2abc8f8c5740"/>
        <function-ref name="setChannel" scoped="" ref="0x2abc8f8c58c8"/>
        <function-ref name="done" scoped="" ref="0x2abc8f8c5a50"/>
        <function-ref name="standby" scoped="" ref="0x2abc8f8c5bd8"/>
        <function-ref name="getChannel" scoped="" ref="0x2abc8f8c5d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2abc8f8c3740" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2abc8f8c3740"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2abc8f8c3a90"/>
        <function-ref name="payloadLength" scoped="" ref="0x2abc8f8c3c18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2abc8f8c3da0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2abc8f8c2020"/>
        <function-ref name="headerLength" scoped="" ref="0x2abc8f8c21a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2abc8f8c2330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x2abc8f8c0638" loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x2abc8f8c0638"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2abc8f8c0a88"/>
        <function-ref name="turnOn" scoped="" ref="0x2abc8f8c0c10"/>
        <function-ref name="setChannel" scoped="" ref="0x2abc8f8c0d98"/>
        <function-ref name="done" scoped="" ref="0x2abc8f8bf020"/>
        <function-ref name="standby" scoped="" ref="0x2abc8f8bf1a8"/>
        <function-ref name="getChannel" scoped="" ref="0x2abc8f8bf330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x2abc8f8c25b8" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x2abc8f8c25b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x2abc8f8c2908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2abc8f8c48c8" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2abc8f8c48c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2abc8f8c4c18"/>
        <function-ref name="header" scoped="" ref="0x2abc8f8c4da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x2abc8f8c0060" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x2abc8f8c0060"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2abc8f8c03b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2abc8f8c2bf0" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x2abc8f8c2bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2abc8f8c1020"/>
        <function-ref name="stopDone" scoped="" ref="0x2abc8f8c11a8"/>
        <function-ref name="start" scoped="" ref="0x2abc8f8c1330"/>
        <function-ref name="stop" scoped="" ref="0x2abc8f8c14b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2abc8f8bc020" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2abc8f8bc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2abc8f8bc370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2abc8f8bc4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2abc8f8bc680"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2abc8f8bc808"/>
        <function-ref name="headerLength" scoped="" ref="0x2abc8f8bc990"/>
        <function-ref name="metadataLength" scoped="" ref="0x2abc8f8bcb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x2abc8f8c7c98" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x2abc8f8c7c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2abc8f8c5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2abc8f8bcda0" loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2abc8f8bcda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x2abc8f8bb170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x2abc8f8c1740" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x2abc8f8c1740"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2abc8f8c1a90"/>
        <function-ref name="cancel" scoped="" ref="0x2abc8f8c1c18"/>
        <function-ref name="sendDone" scoped="" ref="0x2abc8f8c1da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2abc8f8c4020" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2abc8f8c4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2abc8f8c4370"/>
        <function-ref name="ready" scoped="" ref="0x2abc8f8c44f8"/>
        <function-ref name="sendDone" scoped="" ref="0x2abc8f8c4680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x2abc8f8be780" loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x2abc8f8be780"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2abc8f8bead0"/>
        <function-ref name="request" scoped="" ref="0x2abc8f8bec58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x2abc8f8c73f0" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x2abc8f8c73f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2abc8f8c7740"/>
        <function-ref name="cancel" scoped="" ref="0x2abc8f8c78c8"/>
        <function-ref name="sendDone" scoped="" ref="0x2abc8f8c7a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x2abc8f90b8c8" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x2abc8f90b8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2abc8f90bc18"/>
        <function-ref name="get" scoped="" ref="0x2abc8f90bda0"/>
        <function-ref name="setValue" scoped="" ref="0x2abc8f90a020"/>
        <function-ref name="set" scoped="" ref="0x2abc8f90a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2abc8f90f9f8" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2abc8f90f9f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2abc8f90fd48"/>
        <function-ref name="payloadLength" scoped="" ref="0x2abc8f90e020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2abc8f90e1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2abc8f90e330"/>
        <function-ref name="headerLength" scoped="" ref="0x2abc8f90e4b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2abc8f90e640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2abc8f90d9f0" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2abc8f90d9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2abc8f90dd40"/>
        <function-ref name="payloadLength" scoped="" ref="0x2abc8f90b020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2abc8f90b1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2abc8f90b330"/>
        <function-ref name="headerLength" scoped="" ref="0x2abc8f90b4b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2abc8f90b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x2abc8f912020" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2abc8f912020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abc8ed26430"/>
            <typename><typedef-ref name="TRadio" ref="0x2abc8f236140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2abc8e3b4608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2abc8f910478"/>
        <function-ref name="clear" scoped="" ref="0x2abc8f910b58"/>
        <function-ref name="isValid" scoped="" ref="0x2abc8f912d70"/>
        <function-ref name="set" scoped="" ref="0x2abc8f90f278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x2abc8f90ea30" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2abc8f90ea30"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abc8ed26430"/>
            <typename><typedef-ref name="TRadio" ref="0x2abc8f236140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2abc8f90d5d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2abc8f915270" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2abc8f915270"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abc8ed28020"/>
            <typename><typedef-ref name="TMilli" ref="0x2abc8ed28378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2abc8e3b4608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2abc8f914700"/>
        <function-ref name="clear" scoped="" ref="0x2abc8f914de0"/>
        <function-ref name="isValid" scoped="" ref="0x2abc8f914020"/>
        <function-ref name="set" scoped="" ref="0x2abc8f9134f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x2abc90c26928" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x2abc90c26928"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2abc90c26c78"/>
        <function-ref name="get" scoped="" ref="0x2abc90c26e00"/>
        <function-ref name="setValue" scoped="" ref="0x2abc90c25020"/>
        <function-ref name="set" scoped="" ref="0x2abc90c251a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2abc90c289f8" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2abc90c289f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2abc90c28d48"/>
        <function-ref name="payloadLength" scoped="" ref="0x2abc90c26020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2abc90c261a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2abc90c26330"/>
        <function-ref name="headerLength" scoped="" ref="0x2abc90c264b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2abc90c26640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2abc90c235e8" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2abc90c235e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2abc90c23938"/>
        <function-ref name="payloadLength" scoped="" ref="0x2abc90c23ac0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2abc90c23c48"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2abc90c23dd0"/>
        <function-ref name="headerLength" scoped="" ref="0x2abc90c22020"/>
        <function-ref name="metadataLength" scoped="" ref="0x2abc90c221a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x2abc90c2a020" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2abc90c2a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abc8ed26430"/>
            <typename><typedef-ref name="TRadio" ref="0x2abc8f236140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2abc8e3b4608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2abc90c29478"/>
        <function-ref name="clear" scoped="" ref="0x2abc90c29b58"/>
        <function-ref name="isValid" scoped="" ref="0x2abc90c2ad70"/>
        <function-ref name="set" scoped="" ref="0x2abc90c28278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x2abc90c25538" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2abc90c25538"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abc8ed26430"/>
            <typename><typedef-ref name="TRadio" ref="0x2abc8f236140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2abc90c240f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x2abc90c24618" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x2abc90c24618"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abc8ed28020"/>
            <typename><typedef-ref name="TMilli" ref="0x2abc8ed28378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2abc90c231d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2abc90c2e1a0" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2abc90c2e1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abc8ed28020"/>
            <typename><typedef-ref name="TMilli" ref="0x2abc8ed28378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2abc8e3b4608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2abc90c2d700"/>
        <function-ref name="clear" scoped="" ref="0x2abc90c2dde0"/>
        <function-ref name="isValid" scoped="" ref="0x2abc90c2d020"/>
        <function-ref name="set" scoped="" ref="0x2abc90c2b4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2abc8f91cdc0" loc="20:/opt/tinyos-2.1.2/tos/system/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2abc8f91cdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abc8ed28020"/>
            <typename><typedef-ref name="TMilli" ref="0x2abc8ed28378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2abc8f919968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2abc8f9230e0" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2abc8f9230e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2abc8f923430"/>
        <function-ref name="payloadLength" scoped="" ref="0x2abc8f9235b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2abc8f923740"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2abc8f9238c8"/>
        <function-ref name="headerLength" scoped="" ref="0x2abc8f923a50"/>
        <function-ref name="metadataLength" scoped="" ref="0x2abc8f923bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2abc8f922020" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2abc8f922020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2abc8f922370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2abc8f9224f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2abc8f922680"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2abc8f922808"/>
        <function-ref name="headerLength" scoped="" ref="0x2abc8f922990"/>
        <function-ref name="metadataLength" scoped="" ref="0x2abc8f922b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0x2abc8f905660" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0x2abc8f905660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2abc8f9059d0"/>
        <function-ref name="get" scoped="" ref="0x2abc8f905b58"/>
        <function-ref name="setValue" scoped="" ref="0x2abc8f905ce0"/>
        <function-ref name="set" scoped="" ref="0x2abc8f905e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2abc8f95cb78" loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2abc8f95cb78"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2abc8f95b020"/>
        <function-ref name="stopDone" scoped="" ref="0x2abc8f95b1a8"/>
        <function-ref name="start" scoped="" ref="0x2abc8f95b330"/>
        <function-ref name="stop" scoped="" ref="0x2abc8f95b4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x2abc8f9573f0" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x2abc8f9573f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2abc8f957740"/>
        <function-ref name="request" scoped="" ref="0x2abc8f9578c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2abc8f9538c8" loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2abc8f9538c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2abc8f953c18"/>
        <function-ref name="ready" scoped="" ref="0x2abc8f953da0"/>
        <function-ref name="sendDone" scoped="" ref="0x2abc8f952020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2abc8f9522a8" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2abc8f9522a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2abc8f9525f8"/>
        <function-ref name="header" scoped="" ref="0x2abc8f952780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x2abc8f95a5b8" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2abc8f95a5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2abc8f95a908"/>
        <function-ref name="turnOn" scoped="" ref="0x2abc8f95aa90"/>
        <function-ref name="setChannel" scoped="" ref="0x2abc8f95ac18"/>
        <function-ref name="done" scoped="" ref="0x2abc8f95ada0"/>
        <function-ref name="standby" scoped="" ref="0x2abc8f958020"/>
        <function-ref name="getChannel" scoped="" ref="0x2abc8f9581a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2abc8f957b10" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2abc8f957b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2abc8f957e60"/>
        <function-ref name="payloadLength" scoped="" ref="0x2abc8f956020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2abc8f9561a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2abc8f956330"/>
        <function-ref name="headerLength" scoped="" ref="0x2abc8f9564b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2abc8f956640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x2abc8f954a08" loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x2abc8f954a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2abc8f954e58"/>
        <function-ref name="turnOn" scoped="" ref="0x2abc8f953020"/>
        <function-ref name="setChannel" scoped="" ref="0x2abc8f9531a8"/>
        <function-ref name="done" scoped="" ref="0x2abc8f953330"/>
        <function-ref name="standby" scoped="" ref="0x2abc8f9534b8"/>
        <function-ref name="getChannel" scoped="" ref="0x2abc8f953640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x2abc8f9568c8" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x2abc8f9568c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x2abc8f956c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2abc8f958c98" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2abc8f958c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2abc8f957020"/>
        <function-ref name="header" scoped="" ref="0x2abc8f9571a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x2abc8f954430" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x2abc8f954430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2abc8f954780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2abc8f955020" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x2abc8f955020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2abc8f955370"/>
        <function-ref name="stopDone" scoped="" ref="0x2abc8f9554f8"/>
        <function-ref name="start" scoped="" ref="0x2abc8f955680"/>
        <function-ref name="stop" scoped="" ref="0x2abc8f955808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2abc8f9502a8" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2abc8f9502a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2abc8f9505f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2abc8f950780"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2abc8f950908"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2abc8f950a90"/>
        <function-ref name="headerLength" scoped="" ref="0x2abc8f950c18"/>
        <function-ref name="metadataLength" scoped="" ref="0x2abc8f950da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x2abc8f95a020" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x2abc8f95a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2abc8f95a370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2abc8f94f060" loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2abc8f94f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x2abc8f94f3b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x2abc8f955a90" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x2abc8f955a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2abc8f955de0"/>
        <function-ref name="cancel" scoped="" ref="0x2abc8f954020"/>
        <function-ref name="sendDone" scoped="" ref="0x2abc8f9541a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2abc8f9583f0" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2abc8f9583f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2abc8f958740"/>
        <function-ref name="ready" scoped="" ref="0x2abc8f9588c8"/>
        <function-ref name="sendDone" scoped="" ref="0x2abc8f958a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x2abc8f952a08" loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x2abc8f952a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2abc8f952d58"/>
        <function-ref name="request" scoped="" ref="0x2abc8f950020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x2abc8f95b700" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x2abc8f95b700"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2abc8f95ba50"/>
        <function-ref name="cancel" scoped="" ref="0x2abc8f95bbd8"/>
        <function-ref name="sendDone" scoped="" ref="0x2abc8f95bd60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x2abc8f947448" loc="45:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x2abc8f947448"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2abc8f947798"/>
        <function-ref name="request" scoped="" ref="0x2abc8f947920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x2abc8f9420c8" loc="49:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x2abc8f9420c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2abc8f9416a0"/>
        <function-ref name="get" scoped="" ref="0x2abc8f941190"/>
        <function-ref name="isSet" scoped="" ref="0x2abc8f942c48"/>
        <function-ref name="set" scoped="" ref="0x2abc8f941bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x2abc8f969020" loc="64:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x2abc8f969020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2abc8f969370"/>
        <function-ref name="get" scoped="" ref="0x2abc8f9694f8"/>
        <function-ref name="setValue" scoped="" ref="0x2abc8f969680"/>
        <function-ref name="set" scoped="" ref="0x2abc8f969808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2abc8f96e730" loc="61:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2abc8f96e730"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abc8ed26430"/>
            <typename><typedef-ref name="TRadio" ref="0x2abc8f236140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2abc8e3b4608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2abc8f96dc58"/>
        <function-ref name="clear" scoped="" ref="0x2abc8f96b380"/>
        <function-ref name="isValid" scoped="" ref="0x2abc8f96d578"/>
        <function-ref name="set" scoped="" ref="0x2abc8f96ba60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x2abc8f94b3e0" loc="42:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2abc8f94b3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2abc8f94b730"/>
        <function-ref name="turnOn" scoped="" ref="0x2abc8f94b8b8"/>
        <function-ref name="setChannel" scoped="" ref="0x2abc8f94ba40"/>
        <function-ref name="done" scoped="" ref="0x2abc8f94bbc8"/>
        <function-ref name="standby" scoped="" ref="0x2abc8f94bd50"/>
        <function-ref name="getChannel" scoped="" ref="0x2abc8f948020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x2abc8f968768" loc="66:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2abc8f968768"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2abc8f968ab8"/>
        <function-ref name="wait" scoped="" ref="0x2abc8f968c40"/>
        <function-ref name="cancel" scoped="" ref="0x2abc8f968dc8"/>
        <function-ref name="isFree" scoped="" ref="0x2abc8f967020"/>
        <function-ref name="getNow" scoped="" ref="0x2abc8f9671a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x2abc8f946cd0" loc="48:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x2abc8f946cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2abc8f944388"/>
        <function-ref name="get" scoped="" ref="0x2abc8f945e00"/>
        <function-ref name="isSet" scoped="" ref="0x2abc8f9458f0"/>
        <function-ref name="set" scoped="" ref="0x2abc8f944898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2abc8f947bd8" loc="46:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2abc8f947bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2abc8f946020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2abc8f9461a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2abc8f946330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2abc8f9464b8"/>
        <function-ref name="headerLength" scoped="" ref="0x2abc8f946640"/>
        <function-ref name="metadataLength" scoped="" ref="0x2abc8f9467c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2abc8f96f5c8" loc="60:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2abc8f96f5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2abc8f96fa18"/>
        <function-ref name="headerLength" scoped="" ref="0x2abc8f96fba0"/>
        <function-ref name="metadataLength" scoped="" ref="0x2abc8f96fd28"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x2abc8f96e020"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x2abc8f96e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2abc8f948bf0" loc="44:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2abc8f948bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2abc8f947020"/>
        <function-ref name="header" scoped="" ref="0x2abc8f9471a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2abc8f9734b8" loc="55:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2abc8f9734b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abc8ed26430"/>
            <typename><typedef-ref name="TRadio" ref="0x2abc8f236140"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x2abc8f236540"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2abc8f971b18"/>
        <function-ref name="fired" scoped="" ref="0x2abc8f972b90"/>
        <function-ref name="startAt" scoped="" ref="0x2abc8f971510"/>
        <function-ref name="isRunning" scoped="" ref="0x2abc8f971088"/>
        <function-ref name="getAlarm" scoped="" ref="0x2abc8f96f020"/>
        <function-ref name="start" scoped="" ref="0x2abc8f972230"/>
        <function-ref name="stop" scoped="" ref="0x2abc8f972708"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2abc8f97b458" loc="50:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2abc8f97b458"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2abc8f97aa40"/>
        <function-ref name="get" scoped="" ref="0x2abc8f97a530"/>
        <function-ref name="isSet" scoped="" ref="0x2abc8f97a020"/>
        <function-ref name="set" scoped="" ref="0x2abc8f979020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x2abc8f974220" loc="54:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2abc8f974220"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abc8ed26430"/>
            <typename><typedef-ref name="TRadio" ref="0x2abc8f236140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2abc8f974da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2abc8f9482c8" loc="43:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2abc8f9482c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2abc8f948618"/>
        <function-ref name="ready" scoped="" ref="0x2abc8f9487a0"/>
        <function-ref name="sendDone" scoped="" ref="0x2abc8f948928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x2abc8f979860" loc="51:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x2abc8f979860"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2abc8f977e30"/>
        <function-ref name="get" scoped="" ref="0x2abc8f977920"/>
        <function-ref name="isSet" scoped="" ref="0x2abc8f977410"/>
        <function-ref name="set" scoped="" ref="0x2abc8f976388"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x2abc8f969b78" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x2abc8f969b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2abc8f968020"/>
        <function-ref name="get" scoped="" ref="0x2abc8f9681a8"/>
        <function-ref name="setValue" scoped="" ref="0x2abc8f968330"/>
        <function-ref name="set" scoped="" ref="0x2abc8f9684b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x2abc8f96a378" loc="63:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x2abc8f96a378"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2abc8f96a6c8"/>
        <function-ref name="get" scoped="" ref="0x2abc8f96a850"/>
        <function-ref name="setValue" scoped="" ref="0x2abc8f96a9d8"/>
        <function-ref name="set" scoped="" ref="0x2abc8f96ab60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2abc8f9769d0" loc="52:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2abc8f9769d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2abc8f976d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x2abc8f95e2c0" loc="52:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x2abc8f95e2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2abc8f95e610"/>
        <function-ref name="request" scoped="" ref="0x2abc8f95e798"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x2abc8f97dc60" loc="74:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x2abc8f97dc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abc8ed26430"/>
            <typename><typedef-ref name="TMicro" ref="0x2abc8ed26788"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2abc8f9819f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x2abc8f996020" loc="56:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x2abc8f996020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2abc8f995608"/>
        <function-ref name="get" scoped="" ref="0x2abc8f9950f8"/>
        <function-ref name="isSet" scoped="" ref="0x2abc8f996ba0"/>
        <function-ref name="set" scoped="" ref="0x2abc8f995b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x2abc8f9b8988" loc="80:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x2abc8f9b8988"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2abc8f9b8cd8"/>
        <function-ref name="get" scoped="" ref="0x2abc8f9b8e60"/>
        <function-ref name="setValue" scoped="" ref="0x2abc8f9b7020"/>
        <function-ref name="set" scoped="" ref="0x2abc8f9b71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x2abc8f961bf0" loc="47:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2abc8f961bf0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2abc8ec996f0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2abc8ec996f0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2abc8f960020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2abc8f9b62b0" loc="83:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2abc8f9b62b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abc8ed26430"/>
            <typename><typedef-ref name="TRadio" ref="0x2abc8f236140"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2abc8e3b4608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2abc8f9b5910"/>
        <function-ref name="clear" scoped="" ref="0x2abc8f9b3020"/>
        <function-ref name="isValid" scoped="" ref="0x2abc8f9b5230"/>
        <function-ref name="set" scoped="" ref="0x2abc8f9b3700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x2abc8f989e70" loc="70:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x2abc8f989e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8f9881e8"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8f988370"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8f9884f8"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8f988680"/>
        <function-ref name="get" scoped="" ref="0x2abc8f988808"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8f988990"/>
        <function-ref name="set" scoped="" ref="0x2abc8f988b18"/>
        <function-ref name="clr" scoped="" ref="0x2abc8f988ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x2abc8f9b2ab8" loc="86:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2abc8f9b2ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2abc8f9b2e08"/>
        <function-ref name="wait" scoped="" ref="0x2abc8f9b1020"/>
        <function-ref name="cancel" scoped="" ref="0x2abc8f9b11a8"/>
        <function-ref name="isFree" scoped="" ref="0x2abc8f9b1330"/>
        <function-ref name="getNow" scoped="" ref="0x2abc8f9b14b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x2abc8f9602d0" loc="49:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2abc8f9602d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2abc8f960620"/>
        <function-ref name="turnOn" scoped="" ref="0x2abc8f9607a8"/>
        <function-ref name="setChannel" scoped="" ref="0x2abc8f960930"/>
        <function-ref name="done" scoped="" ref="0x2abc8f960ab8"/>
        <function-ref name="standby" scoped="" ref="0x2abc8f960c40"/>
        <function-ref name="getChannel" scoped="" ref="0x2abc8f960dc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x2abc8f97e020" loc="75:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2abc8f97e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abc8ed26430"/>
            <typename><typedef-ref name="TRadio" ref="0x2abc8f236140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2abc8f97eba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x2abc8f99ab48" loc="55:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x2abc8f99ab48"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2abc8f997190"/>
        <function-ref name="get" scoped="" ref="0x2abc8f999c38"/>
        <function-ref name="isSet" scoped="" ref="0x2abc8f999728"/>
        <function-ref name="set" scoped="" ref="0x2abc8f9976a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2abc8f95ea50" loc="53:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2abc8f95ea50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2abc8f95eda0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2abc8f99a020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2abc8f99a1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2abc8f99a330"/>
        <function-ref name="headerLength" scoped="" ref="0x2abc8f99a4b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2abc8f99a640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SLP_TR" ref="0x2abc8f984d00" loc="69:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x2abc8f984d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8f9890a0"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8f989228"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8f9893b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8f989538"/>
        <function-ref name="get" scoped="" ref="0x2abc8f9896c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8f989848"/>
        <function-ref name="set" scoped="" ref="0x2abc8f9899d0"/>
        <function-ref name="clr" scoped="" ref="0x2abc8f989b58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2abc8f9b9100" loc="77:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2abc8f9b9100"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2abc8f9b9450"/>
        <function-ref name="headerLength" scoped="" ref="0x2abc8f9b95d8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2abc8f9b9760"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x2abc8f9b98e8"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x2abc8f9b9a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2abc8f95f9e8" loc="51:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2abc8f95f9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2abc8f95fd38"/>
        <function-ref name="header" scoped="" ref="0x2abc8f95e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="releaseSpi" ref="0x2abc8fa21d98" loc="847:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="releaseSpi" scoped="" ref="0x2abc8fa21d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2abc8fa20170"/>
        <function-ref name="runTask" scoped="" ref="0x2abc8fa202f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2abc8f9933b0" loc="57:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2abc8f9933b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2abc8f992a40"/>
        <function-ref name="get" scoped="" ref="0x2abc8f992530"/>
        <function-ref name="isSet" scoped="" ref="0x2abc8f992020"/>
        <function-ref name="set" scoped="" ref="0x2abc8f990020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2abc8f961138" loc="46:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2abc8f961138"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2abc8ec996f0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2abc8ec996f0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2abc8f961488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2abc8f98b4f8" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x2abc8f98b4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2abc8f98b848"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2abc8f98b9d0"/>
        <function-ref name="request" scoped="" ref="0x2abc8f98bb58"/>
        <function-ref name="granted" scoped="" ref="0x2abc8f98bce0"/>
        <function-ref name="isOwner" scoped="" ref="0x2abc8f98be68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SELN" ref="0x2abc8f98c130" loc="64:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x2abc8f98c130"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8f98c580"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8f98c708"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8f98c890"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8f98ca18"/>
        <function-ref name="get" scoped="" ref="0x2abc8f98cba0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8f98cd28"/>
        <function-ref name="set" scoped="" ref="0x2abc8f98b020"/>
        <function-ref name="clr" scoped="" ref="0x2abc8f98b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x2abc8f990860" loc="58:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x2abc8f990860"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2abc8f98fe30"/>
        <function-ref name="get" scoped="" ref="0x2abc8f98f920"/>
        <function-ref name="isSet" scoped="" ref="0x2abc8f98f410"/>
        <function-ref name="set" scoped="" ref="0x2abc8f98e388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2abc8f95f0c0" loc="50:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2abc8f95f0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2abc8f95f410"/>
        <function-ref name="ready" scoped="" ref="0x2abc8f95f598"/>
        <function-ref name="sendDone" scoped="" ref="0x2abc8f95f720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IRQ" ref="0x2abc8f97f5e8" loc="72:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x2abc8f97f5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2abc8f97f938"/>
        <function-ref name="disable" scoped="" ref="0x2abc8f97fac0"/>
        <function-ref name="captured" scoped="" ref="0x2abc8f97fc48"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2abc8f97fdd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FastSpiByte" ref="0x2abc8f9841f0" loc="67:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x2abc8f9841f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2abc8f984540"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2abc8f9846c8"/>
        <function-ref name="splitRead" scoped="" ref="0x2abc8f984850"/>
        <function-ref name="write" scoped="" ref="0x2abc8f9849d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x2abc8f9b7518" loc="81:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x2abc8f9b7518"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2abc8f9b7868"/>
        <function-ref name="get" scoped="" ref="0x2abc8f9b79f0"/>
        <function-ref name="setValue" scoped="" ref="0x2abc8f9b7b78"/>
        <function-ref name="set" scoped="" ref="0x2abc8f9b7d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x2abc8f9b9e10" loc="79:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x2abc8f9b9e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2abc8f9b81a8"/>
        <function-ref name="get" scoped="" ref="0x2abc8f9b8330"/>
        <function-ref name="setValue" scoped="" ref="0x2abc8f9b84b8"/>
        <function-ref name="set" scoped="" ref="0x2abc8f9b8640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2abc8f98e9d0" loc="59:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2abc8f98e9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2abc8f98ed20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x2abc8f9b2020" loc="85:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x2abc8f9b2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x2abc8f9b2370"/>
        <function-ref name="suspend" scoped="" ref="0x2abc8f9b24f8"/>
        <function-ref name="resume" scoped="" ref="0x2abc8f9b2680"/>
        <function-ref name="run" scoped="" ref="0x2abc8f9b2808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x2abc8fa5d338" loc="46:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x2abc8fa5d338"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8fa5d688"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8fa5d810"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8fa5d998"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8fa5db20"/>
        <function-ref name="get" scoped="" ref="0x2abc8fa5dca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8fa5de30"/>
        <function-ref name="set" scoped="" ref="0x2abc8fa5c020"/>
        <function-ref name="clr" scoped="" ref="0x2abc8fa5c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SLP_TR" ref="0x2abc8fa5e140" loc="45:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x2abc8fa5e140"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8fa5e490"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8fa5e618"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8fa5e7a0"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8fa5e928"/>
        <function-ref name="get" scoped="" ref="0x2abc8fa5eab0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8fa5ec38"/>
        <function-ref name="set" scoped="" ref="0x2abc8fa5edc0"/>
        <function-ref name="clr" scoped="" ref="0x2abc8fa5d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2abc8fa5b2e0" loc="49:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2abc8fa5b2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abc8ed26430"/>
            <typename><typedef-ref name="TRadio" ref="0x2abc8f236140"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2abc8fa58928"/>
        <function-ref name="fired" scoped="" ref="0x2abc8fa5a9e8"/>
        <function-ref name="startAt" scoped="" ref="0x2abc8fa58320"/>
        <function-ref name="isRunning" scoped="" ref="0x2abc8fa5ae70"/>
        <function-ref name="getAlarm" scoped="" ref="0x2abc8fa58db0"/>
        <function-ref name="start" scoped="" ref="0x2abc8fa5a088"/>
        <function-ref name="stop" scoped="" ref="0x2abc8fa5a560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiResource" ref="0x2abc8fa60990" loc="42:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x2abc8fa60990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2abc8fa60ce0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2abc8fa60e68"/>
        <function-ref name="request" scoped="" ref="0x2abc8fa5f020"/>
        <function-ref name="granted" scoped="" ref="0x2abc8fa5f1a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2abc8fa5f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SELN" ref="0x2abc8fa63710" loc="41:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x2abc8fa63710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8fa63a60"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8fa63be8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8fa63d70"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8fa60020"/>
        <function-ref name="get" scoped="" ref="0x2abc8fa601a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8fa60330"/>
        <function-ref name="set" scoped="" ref="0x2abc8fa604b8"/>
        <function-ref name="clr" scoped="" ref="0x2abc8fa60640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x2abc8fa5c4c0" loc="48:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x2abc8fa5c4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2abc8fa5c810"/>
        <function-ref name="disable" scoped="" ref="0x2abc8fa5c998"/>
        <function-ref name="captured" scoped="" ref="0x2abc8fa5cb20"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2abc8fa5cca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2abc8fa5f5e8" loc="43:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x2abc8fa5f5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2abc8fa5f938"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2abc8fa5fac0"/>
        <function-ref name="splitRead" scoped="" ref="0x2abc8fa5fc48"/>
        <function-ref name="write" scoped="" ref="0x2abc8fa5fdd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x2abc8fa98438" loc="50:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2abc8fa98438"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abc8ed26430"/>
            <typename><typedef-ref name="TRadio" ref="0x2abc8f236140"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2abc8fa97020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortCLKM" ref="0x2abc8fa87c18" loc="46:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortCLKM" scoped="" ref="0x2abc8fa87c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8fa86020"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8fa861a8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8fa86330"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8fa864b8"/>
        <function-ref name="get" scoped="" ref="0x2abc8fa86640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8fa867c8"/>
        <function-ref name="set" scoped="" ref="0x2abc8fa86950"/>
        <function-ref name="clr" scoped="" ref="0x2abc8fa86ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Capture" ref="0x2abc8fa89540" loc="45:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2abc8fa89540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2abc8fa876f8"/>
        <function-ref name="test" scoped="" ref="0x2abc8fa90db8"/>
        <function-ref name="get" scoped="" ref="0x2abc8fa920f8"/>
        <function-ref name="captured" scoped="" ref="0x2abc8fa92a58"/>
        <function-ref name="reset" scoped="" ref="0x2abc8fa90020"/>
        <function-ref name="isOn" scoped="" ref="0x2abc8fa87270"/>
        <function-ref name="set" scoped="" ref="0x2abc8fa92580"/>
        <function-ref name="start" scoped="" ref="0x2abc8fa904a8"/>
        <function-ref name="stop" scoped="" ref="0x2abc8fa90930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortIRQ" ref="0x2abc8fa86e08" loc="47:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortIRQ" scoped="" ref="0x2abc8fa86e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8fa851a8"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8fa85330"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8fa854b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8fa85640"/>
        <function-ref name="get" scoped="" ref="0x2abc8fa857c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8fa85950"/>
        <function-ref name="set" scoped="" ref="0x2abc8fa85ad8"/>
        <function-ref name="clr" scoped="" ref="0x2abc8fa85c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2abc8fa94870" loc="40:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2abc8fa94870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2abc8fa94bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x2abc8fa97cd8" loc="39:/opt/tinyos-2.1.2/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x2abc8fa97cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2abc8fa940a0"/>
        <function-ref name="disable" scoped="" ref="0x2abc8fa94228"/>
        <function-ref name="captured" scoped="" ref="0x2abc8fa943b0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2abc8fa94538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2abc8faad1d8" loc="84:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x2abc8faad1d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2abc8faad528"/>
        <function-ref name="sendDone" scoped="" ref="0x2abc8faad6b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2abc8fab5388" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x2abc8fab5388"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2abc8fab56d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2abc8fa95cd0" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2abc8fa95cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2abc8fab90a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2abc8fab59d0" loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x2abc8fab59d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2abc8fab5d20"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2abc8fab8020"/>
        <function-ref name="splitRead" scoped="" ref="0x2abc8fab81a8"/>
        <function-ref name="write" scoped="" ref="0x2abc8fab8330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2abc8faade80" loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2abc8faade80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2abc8fab71f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2abc8fab7380"/>
        <function-ref name="request" scoped="" ref="0x2abc8fab7508"/>
        <function-ref name="granted" scoped="" ref="0x2abc8fab7690"/>
        <function-ref name="isOwner" scoped="" ref="0x2abc8fab7818"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x2abc8faf4b58" loc="296:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x2abc8faf4b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2abc8faf3020"/>
        <function-ref name="runTask" scoped="" ref="0x2abc8faf31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2abc8faa9120" loc="94:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x2abc8faa9120"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2abc8faa9470"/>
        <function-ref name="sendDone" scoped="" ref="0x2abc8faa95f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x2abc8fad33c8" loc="99:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x2abc8fad33c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2abc8fad3718"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2abc8fad38a0"/>
        <function-ref name="request" scoped="" ref="0x2abc8fad3a28"/>
        <function-ref name="granted" scoped="" ref="0x2abc8fad3bb0"/>
        <function-ref name="isOwner" scoped="" ref="0x2abc8fad3d38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2abc8faaa020" loc="92:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x2abc8faaa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2abc8faaa370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2abc8fab4a18" loc="91:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2abc8fab4a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2abc8fab4d68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x2abc8fad4150" loc="98:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x2abc8fad4150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x2abc8fad44a0"/>
        <function-ref name="sleep" scoped="" ref="0x2abc8faa6950"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x2abc8fad47b0"/>
        <function-ref name="dataReady" scoped="" ref="0x2abc8faa6ad8"/>
        <function-ref name="initMaster" scoped="" ref="0x2abc8fad4ac0"/>
        <function-ref name="setMasterBit" scoped="" ref="0x2abc8fad4c48"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2abc8fad4dd0"/>
        <function-ref name="read" scoped="" ref="0x2abc8faa7020"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x2abc8faa71a8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2abc8faa7330"/>
        <function-ref name="setClock" scoped="" ref="0x2abc8faa74b8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2abc8faa7640"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x2abc8faa77c8"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x2abc8faa7a50"/>
        <function-ref name="setDataOrder" scoped="" ref="0x2abc8faa7bd8"/>
        <function-ref name="write" scoped="" ref="0x2abc8faa7d60"/>
        <function-ref name="enableSpi" scoped="" ref="0x2abc8faa6020"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x2abc8faa61a8"/>
        <function-ref name="getClockPhase" scoped="" ref="0x2abc8faa6330"/>
        <function-ref name="getClock" scoped="" ref="0x2abc8faa64b8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2abc8faa6640"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x2abc8fad4628"/>
        <function-ref name="setClockPhase" scoped="" ref="0x2abc8fad4938"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x2abc8faa67c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2abc8faaa628" loc="93:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x2abc8faaa628"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2abc8faaa978"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2abc8faaab00"/>
        <function-ref name="splitRead" scoped="" ref="0x2abc8faaac88"/>
        <function-ref name="write" scoped="" ref="0x2abc8faaae10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2abc8faa9d88" loc="95:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2abc8faa9d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2abc8faa8170"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2abc8faa82f8"/>
        <function-ref name="request" scoped="" ref="0x2abc8faa8480"/>
        <function-ref name="granted" scoped="" ref="0x2abc8faa8608"/>
        <function-ref name="isOwner" scoped="" ref="0x2abc8faa8790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2abc8fad2020" loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2abc8fad2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2abc8fad2370"/>
        <function-ref name="userId" scoped="" ref="0x2abc8fad24f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x2abc8fad27c8" loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2abc8fad27c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2abc8fad2b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x2abc8fb0c020" loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x2abc8fb0c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x2abc8fb0c370"/>
        <function-ref name="sleep" scoped="" ref="0x2abc8fb0a7c8"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x2abc8fb0c680"/>
        <function-ref name="dataReady" scoped="" ref="0x2abc8fb0a950"/>
        <function-ref name="initMaster" scoped="" ref="0x2abc8fb0c990"/>
        <function-ref name="setMasterBit" scoped="" ref="0x2abc8fb0cb18"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2abc8fb0cca0"/>
        <function-ref name="read" scoped="" ref="0x2abc8fb0ce28"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x2abc8fb0b020"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2abc8fb0b1a8"/>
        <function-ref name="setClock" scoped="" ref="0x2abc8fb0b330"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2abc8fb0b4b8"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x2abc8fb0b640"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x2abc8fb0b8c8"/>
        <function-ref name="setDataOrder" scoped="" ref="0x2abc8fb0ba50"/>
        <function-ref name="write" scoped="" ref="0x2abc8fb0bbd8"/>
        <function-ref name="enableSpi" scoped="" ref="0x2abc8fb0bd60"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x2abc8fb0a020"/>
        <function-ref name="getClockPhase" scoped="" ref="0x2abc8fb0a1a8"/>
        <function-ref name="getClock" scoped="" ref="0x2abc8fb0a330"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2abc8fb0a4b8"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x2abc8fb0c4f8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x2abc8fb0c808"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x2abc8fb0a640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x2abc8fb41190" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x2abc8fb41190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8fb414e0"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8fb41668"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8fb417f0"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8fb41978"/>
        <function-ref name="get" scoped="" ref="0x2abc8fb41b00"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8fb41c88"/>
        <function-ref name="set" scoped="" ref="0x2abc8fb41e10"/>
        <function-ref name="clr" scoped="" ref="0x2abc8fb40020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x2abc8fb03de0" loc="79:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x2abc8fb03de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8fb02170"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8fb022f8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8fb02480"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8fb02608"/>
        <function-ref name="get" scoped="" ref="0x2abc8fb02790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8fb02918"/>
        <function-ref name="set" scoped="" ref="0x2abc8fb02aa0"/>
        <function-ref name="clr" scoped="" ref="0x2abc8fb02c28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x2abc8fb43c70" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x2abc8fb43c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8fb03020"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8fb031a8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8fb03330"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8fb034b8"/>
        <function-ref name="get" scoped="" ref="0x2abc8fb03640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8fb037c8"/>
        <function-ref name="set" scoped="" ref="0x2abc8fb03950"/>
        <function-ref name="clr" scoped="" ref="0x2abc8fb03ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x2abc8fb43438" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x2abc8fb43438"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2abc8fb43788"/>
        <function-ref name="stop" scoped="" ref="0x2abc8fb43910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x2abc8fb40350" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x2abc8fb40350"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2abc8fb406a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x2abc8fb09dc0" loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x2abc8fb09dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x2abc8fb06170"/>
        <function-ref name="sleep" scoped="" ref="0x2abc8fb04640"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x2abc8fb06480"/>
        <function-ref name="dataReady" scoped="" ref="0x2abc8fb047c8"/>
        <function-ref name="initMaster" scoped="" ref="0x2abc8fb06790"/>
        <function-ref name="setMasterBit" scoped="" ref="0x2abc8fb06918"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2abc8fb06aa0"/>
        <function-ref name="read" scoped="" ref="0x2abc8fb06c28"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x2abc8fb06db0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2abc8fb05020"/>
        <function-ref name="setClock" scoped="" ref="0x2abc8fb051a8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2abc8fb05330"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x2abc8fb054b8"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x2abc8fb05740"/>
        <function-ref name="setDataOrder" scoped="" ref="0x2abc8fb058c8"/>
        <function-ref name="write" scoped="" ref="0x2abc8fb05a50"/>
        <function-ref name="enableSpi" scoped="" ref="0x2abc8fb05bd8"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x2abc8fb05d60"/>
        <function-ref name="getClockPhase" scoped="" ref="0x2abc8fb04020"/>
        <function-ref name="getClock" scoped="" ref="0x2abc8fb041a8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2abc8fb04330"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x2abc8fb062f8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x2abc8fb06608"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x2abc8fb044b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x2abc8fb42020" loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x2abc8fb42020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2abc8fb42370"/>
        <function-ref name="isInput" scoped="" ref="0x2abc8fb424f8"/>
        <function-ref name="toggle" scoped="" ref="0x2abc8fb42680"/>
        <function-ref name="isOutput" scoped="" ref="0x2abc8fb42808"/>
        <function-ref name="get" scoped="" ref="0x2abc8fb42990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2abc8fb42b18"/>
        <function-ref name="set" scoped="" ref="0x2abc8fb42ca0"/>
        <function-ref name="clr" scoped="" ref="0x2abc8fb42e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2abc8fb81510" loc="86:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2abc8fb81510"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2abc8fb81880"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2abc8fb81a08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2abc8fb80550" loc="89:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2abc8fb80550"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2abc8fb808c0"/>
        <function-ref name="configure" scoped="" ref="0x2abc8fb80a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2abc8fb82748" loc="85:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2abc8fb82748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2abc8fb82ab8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2abc8fb82c40"/>
        <function-ref name="request" scoped="" ref="0x2abc8fb82dc8"/>
        <function-ref name="granted" scoped="" ref="0x2abc8fb81020"/>
        <function-ref name="isOwner" scoped="" ref="0x2abc8fb811a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2abc8fb81c50" loc="87:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2abc8fb81c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2abc8fb80020"/>
        <function-ref name="userId" scoped="" ref="0x2abc8fb801a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2abc90c721a8" loc="44:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2abc90c721a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2abc90c724f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2abc90c72780" loc="45:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x2abc90c72780"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2abc90c72ad0"/>
        <function-ref name="isEmpty" scoped="" ref="0x2abc90c72c58"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2abc90c72de0"/>
        <function-ref name="dequeue" scoped="" ref="0x2abc90c71020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2abc90c6f388" loc="52:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2abc90c6f388"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2abc90c6f6f8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2abc90c6f880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2abc90c6e3e8" loc="56:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2abc90c6e3e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2abc90c6e758"/>
        <function-ref name="configure" scoped="" ref="0x2abc90c6e8e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2abc90c6eb68" loc="57:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2abc90c6eb68"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2abc90c6c020"/>
        <function-ref name="isEmpty" scoped="" ref="0x2abc90c6c1a8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2abc90c6c330"/>
        <function-ref name="dequeue" scoped="" ref="0x2abc90c6c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2abc90c70590" loc="51:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2abc90c70590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2abc90c70900"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2abc90c70a88"/>
        <function-ref name="request" scoped="" ref="0x2abc90c70c10"/>
        <function-ref name="granted" scoped="" ref="0x2abc90c70d98"/>
        <function-ref name="isOwner" scoped="" ref="0x2abc90c6f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2abc90c6fac8" loc="53:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2abc90c6fac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2abc90c6fe18"/>
        <function-ref name="userId" scoped="" ref="0x2abc90c6e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2abc90c6c780" loc="69:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2abc90c6c780"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2abc90c6cad0"/>
        <function-ref name="runTask" scoped="" ref="0x2abc90c6cc58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2abc8fb675e8" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2abc8fb675e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x2abc8fb67938"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2abc8fb67ac0"/>
        <function-ref name="getControlA" scoped="" ref="0x2abc8fb67c48"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2abc8fb67dd0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2abc8fb70020"/>
        <function-ref name="setControlB" scoped="" ref="0x2abc8fb701a8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2abc8fb70330"/>
        <function-ref name="getControlB" scoped="" ref="0x2abc8fb704b8"/>
        <function-ref name="setControlC" scoped="" ref="0x2abc8fb70640"/>
        <function-ref name="setControlA" scoped="" ref="0x2abc8fb707c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2abc8fb70ca0" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2abc8fb70ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2abc8fbabe20"/>
        <function-ref name="test" scoped="" ref="0x2abc8fbab510"/>
        <function-ref name="get" scoped="" ref="0x2abc8fb6f858"/>
        <function-ref name="captured" scoped="" ref="0x2abc8fbac238"/>
        <function-ref name="reset" scoped="" ref="0x2abc8fbac710"/>
        <function-ref name="isOn" scoped="" ref="0x2abc8fbab998"/>
        <function-ref name="set" scoped="" ref="0x2abc8fb6fce0"/>
        <function-ref name="start" scoped="" ref="0x2abc8fbacb98"/>
        <function-ref name="stop" scoped="" ref="0x2abc8fbab088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2abc8fba9a20" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2abc8fba9a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2abc8fba5270"/>
        <function-ref name="fired" scoped="" ref="0x2abc8fba7020"/>
        <function-ref name="get" scoped="" ref="0x2abc8fba85d8"/>
        <function-ref name="reset" scoped="" ref="0x2abc8fba74a8"/>
        <function-ref name="isOn" scoped="" ref="0x2abc8fba56f8"/>
        <function-ref name="set" scoped="" ref="0x2abc8fba8a60"/>
        <function-ref name="start" scoped="" ref="0x2abc8fba7930"/>
        <function-ref name="stop" scoped="" ref="0x2abc8fba7db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2abc8fb786e0" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2abc8fb786e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2abc8fb72930"/>
        <function-ref name="test" scoped="" ref="0x2abc8fb72020"/>
        <function-ref name="get" scoped="" ref="0x2abc8fb753a8"/>
        <function-ref name="setScale" scoped="" ref="0x2abc8fb72db8"/>
        <function-ref name="getScale" scoped="" ref="0x2abc8fb712f0"/>
        <function-ref name="reset" scoped="" ref="0x2abc8fb741f8"/>
        <function-ref name="overflow" scoped="" ref="0x2abc8fb75d08"/>
        <function-ref name="isOn" scoped="" ref="0x2abc8fb724a8"/>
        <function-ref name="set" scoped="" ref="0x2abc8fb75830"/>
        <function-ref name="start" scoped="" ref="0x2abc8fb74680"/>
        <function-ref name="stop" scoped="" ref="0x2abc8fb74b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2abc8fb9dc90" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2abc8fb9dc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x2abc8fb9c020"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2abc8fb9c1a8"/>
        <function-ref name="getControlA" scoped="" ref="0x2abc8fb9c330"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2abc8fb9c4b8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2abc8fb9c640"/>
        <function-ref name="setControlB" scoped="" ref="0x2abc8fb9c7c8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2abc8fb9c950"/>
        <function-ref name="getControlB" scoped="" ref="0x2abc8fb9cad8"/>
        <function-ref name="setControlC" scoped="" ref="0x2abc8fb9cc60"/>
        <function-ref name="setControlA" scoped="" ref="0x2abc8fb9cde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x2abc8fb97c48" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x2abc8fb97c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2abc8fb934a8"/>
        <function-ref name="fired" scoped="" ref="0x2abc8fb941d0"/>
        <function-ref name="get" scoped="" ref="0x2abc8fb96820"/>
        <function-ref name="reset" scoped="" ref="0x2abc8fb94658"/>
        <function-ref name="isOn" scoped="" ref="0x2abc8fb93930"/>
        <function-ref name="set" scoped="" ref="0x2abc8fb96ca8"/>
        <function-ref name="start" scoped="" ref="0x2abc8fb94ae0"/>
        <function-ref name="stop" scoped="" ref="0x2abc8fb93020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2abc8fb9b350" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2abc8fb9b350"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2abc8fb97580"/>
        <function-ref name="test" scoped="" ref="0x2abc8fb98c20"/>
        <function-ref name="get" scoped="" ref="0x2abc8fb9a020"/>
        <function-ref name="captured" scoped="" ref="0x2abc8fb9a980"/>
        <function-ref name="reset" scoped="" ref="0x2abc8fb9ae58"/>
        <function-ref name="isOn" scoped="" ref="0x2abc8fb970f8"/>
        <function-ref name="set" scoped="" ref="0x2abc8fb9a4a8"/>
        <function-ref name="start" scoped="" ref="0x2abc8fb98310"/>
        <function-ref name="stop" scoped="" ref="0x2abc8fb98798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x2abc8fb92020" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x2abc8fb92020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2abc8fb8f7a8"/>
        <function-ref name="fired" scoped="" ref="0x2abc8fb90560"/>
        <function-ref name="get" scoped="" ref="0x2abc8fb92ba0"/>
        <function-ref name="reset" scoped="" ref="0x2abc8fb909e8"/>
        <function-ref name="isOn" scoped="" ref="0x2abc8fb8fc30"/>
        <function-ref name="set" scoped="" ref="0x2abc8fb90088"/>
        <function-ref name="start" scoped="" ref="0x2abc8fb90e70"/>
        <function-ref name="stop" scoped="" ref="0x2abc8fb8f320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x2abc8fb8e360" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x2abc8fb8e360"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2abc8fb8bc20"/>
        <function-ref name="fired" scoped="" ref="0x2abc8fb8d980"/>
        <function-ref name="get" scoped="" ref="0x2abc8fb8d020"/>
        <function-ref name="reset" scoped="" ref="0x2abc8fb8de08"/>
        <function-ref name="isOn" scoped="" ref="0x2abc8fb8a0f8"/>
        <function-ref name="set" scoped="" ref="0x2abc8fb8d4a8"/>
        <function-ref name="start" scoped="" ref="0x2abc8fb8b310"/>
        <function-ref name="stop" scoped="" ref="0x2abc8fb8b798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2abc8fba4be0" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2abc8fba4be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2abc8fb9edb8"/>
        <function-ref name="test" scoped="" ref="0x2abc8fb9e4a8"/>
        <function-ref name="get" scoped="" ref="0x2abc8fba17a0"/>
        <function-ref name="setScale" scoped="" ref="0x2abc8fb9d270"/>
        <function-ref name="getScale" scoped="" ref="0x2abc8fb9d748"/>
        <function-ref name="reset" scoped="" ref="0x2abc8fb9f5b8"/>
        <function-ref name="overflow" scoped="" ref="0x2abc8fb9f130"/>
        <function-ref name="isOn" scoped="" ref="0x2abc8fb9e930"/>
        <function-ref name="set" scoped="" ref="0x2abc8fba1c28"/>
        <function-ref name="start" scoped="" ref="0x2abc8fb9fa40"/>
        <function-ref name="stop" scoped="" ref="0x2abc8fb9e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2abc8fc71b68" loc="30:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="HplRF230C.AlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2abc8fc71b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abc8ed26430"/>
            <typename><typedef-ref name="TOne" ref="0x2abc8ed6b9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2abc8fc6e238"/>
        <function-ref name="fired" scoped="" ref="0x2abc8fc6f2b0"/>
        <function-ref name="startAt" scoped="" ref="0x2abc8fc6fbc0"/>
        <function-ref name="isRunning" scoped="" ref="0x2abc8fc6f738"/>
        <function-ref name="getAlarm" scoped="" ref="0x2abc8fc6e6c0"/>
        <function-ref name="start" scoped="" ref="0x2abc8fc708f8"/>
        <function-ref name="stop" scoped="" ref="0x2abc8fc70dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2abc8fc28dc0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2abc8fc28dc0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2abc8ec99388"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2abc8ec99388"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2abc8fc27170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2abc8fc27540" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2abc8fc27540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2abc8fc186f8"/>
        <function-ref name="test" scoped="" ref="0x2abc8fc19db8"/>
        <function-ref name="get" scoped="" ref="0x2abc8fc1a0f8"/>
        <function-ref name="setScale" scoped="" ref="0x2abc8fc18b80"/>
        <function-ref name="getScale" scoped="" ref="0x2abc8fc5e088"/>
        <function-ref name="reset" scoped="" ref="0x2abc8fc19020"/>
        <function-ref name="overflow" scoped="" ref="0x2abc8fc1aa58"/>
        <function-ref name="isOn" scoped="" ref="0x2abc8fc18270"/>
        <function-ref name="set" scoped="" ref="0x2abc8fc1a580"/>
        <function-ref name="start" scoped="" ref="0x2abc8fc194a8"/>
        <function-ref name="stop" scoped="" ref="0x2abc8fc19930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2abc90ccb750" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2abc90ccb750"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x2abc8ec99020"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x2abc8ec99020"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abc8ed26430"/>
            <typename><typedef-ref name="TOne" ref="0x2abc8ed6b9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2abc90cc8020"/>
        <function-ref name="fired" scoped="" ref="0x2abc90cc9020"/>
        <function-ref name="startAt" scoped="" ref="0x2abc90cc9930"/>
        <function-ref name="isRunning" scoped="" ref="0x2abc90cc94a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2abc90cc84a8"/>
        <function-ref name="start" scoped="" ref="0x2abc90cca578"/>
        <function-ref name="stop" scoped="" ref="0x2abc90ccaa50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x2abc90cc3a80" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x2abc90cc3a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2abc90cbf270"/>
        <function-ref name="fired" scoped="" ref="0x2abc90cc0020"/>
        <function-ref name="get" scoped="" ref="0x2abc90cc1658"/>
        <function-ref name="reset" scoped="" ref="0x2abc90cc04a8"/>
        <function-ref name="isOn" scoped="" ref="0x2abc90cbf6f8"/>
        <function-ref name="set" scoped="" ref="0x2abc90cc1ae0"/>
        <function-ref name="start" scoped="" ref="0x2abc90cc0930"/>
        <function-ref name="stop" scoped="" ref="0x2abc90cc0db8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x2abc90cc89c8" loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x2abc90cc89c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2abc90cc4b80"/>
        <function-ref name="test" scoped="" ref="0x2abc90cc4270"/>
        <function-ref name="get" scoped="" ref="0x2abc90cc6598"/>
        <function-ref name="setScale" scoped="" ref="0x2abc90cc3088"/>
        <function-ref name="getScale" scoped="" ref="0x2abc90cc3560"/>
        <function-ref name="reset" scoped="" ref="0x2abc90cc54a8"/>
        <function-ref name="overflow" scoped="" ref="0x2abc90cc5020"/>
        <function-ref name="isOn" scoped="" ref="0x2abc90cc46f8"/>
        <function-ref name="set" scoped="" ref="0x2abc90cc6a20"/>
        <function-ref name="start" scoped="" ref="0x2abc90cc5930"/>
        <function-ref name="stop" scoped="" ref="0x2abc90cc5db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2abc8fc6a400" loc="39:/opt/tinyos-2.1.2/tos/platforms/iris/LocalTimeMicroC.nc">
      <component-ref qname="LocalTimeMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2abc8fc6a400"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abc8ed26430"/>
            <typename><typedef-ref name="TMicro" ref="0x2abc8ed26788"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2abc8fc68020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2abc8fc65108" loc="24:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2abc8fc65108"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abc8ed26430"/>
            <typename><typedef-ref name="TOne" ref="0x2abc8ed6b9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2abc8fc65e58"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2abc8fc64798"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2abc8fc64310"/>
        <function-ref name="overflow" scoped="" ref="0x2abc8fc64c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2abc8fc62e08" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2abc8fc62e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abc8ed26430"/>
            <typename><typedef-ref name="TOne" ref="0x2abc8ed6b9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2abc8fc61be8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2abc8fc98548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2abc8fc980c0"/>
        <function-ref name="overflow" scoped="" ref="0x2abc8fc989d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2abc8fc96020" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2abc8fc96020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2abc8fc920f8"/>
        <function-ref name="test" scoped="" ref="0x2abc8fc947a8"/>
        <function-ref name="get" scoped="" ref="0x2abc8fc96ba0"/>
        <function-ref name="setScale" scoped="" ref="0x2abc8fc92580"/>
        <function-ref name="getScale" scoped="" ref="0x2abc8fc92a58"/>
        <function-ref name="reset" scoped="" ref="0x2abc8fc959e8"/>
        <function-ref name="overflow" scoped="" ref="0x2abc8fc95560"/>
        <function-ref name="isOn" scoped="" ref="0x2abc8fc94c30"/>
        <function-ref name="set" scoped="" ref="0x2abc8fc95088"/>
        <function-ref name="start" scoped="" ref="0x2abc8fc95e70"/>
        <function-ref name="stop" scoped="" ref="0x2abc8fc94320"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2abc8fcbc450" loc="63:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x2abc8fcbc450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abc8ed26430"/>
            <typename><typedef-ref name="TMicro" ref="0x2abc8ed26788"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2abc8fcbb1d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2abc8fcbbae0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2abc8fcbb658"/>
        <function-ref name="overflow" scoped="" ref="0x2abc8fcb9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2abc8fc8e270" loc="62:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2abc8fc8e270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abc8ed26430"/>
            <typename><typedef-ref name="TMicro" ref="0x2abc8ed26788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2abc8e3b4608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2abc8fcbd020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2abc8fcbd930"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2abc8fcbd4a8"/>
        <function-ref name="overflow" scoped="" ref="0x2abc8fcbddb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2abc8fcb8c38" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2abc8fcb8c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abc8ed26430"/>
            <typename><typedef-ref name="TMicro" ref="0x2abc8ed26788"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2abc8fcb7820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2abc8fcb7e48" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2abc8fcb7e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abc8ed26430"/>
            <typename><typedef-ref name="TMicro" ref="0x2abc8ed26788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2abc8e3b4608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2abc8fcb6be8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2abc8fcb4548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2abc8fcb40c0"/>
        <function-ref name="overflow" scoped="" ref="0x2abc8fcb49d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x2abc8fcac3c0" loc="36:/opt/tinyos-2.1.2/tos/platforms/micaz/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x2abc8fcac3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2abc8ed26430"/>
            <typename><typedef-ref name="TMicro" ref="0x2abc8ed26788"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2abc8fcab150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2abc8fda3390" loc="49:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="CMCC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2abc8fda3390"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2abc8fda36e0"/>
        <function-ref name="getPayload" scoped="" ref="0x2abc8fda3868"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2abc8fda39f0"/>
        <function-ref name="cancel" scoped="" ref="0x2abc8fda3b78"/>
        <function-ref name="sendDone" scoped="" ref="0x2abc8fda3d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2abc8fda2020" loc="50:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="CMCC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2abc8fda2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2abc8fda2370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2abc8fda24f8"/>
        <function-ref name="getPayload" scoped="" ref="0x2abc8fda2680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2abc8fda2808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2abc8fda2990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2abc8fda2bd8" loc="51:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="CMCC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2abc8fda2bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2abc8fda1020"/>
        <function-ref name="source" scoped="" ref="0x2abc8fda11a8"/>
        <function-ref name="address" scoped="" ref="0x2abc8fda1330"/>
        <function-ref name="destination" scoped="" ref="0x2abc8fda14b8"/>
        <function-ref name="setSource" scoped="" ref="0x2abc8fda1640"/>
        <function-ref name="setDestination" scoped="" ref="0x2abc8fda17c8"/>
        <function-ref name="type" scoped="" ref="0x2abc8fda1950"/>
        <function-ref name="setType" scoped="" ref="0x2abc8fda1ad8"/>
        <function-ref name="isForMe" scoped="" ref="0x2abc8fda1c60"/>
        <function-ref name="setGroup" scoped="" ref="0x2abc8fda1de8"/>
        <function-ref name="localGroup" scoped="" ref="0x2abc8fda0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2abc8fda02a8" loc="52:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="CMCC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2abc8fda02a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2abc8fda05f8"/>
        <function-ref name="noAck" scoped="" ref="0x2abc8fda0780"/>
        <function-ref name="wasAcked" scoped="" ref="0x2abc8fda0908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2abc90d1a398" loc="49:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CMCC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2abc90d1a398"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2abc90d1a6e8"/>
        <function-ref name="getPayload" scoped="" ref="0x2abc90d1a870"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2abc90d1a9f8"/>
        <function-ref name="cancel" scoped="" ref="0x2abc90d1ab80"/>
        <function-ref name="sendDone" scoped="" ref="0x2abc90d1ad08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2abc90d19020" loc="50:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CMCC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2abc90d19020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2abc90d19370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2abc90d194f8"/>
        <function-ref name="getPayload" scoped="" ref="0x2abc90d19680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2abc90d19808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2abc90d19990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2abc90d19bd8" loc="51:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CMCC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2abc90d19bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2abc90d18020"/>
        <function-ref name="source" scoped="" ref="0x2abc90d181a8"/>
        <function-ref name="address" scoped="" ref="0x2abc90d18330"/>
        <function-ref name="destination" scoped="" ref="0x2abc90d184b8"/>
        <function-ref name="setSource" scoped="" ref="0x2abc90d18640"/>
        <function-ref name="setDestination" scoped="" ref="0x2abc90d187c8"/>
        <function-ref name="type" scoped="" ref="0x2abc90d18950"/>
        <function-ref name="setType" scoped="" ref="0x2abc90d18ad8"/>
        <function-ref name="isForMe" scoped="" ref="0x2abc90d18c60"/>
        <function-ref name="setGroup" scoped="" ref="0x2abc90d18de8"/>
        <function-ref name="localGroup" scoped="" ref="0x2abc90d17020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2abc90d172a8" loc="52:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CMCC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2abc90d172a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2abc90d175f8"/>
        <function-ref name="noAck" scoped="" ref="0x2abc90d17780"/>
        <function-ref name="wasAcked" scoped="" ref="0x2abc90d17908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2abc90d0e9a8" loc="44:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CMCC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2abc90d0e9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2abc90d0ecf8"/>
        <function-ref name="getPayload" scoped="" ref="0x2abc90d0ee80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2abc90d0d030"/>
        <function-ref name="cancel" scoped="" ref="0x2abc90d0d1b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2abc90d0d340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2abc90d0d5e8" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CMCC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2abc90d0d5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2abc90d0d938"/>
        <function-ref name="getPayload" scoped="" ref="0x2abc90d0dac0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2abc90d0dc48"/>
        <function-ref name="cancel" scoped="" ref="0x2abc90d0ddd0"/>
        <function-ref name="sendDone" scoped="" ref="0x2abc90d0c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2abc90d0c268" loc="47:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CMCC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2abc90d0c268"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2abc90d0c5b8"/>
        <function-ref name="source" scoped="" ref="0x2abc90d0c740"/>
        <function-ref name="address" scoped="" ref="0x2abc90d0c8c8"/>
        <function-ref name="destination" scoped="" ref="0x2abc90d0ca50"/>
        <function-ref name="setSource" scoped="" ref="0x2abc90d0cbd8"/>
        <function-ref name="setDestination" scoped="" ref="0x2abc90d0cd60"/>
        <function-ref name="type" scoped="" ref="0x2abc90d0b020"/>
        <function-ref name="setType" scoped="" ref="0x2abc90d0b1a8"/>
        <function-ref name="isForMe" scoped="" ref="0x2abc90d0b330"/>
        <function-ref name="setGroup" scoped="" ref="0x2abc90d0b4b8"/>
        <function-ref name="localGroup" scoped="" ref="0x2abc90d0b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2abc8fd64020" loc="43:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2abc8fd64020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2abc8fd64370"/>
        <function-ref name="getPayload" scoped="" ref="0x2abc8fd644f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2abc8fd64680"/>
        <function-ref name="cancel" scoped="" ref="0x2abc8fd64808"/>
        <function-ref name="sendDone" scoped="" ref="0x2abc8fd64990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x2abc8fdb6060" loc="48:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2abc8fdb6060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2abc8f248848"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2abc8fdb63d0"/>
        <function-ref name="getPayload" scoped="" ref="0x2abc8fdb6558"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2abc8fdb66e0"/>
        <function-ref name="cancel" scoped="" ref="0x2abc8fdb6868"/>
        <function-ref name="sendDone" scoped="" ref="0x2abc8fdb69f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2abc8fdb72c8" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2abc8fdb72c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2abc8fdb7638"/>
        <function-ref name="getPayload" scoped="" ref="0x2abc8fdb77c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2abc8fdb7948"/>
        <function-ref name="cancel" scoped="" ref="0x2abc8fdb7ad0"/>
        <function-ref name="sendDone" scoped="" ref="0x2abc8fdb7c58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2abc8fdb4268" loc="50:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2abc8fdb4268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2abc8fdb45b8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2abc8fdb4740"/>
        <function-ref name="getPayload" scoped="" ref="0x2abc8fdb48c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2abc8fdb4a50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2abc8fdb4bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x2abc8fdb3020" loc="169:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x2abc8fdb3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2abc8fdb3370"/>
        <function-ref name="runTask" scoped="" ref="0x2abc8fdb34f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x2abc8fdb37c0" loc="126:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x2abc8fdb37c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2abc8fdb3b10"/>
        <function-ref name="runTask" scoped="" ref="0x2abc8fdb3c98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2abc8fdb6c38" loc="49:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2abc8fdb6c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2abc8fdb5020"/>
        <function-ref name="source" scoped="" ref="0x2abc8fdb51a8"/>
        <function-ref name="address" scoped="" ref="0x2abc8fdb5330"/>
        <function-ref name="destination" scoped="" ref="0x2abc8fdb54b8"/>
        <function-ref name="setSource" scoped="" ref="0x2abc8fdb5640"/>
        <function-ref name="setDestination" scoped="" ref="0x2abc8fdb57c8"/>
        <function-ref name="type" scoped="" ref="0x2abc8fdb5950"/>
        <function-ref name="setType" scoped="" ref="0x2abc8fdb5ad8"/>
        <function-ref name="isForMe" scoped="" ref="0x2abc8fdb5c60"/>
        <function-ref name="setGroup" scoped="" ref="0x2abc8fdb5de8"/>
        <function-ref name="localGroup" scoped="" ref="0x2abc8fdb4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2abc8fd97a28" loc="46:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="CMCC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2abc8fd97a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2abc8fd97d78"/>
        <function-ref name="payloadLength" scoped="" ref="0x2abc8fd96020"/>
        <function-ref name="getPayload" scoped="" ref="0x2abc8fd961a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2abc8fd96330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2abc8fd964b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2abc8fd97490" loc="45:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="CMCC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2abc8fd97490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2abc8fd977e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2abc8fd96700" loc="47:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="CMCC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2abc8fd96700"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2abc8fd96a50"/>
        <function-ref name="source" scoped="" ref="0x2abc8fd96bd8"/>
        <function-ref name="address" scoped="" ref="0x2abc8fd96d60"/>
        <function-ref name="destination" scoped="" ref="0x2abc8fd95020"/>
        <function-ref name="setSource" scoped="" ref="0x2abc8fd951a8"/>
        <function-ref name="setDestination" scoped="" ref="0x2abc8fd95330"/>
        <function-ref name="type" scoped="" ref="0x2abc8fd954b8"/>
        <function-ref name="setType" scoped="" ref="0x2abc8fd95640"/>
        <function-ref name="isForMe" scoped="" ref="0x2abc8fd957c8"/>
        <function-ref name="setGroup" scoped="" ref="0x2abc8fd95950"/>
        <function-ref name="localGroup" scoped="" ref="0x2abc8fd95ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ECC" ref="0x2abc8fd93b98" loc="38:../../CMC/TinyECC/ECCC.nc">
      <component-ref qname="ECCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ECC" scoped="" ref="0x2abc8fd93b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="ECC"/>
      </instance>
      <interface-functions>
        <function-ref name="get_param" scoped="" ref="0x2abc8fdde020"/>
        <function-ref name="point2octet" scoped="" ref="0x2abc8fdde1a8"/>
        <function-ref name="win_mul" scoped="" ref="0x2abc8fdde330"/>
        <function-ref name="gen_private_key" scoped="" ref="0x2abc8fdde4b8"/>
        <function-ref name="win_mul_Z" scoped="" ref="0x2abc8fdde640"/>
        <function-ref name="octet2point" scoped="" ref="0x2abc8fdde7c8"/>
        <function-ref name="init" scoped="" ref="0x2abc8fdde950"/>
        <function-ref name="add_proj" scoped="" ref="0x2abc8fddead8"/>
        <function-ref name="point_is_zero" scoped="" ref="0x2abc8fddec60"/>
        <function-ref name="mul" scoped="" ref="0x2abc8fddede8"/>
        <function-ref name="dbl_proj" scoped="" ref="0x2abc8fddd020"/>
        <function-ref name="win_mul_base" scoped="" ref="0x2abc8fddd1a8"/>
        <function-ref name="check_point" scoped="" ref="0x2abc8fddd330"/>
        <function-ref name="win_precompute_Z" scoped="" ref="0x2abc8fddd5b8"/>
        <function-ref name="add" scoped="" ref="0x2abc8fddd740"/>
        <function-ref name="gen_public_key" scoped="" ref="0x2abc8fddd8c8"/>
        <function-ref name="win_precompute" scoped="" ref="0x2abc8fddda50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CurveParam" ref="0x2abc8fdd2020" loc="36:../../CMC/TinyECC/ECCM.nc">
      <component-ref qname="ECCM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CurveParam" scoped="" ref="0x2abc8fdd2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CurveParam"/>
      </instance>
      <interface-functions>
        <function-ref name="get_param" scoped="" ref="0x2abc8fdd2370"/>
        <function-ref name="omega_mul" scoped="" ref="0x2abc8fdd24f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ECC" ref="0x2abc8fddc518" loc="34:../../CMC/TinyECC/ECCM.nc">
      <component-ref qname="ECCM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ECC" scoped="" ref="0x2abc8fddc518"/></type-interface>
      <instance>
        <interfacedef-ref qname="ECC"/>
      </instance>
      <interface-functions>
        <function-ref name="get_param" scoped="" ref="0x2abc8fddc868"/>
        <function-ref name="point2octet" scoped="" ref="0x2abc8fddc9f0"/>
        <function-ref name="win_mul" scoped="" ref="0x2abc8fddcb78"/>
        <function-ref name="gen_private_key" scoped="" ref="0x2abc8fddcd00"/>
        <function-ref name="win_mul_Z" scoped="" ref="0x2abc8fdd9020"/>
        <function-ref name="octet2point" scoped="" ref="0x2abc8fdd91a8"/>
        <function-ref name="init" scoped="" ref="0x2abc8fdd9330"/>
        <function-ref name="add_proj" scoped="" ref="0x2abc8fdd94b8"/>
        <function-ref name="point_is_zero" scoped="" ref="0x2abc8fdd9640"/>
        <function-ref name="mul" scoped="" ref="0x2abc8fdd97c8"/>
        <function-ref name="dbl_proj" scoped="" ref="0x2abc8fdd9950"/>
        <function-ref name="win_mul_base" scoped="" ref="0x2abc8fdd9ad8"/>
        <function-ref name="check_point" scoped="" ref="0x2abc8fdd9c60"/>
        <function-ref name="win_precompute_Z" scoped="" ref="0x2abc8fdd8020"/>
        <function-ref name="add" scoped="" ref="0x2abc8fdd81a8"/>
        <function-ref name="gen_public_key" scoped="" ref="0x2abc8fdd8330"/>
        <function-ref name="win_precompute" scoped="" ref="0x2abc8fdd84b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2abc8fdd27c0" loc="37:../../CMC/TinyECC/ECCM.nc">
      <component-ref qname="ECCM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2abc8fdd27c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2abc8fdd2b10"/>
        <function-ref name="rand32" scoped="" ref="0x2abc8fdd2c98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NN" ref="0x2abc8fdd8758" loc="35:../../CMC/TinyECC/ECCM.nc">
      <component-ref qname="ECCM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NN" scoped="" ref="0x2abc8fdd8758"/></type-interface>
      <instance>
        <interfacedef-ref qname="NN"/>
      </instance>
      <interface-functions>
        <function-ref name="ModSqr" scoped="" ref="0x2abc8fdd8aa8"/>
        <function-ref name="LShift" scoped="" ref="0x2abc8fdd8c30"/>
        <function-ref name="ModSmall" scoped="" ref="0x2abc8fdd8db8"/>
        <function-ref name="Gcd" scoped="" ref="0x2abc8fdd7020"/>
        <function-ref name="ModExp" scoped="" ref="0x2abc8fdd71a8"/>
        <function-ref name="ModNeg" scoped="" ref="0x2abc8fdd7330"/>
        <function-ref name="AddDigitMult" scoped="" ref="0x2abc8fdd74b8"/>
        <function-ref name="ModBarrett" scoped="" ref="0x2abc8fdd7640"/>
        <function-ref name="Digits" scoped="" ref="0x2abc8fdd77c8"/>
        <function-ref name="ModSub" scoped="" ref="0x2abc8fdd7950"/>
        <function-ref name="ModDiv" scoped="" ref="0x2abc8fdd7ad8"/>
        <function-ref name="Cmp" scoped="" ref="0x2abc8fdd7c60"/>
        <function-ref name="ModBarrettInit" scoped="" ref="0x2abc8fdd7de8"/>
        <function-ref name="AssignDigit" scoped="" ref="0x2abc8fdd6120"/>
        <function-ref name="BarrettSetBuf" scoped="" ref="0x2abc8fdd62a8"/>
        <function-ref name="ModMult" scoped="" ref="0x2abc8fdd6430"/>
        <function-ref name="Sub" scoped="" ref="0x2abc8fdd65b8"/>
        <function-ref name="Mult" scoped="" ref="0x2abc8fdd6740"/>
        <function-ref name="ModMultOpt" scoped="" ref="0x2abc8fdd68c8"/>
        <function-ref name="Assign" scoped="" ref="0x2abc8fdd6a50"/>
        <function-ref name="Decode" scoped="" ref="0x2abc8fdd6bd8"/>
        <function-ref name="Encode" scoped="" ref="0x2abc8fdd6d60"/>
        <function-ref name="Assign2Exp" scoped="" ref="0x2abc8fdd5020"/>
        <function-ref name="Mod" scoped="" ref="0x2abc8fdd51a8"/>
        <function-ref name="ModSqrRootOpt" scoped="" ref="0x2abc8fdd5330"/>
        <function-ref name="Div" scoped="" ref="0x2abc8fdd56b8"/>
        <function-ref name="Add" scoped="" ref="0x2abc8fdd5840"/>
        <function-ref name="ModAdd" scoped="" ref="0x2abc8fdd59c8"/>
        <function-ref name="One" scoped="" ref="0x2abc8fdd5b50"/>
        <function-ref name="Bits" scoped="" ref="0x2abc8fdd5cd8"/>
        <function-ref name="TestBit" scoped="" ref="0x2abc8fdd5e60"/>
        <function-ref name="Equal" scoped="" ref="0x2abc8fdd4020"/>
        <function-ref name="ModSqrOpt" scoped="" ref="0x2abc8fdd41a8"/>
        <function-ref name="AssignZero" scoped="" ref="0x2abc8fdd4330"/>
        <function-ref name="RShift" scoped="" ref="0x2abc8fdd44b8"/>
        <function-ref name="ModDivOpt" scoped="" ref="0x2abc8fdd4640"/>
        <function-ref name="ModInv" scoped="" ref="0x2abc8fdd47c8"/>
        <function-ref name="Even" scoped="" ref="0x2abc8fdd4950"/>
        <function-ref name="Zero" scoped="" ref="0x2abc8fdd4ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CurveParam" ref="0x2abc8ff66c40" loc="46:../../CMC/TinyECC/NNM.nc">
      <component-ref qname="NNM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CurveParam" scoped="" ref="0x2abc8ff66c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CurveParam"/>
      </instance>
      <interface-functions>
        <function-ref name="get_param" scoped="" ref="0x2abc8ff65020"/>
        <function-ref name="omega_mul" scoped="" ref="0x2abc8ff651a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NN" ref="0x2abc8ff6c5d8" loc="45:../../CMC/TinyECC/NNM.nc">
      <component-ref qname="NNM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NN" scoped="" ref="0x2abc8ff6c5d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="NN"/>
      </instance>
      <interface-functions>
        <function-ref name="ModSqr" scoped="" ref="0x2abc8ff6c928"/>
        <function-ref name="LShift" scoped="" ref="0x2abc8ff6cab0"/>
        <function-ref name="ModSmall" scoped="" ref="0x2abc8ff6cc38"/>
        <function-ref name="Gcd" scoped="" ref="0x2abc8ff6cdc0"/>
        <function-ref name="ModExp" scoped="" ref="0x2abc8ff69020"/>
        <function-ref name="ModNeg" scoped="" ref="0x2abc8ff691a8"/>
        <function-ref name="AddDigitMult" scoped="" ref="0x2abc8ff69330"/>
        <function-ref name="ModBarrett" scoped="" ref="0x2abc8ff694b8"/>
        <function-ref name="Digits" scoped="" ref="0x2abc8ff69640"/>
        <function-ref name="ModSub" scoped="" ref="0x2abc8ff697c8"/>
        <function-ref name="ModDiv" scoped="" ref="0x2abc8ff69950"/>
        <function-ref name="Cmp" scoped="" ref="0x2abc8ff69ad8"/>
        <function-ref name="ModBarrettInit" scoped="" ref="0x2abc8ff69c60"/>
        <function-ref name="AssignDigit" scoped="" ref="0x2abc8ff68020"/>
        <function-ref name="BarrettSetBuf" scoped="" ref="0x2abc8ff681a8"/>
        <function-ref name="ModMult" scoped="" ref="0x2abc8ff68330"/>
        <function-ref name="Sub" scoped="" ref="0x2abc8ff684b8"/>
        <function-ref name="Mult" scoped="" ref="0x2abc8ff68640"/>
        <function-ref name="ModMultOpt" scoped="" ref="0x2abc8ff687c8"/>
        <function-ref name="Assign" scoped="" ref="0x2abc8ff68950"/>
        <function-ref name="Decode" scoped="" ref="0x2abc8ff68ad8"/>
        <function-ref name="Encode" scoped="" ref="0x2abc8ff68c60"/>
        <function-ref name="Assign2Exp" scoped="" ref="0x2abc8ff68de8"/>
        <function-ref name="Mod" scoped="" ref="0x2abc8ff67020"/>
        <function-ref name="ModSqrRootOpt" scoped="" ref="0x2abc8ff671a8"/>
        <function-ref name="Div" scoped="" ref="0x2abc8ff67530"/>
        <function-ref name="Add" scoped="" ref="0x2abc8ff676b8"/>
        <function-ref name="ModAdd" scoped="" ref="0x2abc8ff67840"/>
        <function-ref name="One" scoped="" ref="0x2abc8ff679c8"/>
        <function-ref name="Bits" scoped="" ref="0x2abc8ff67b50"/>
        <function-ref name="TestBit" scoped="" ref="0x2abc8ff67cd8"/>
        <function-ref name="Equal" scoped="" ref="0x2abc8ff67e60"/>
        <function-ref name="ModSqrOpt" scoped="" ref="0x2abc8ff66020"/>
        <function-ref name="AssignZero" scoped="" ref="0x2abc8ff661a8"/>
        <function-ref name="RShift" scoped="" ref="0x2abc8ff66330"/>
        <function-ref name="ModDivOpt" scoped="" ref="0x2abc8ff664b8"/>
        <function-ref name="ModInv" scoped="" ref="0x2abc8ff66640"/>
        <function-ref name="Even" scoped="" ref="0x2abc8ff667c8"/>
        <function-ref name="Zero" scoped="" ref="0x2abc8ff66950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2abc901fb638" loc="64:/opt/tinyos-2.1.2/tos/system/RandomLfsrC.nc">
      <component-ref qname="RandomLfsrC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2abc901fb638"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2abc901fb988"/>
        <function-ref name="rand32" scoped="" ref="0x2abc901fbb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2abc901fb020" loc="63:/opt/tinyos-2.1.2/tos/system/RandomLfsrC.nc">
      <component-ref qname="RandomLfsrC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2abc901fb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2abc901fb370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CurveParam" ref="0x2abc8ff6ac00" loc="35:../../CMC/TinyECC/secp128r1.nc">
      <component-ref qname="secp128r1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CurveParam" scoped="" ref="0x2abc8ff6ac00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CurveParam"/>
      </instance>
      <interface-functions>
        <function-ref name="get_param" scoped="" ref="0x2abc9024d020"/>
        <function-ref name="omega_mul" scoped="" ref="0x2abc9024d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NN" ref="0x2abc9024d448" loc="36:../../CMC/TinyECC/secp128r1.nc">
      <component-ref qname="secp128r1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NN" scoped="" ref="0x2abc9024d448"/></type-interface>
      <instance>
        <interfacedef-ref qname="NN"/>
      </instance>
      <interface-functions>
        <function-ref name="ModSqr" scoped="" ref="0x2abc9024d798"/>
        <function-ref name="LShift" scoped="" ref="0x2abc9024d920"/>
        <function-ref name="ModSmall" scoped="" ref="0x2abc9024daa8"/>
        <function-ref name="Gcd" scoped="" ref="0x2abc9024dc30"/>
        <function-ref name="ModExp" scoped="" ref="0x2abc9024ddb8"/>
        <function-ref name="ModNeg" scoped="" ref="0x2abc9024c020"/>
        <function-ref name="AddDigitMult" scoped="" ref="0x2abc9024c1a8"/>
        <function-ref name="ModBarrett" scoped="" ref="0x2abc9024c330"/>
        <function-ref name="Digits" scoped="" ref="0x2abc9024c4b8"/>
        <function-ref name="ModSub" scoped="" ref="0x2abc9024c640"/>
        <function-ref name="ModDiv" scoped="" ref="0x2abc9024c7c8"/>
        <function-ref name="Cmp" scoped="" ref="0x2abc9024c950"/>
        <function-ref name="ModBarrettInit" scoped="" ref="0x2abc9024cad8"/>
        <function-ref name="AssignDigit" scoped="" ref="0x2abc9024cd60"/>
        <function-ref name="BarrettSetBuf" scoped="" ref="0x2abc9024b020"/>
        <function-ref name="ModMult" scoped="" ref="0x2abc9024b1a8"/>
        <function-ref name="Sub" scoped="" ref="0x2abc9024b330"/>
        <function-ref name="Mult" scoped="" ref="0x2abc9024b4b8"/>
        <function-ref name="ModMultOpt" scoped="" ref="0x2abc9024b640"/>
        <function-ref name="Assign" scoped="" ref="0x2abc9024b7c8"/>
        <function-ref name="Decode" scoped="" ref="0x2abc9024b950"/>
        <function-ref name="Encode" scoped="" ref="0x2abc9024bad8"/>
        <function-ref name="Assign2Exp" scoped="" ref="0x2abc9024bc60"/>
        <function-ref name="Mod" scoped="" ref="0x2abc9024bde8"/>
        <function-ref name="ModSqrRootOpt" scoped="" ref="0x2abc9024a020"/>
        <function-ref name="Div" scoped="" ref="0x2abc9024a3a8"/>
        <function-ref name="Add" scoped="" ref="0x2abc9024a530"/>
        <function-ref name="ModAdd" scoped="" ref="0x2abc9024a6b8"/>
        <function-ref name="One" scoped="" ref="0x2abc9024a840"/>
        <function-ref name="Bits" scoped="" ref="0x2abc9024a9c8"/>
        <function-ref name="TestBit" scoped="" ref="0x2abc9024ab50"/>
        <function-ref name="Equal" scoped="" ref="0x2abc9024acd8"/>
        <function-ref name="ModSqrOpt" scoped="" ref="0x2abc9024ae60"/>
        <function-ref name="AssignZero" scoped="" ref="0x2abc90249020"/>
        <function-ref name="RShift" scoped="" ref="0x2abc902491a8"/>
        <function-ref name="ModDivOpt" scoped="" ref="0x2abc90249330"/>
        <function-ref name="ModInv" scoped="" ref="0x2abc902494b8"/>
        <function-ref name="Even" scoped="" ref="0x2abc90249640"/>
        <function-ref name="Zero" scoped="" ref="0x2abc902497c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CurveParam" ref="0x2abc9025e020" loc="37:../../CMC/TinyECC/secp128r2.nc">
      <component-ref qname="secp128r2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CurveParam" scoped="" ref="0x2abc9025e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CurveParam"/>
      </instance>
      <interface-functions>
        <function-ref name="get_param" scoped="" ref="0x2abc9025e370"/>
        <function-ref name="omega_mul" scoped="" ref="0x2abc9025e4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NN" ref="0x2abc9025e798" loc="38:../../CMC/TinyECC/secp128r2.nc">
      <component-ref qname="secp128r2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NN" scoped="" ref="0x2abc9025e798"/></type-interface>
      <instance>
        <interfacedef-ref qname="NN"/>
      </instance>
      <interface-functions>
        <function-ref name="ModSqr" scoped="" ref="0x2abc9025eae8"/>
        <function-ref name="LShift" scoped="" ref="0x2abc9025ec70"/>
        <function-ref name="ModSmall" scoped="" ref="0x2abc9025edf8"/>
        <function-ref name="Gcd" scoped="" ref="0x2abc9025d020"/>
        <function-ref name="ModExp" scoped="" ref="0x2abc9025d1a8"/>
        <function-ref name="ModNeg" scoped="" ref="0x2abc9025d330"/>
        <function-ref name="AddDigitMult" scoped="" ref="0x2abc9025d4b8"/>
        <function-ref name="ModBarrett" scoped="" ref="0x2abc9025d640"/>
        <function-ref name="Digits" scoped="" ref="0x2abc9025d7c8"/>
        <function-ref name="ModSub" scoped="" ref="0x2abc9025d950"/>
        <function-ref name="ModDiv" scoped="" ref="0x2abc9025dad8"/>
        <function-ref name="Cmp" scoped="" ref="0x2abc9025dc60"/>
        <function-ref name="ModBarrettInit" scoped="" ref="0x2abc9025dde8"/>
        <function-ref name="AssignDigit" scoped="" ref="0x2abc9025c120"/>
        <function-ref name="BarrettSetBuf" scoped="" ref="0x2abc9025c2a8"/>
        <function-ref name="ModMult" scoped="" ref="0x2abc9025c430"/>
        <function-ref name="Sub" scoped="" ref="0x2abc9025c5b8"/>
        <function-ref name="Mult" scoped="" ref="0x2abc9025c740"/>
        <function-ref name="ModMultOpt" scoped="" ref="0x2abc9025c8c8"/>
        <function-ref name="Assign" scoped="" ref="0x2abc9025ca50"/>
        <function-ref name="Decode" scoped="" ref="0x2abc9025cbd8"/>
        <function-ref name="Encode" scoped="" ref="0x2abc9025cd60"/>
        <function-ref name="Assign2Exp" scoped="" ref="0x2abc9025b020"/>
        <function-ref name="Mod" scoped="" ref="0x2abc9025b1a8"/>
        <function-ref name="ModSqrRootOpt" scoped="" ref="0x2abc9025b330"/>
        <function-ref name="Div" scoped="" ref="0x2abc9025b6b8"/>
        <function-ref name="Add" scoped="" ref="0x2abc9025b840"/>
        <function-ref name="ModAdd" scoped="" ref="0x2abc9025b9c8"/>
        <function-ref name="One" scoped="" ref="0x2abc9025bb50"/>
        <function-ref name="Bits" scoped="" ref="0x2abc9025bcd8"/>
        <function-ref name="TestBit" scoped="" ref="0x2abc9025be60"/>
        <function-ref name="Equal" scoped="" ref="0x2abc9025a020"/>
        <function-ref name="ModSqrOpt" scoped="" ref="0x2abc9025a1a8"/>
        <function-ref name="AssignZero" scoped="" ref="0x2abc9025a330"/>
        <function-ref name="RShift" scoped="" ref="0x2abc9025a4b8"/>
        <function-ref name="ModDivOpt" scoped="" ref="0x2abc9025a640"/>
        <function-ref name="ModInv" scoped="" ref="0x2abc9025a7c8"/>
        <function-ref name="Even" scoped="" ref="0x2abc9025a950"/>
        <function-ref name="Zero" scoped="" ref="0x2abc9025aad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CurveParam" ref="0x2abc902d5200" loc="37:../../CMC/TinyECC/secp160k1.nc">
      <component-ref qname="secp160k1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CurveParam" scoped="" ref="0x2abc902d5200"/></type-interface>
      <instance>
        <interfacedef-ref qname="CurveParam"/>
      </instance>
      <interface-functions>
        <function-ref name="get_param" scoped="" ref="0x2abc902d5550"/>
        <function-ref name="omega_mul" scoped="" ref="0x2abc902d56d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NN" ref="0x2abc902d5978" loc="38:../../CMC/TinyECC/secp160k1.nc">
      <component-ref qname="secp160k1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NN" scoped="" ref="0x2abc902d5978"/></type-interface>
      <instance>
        <interfacedef-ref qname="NN"/>
      </instance>
      <interface-functions>
        <function-ref name="ModSqr" scoped="" ref="0x2abc902d5cc8"/>
        <function-ref name="LShift" scoped="" ref="0x2abc902d5e50"/>
        <function-ref name="ModSmall" scoped="" ref="0x2abc902d4020"/>
        <function-ref name="Gcd" scoped="" ref="0x2abc902d41a8"/>
        <function-ref name="ModExp" scoped="" ref="0x2abc902d4330"/>
        <function-ref name="ModNeg" scoped="" ref="0x2abc902d44b8"/>
        <function-ref name="AddDigitMult" scoped="" ref="0x2abc902d4640"/>
        <function-ref name="ModBarrett" scoped="" ref="0x2abc902d47c8"/>
        <function-ref name="Digits" scoped="" ref="0x2abc902d4950"/>
        <function-ref name="ModSub" scoped="" ref="0x2abc902d4ad8"/>
        <function-ref name="ModDiv" scoped="" ref="0x2abc902d4c60"/>
        <function-ref name="Cmp" scoped="" ref="0x2abc902d4de8"/>
        <function-ref name="ModBarrettInit" scoped="" ref="0x2abc902d3020"/>
        <function-ref name="AssignDigit" scoped="" ref="0x2abc902d32a8"/>
        <function-ref name="BarrettSetBuf" scoped="" ref="0x2abc902d3430"/>
        <function-ref name="ModMult" scoped="" ref="0x2abc902d35b8"/>
        <function-ref name="Sub" scoped="" ref="0x2abc902d3740"/>
        <function-ref name="Mult" scoped="" ref="0x2abc902d38c8"/>
        <function-ref name="ModMultOpt" scoped="" ref="0x2abc902d3a50"/>
        <function-ref name="Assign" scoped="" ref="0x2abc902d3bd8"/>
        <function-ref name="Decode" scoped="" ref="0x2abc902d3d60"/>
        <function-ref name="Encode" scoped="" ref="0x2abc902d2020"/>
        <function-ref name="Assign2Exp" scoped="" ref="0x2abc902d21a8"/>
        <function-ref name="Mod" scoped="" ref="0x2abc902d2330"/>
        <function-ref name="ModSqrRootOpt" scoped="" ref="0x2abc902d24b8"/>
        <function-ref name="Div" scoped="" ref="0x2abc902d2840"/>
        <function-ref name="Add" scoped="" ref="0x2abc902d29c8"/>
        <function-ref name="ModAdd" scoped="" ref="0x2abc902d2b50"/>
        <function-ref name="One" scoped="" ref="0x2abc902d2cd8"/>
        <function-ref name="Bits" scoped="" ref="0x2abc902d2e60"/>
        <function-ref name="TestBit" scoped="" ref="0x2abc902d1020"/>
        <function-ref name="Equal" scoped="" ref="0x2abc902d11a8"/>
        <function-ref name="ModSqrOpt" scoped="" ref="0x2abc902d1330"/>
        <function-ref name="AssignZero" scoped="" ref="0x2abc902d14b8"/>
        <function-ref name="RShift" scoped="" ref="0x2abc902d1640"/>
        <function-ref name="ModDivOpt" scoped="" ref="0x2abc902d17c8"/>
        <function-ref name="ModInv" scoped="" ref="0x2abc902d1950"/>
        <function-ref name="Even" scoped="" ref="0x2abc902d1ad8"/>
        <function-ref name="Zero" scoped="" ref="0x2abc902d1c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CurveParam" ref="0x2abc9025fe18" loc="35:../../CMC/TinyECC/secp160r1.nc">
      <component-ref qname="secp160r1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CurveParam" scoped="" ref="0x2abc9025fe18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CurveParam"/>
      </instance>
      <interface-functions>
        <function-ref name="get_param" scoped="" ref="0x2abc902f11a8"/>
        <function-ref name="omega_mul" scoped="" ref="0x2abc902f1330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NN" ref="0x2abc902f15d0" loc="36:../../CMC/TinyECC/secp160r1.nc">
      <component-ref qname="secp160r1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NN" scoped="" ref="0x2abc902f15d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="NN"/>
      </instance>
      <interface-functions>
        <function-ref name="ModSqr" scoped="" ref="0x2abc902f1920"/>
        <function-ref name="LShift" scoped="" ref="0x2abc902f1aa8"/>
        <function-ref name="ModSmall" scoped="" ref="0x2abc902f1c30"/>
        <function-ref name="Gcd" scoped="" ref="0x2abc902f1db8"/>
        <function-ref name="ModExp" scoped="" ref="0x2abc902f0020"/>
        <function-ref name="ModNeg" scoped="" ref="0x2abc902f01a8"/>
        <function-ref name="AddDigitMult" scoped="" ref="0x2abc902f0330"/>
        <function-ref name="ModBarrett" scoped="" ref="0x2abc902f04b8"/>
        <function-ref name="Digits" scoped="" ref="0x2abc902f0640"/>
        <function-ref name="ModSub" scoped="" ref="0x2abc902f07c8"/>
        <function-ref name="ModDiv" scoped="" ref="0x2abc902f0950"/>
        <function-ref name="Cmp" scoped="" ref="0x2abc902f0ad8"/>
        <function-ref name="ModBarrettInit" scoped="" ref="0x2abc902f0c60"/>
        <function-ref name="AssignDigit" scoped="" ref="0x2abc902ef020"/>
        <function-ref name="BarrettSetBuf" scoped="" ref="0x2abc902ef1a8"/>
        <function-ref name="ModMult" scoped="" ref="0x2abc902ef330"/>
        <function-ref name="Sub" scoped="" ref="0x2abc902ef4b8"/>
        <function-ref name="Mult" scoped="" ref="0x2abc902ef640"/>
        <function-ref name="ModMultOpt" scoped="" ref="0x2abc902ef7c8"/>
        <function-ref name="Assign" scoped="" ref="0x2abc902ef950"/>
        <function-ref name="Decode" scoped="" ref="0x2abc902efad8"/>
        <function-ref name="Encode" scoped="" ref="0x2abc902efc60"/>
        <function-ref name="Assign2Exp" scoped="" ref="0x2abc902efde8"/>
        <function-ref name="Mod" scoped="" ref="0x2abc902ee020"/>
        <function-ref name="ModSqrRootOpt" scoped="" ref="0x2abc902ee1a8"/>
        <function-ref name="Div" scoped="" ref="0x2abc902ee530"/>
        <function-ref name="Add" scoped="" ref="0x2abc902ee6b8"/>
        <function-ref name="ModAdd" scoped="" ref="0x2abc902ee840"/>
        <function-ref name="One" scoped="" ref="0x2abc902ee9c8"/>
        <function-ref name="Bits" scoped="" ref="0x2abc902eeb50"/>
        <function-ref name="TestBit" scoped="" ref="0x2abc902eecd8"/>
        <function-ref name="Equal" scoped="" ref="0x2abc902eee60"/>
        <function-ref name="ModSqrOpt" scoped="" ref="0x2abc902ed020"/>
        <function-ref name="AssignZero" scoped="" ref="0x2abc902ed1a8"/>
        <function-ref name="RShift" scoped="" ref="0x2abc902ed330"/>
        <function-ref name="ModDivOpt" scoped="" ref="0x2abc902ed4b8"/>
        <function-ref name="ModInv" scoped="" ref="0x2abc902ed640"/>
        <function-ref name="Even" scoped="" ref="0x2abc902ed7c8"/>
        <function-ref name="Zero" scoped="" ref="0x2abc902ed950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CurveParam" ref="0x2abc902f2ac8" loc="37:../../CMC/TinyECC/secp160r2.nc">
      <component-ref qname="secp160r2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CurveParam" scoped="" ref="0x2abc902f2ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CurveParam"/>
      </instance>
      <interface-functions>
        <function-ref name="get_param" scoped="" ref="0x2abc902f2e18"/>
        <function-ref name="omega_mul" scoped="" ref="0x2abc90347020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NN" ref="0x2abc903472c0" loc="38:../../CMC/TinyECC/secp160r2.nc">
      <component-ref qname="secp160r2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NN" scoped="" ref="0x2abc903472c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="NN"/>
      </instance>
      <interface-functions>
        <function-ref name="ModSqr" scoped="" ref="0x2abc90347610"/>
        <function-ref name="LShift" scoped="" ref="0x2abc90347798"/>
        <function-ref name="ModSmall" scoped="" ref="0x2abc90347920"/>
        <function-ref name="Gcd" scoped="" ref="0x2abc90347aa8"/>
        <function-ref name="ModExp" scoped="" ref="0x2abc90347c30"/>
        <function-ref name="ModNeg" scoped="" ref="0x2abc90347db8"/>
        <function-ref name="AddDigitMult" scoped="" ref="0x2abc90346020"/>
        <function-ref name="ModBarrett" scoped="" ref="0x2abc903461a8"/>
        <function-ref name="Digits" scoped="" ref="0x2abc90346330"/>
        <function-ref name="ModSub" scoped="" ref="0x2abc903464b8"/>
        <function-ref name="ModDiv" scoped="" ref="0x2abc90346640"/>
        <function-ref name="Cmp" scoped="" ref="0x2abc903467c8"/>
        <function-ref name="ModBarrettInit" scoped="" ref="0x2abc90346950"/>
        <function-ref name="AssignDigit" scoped="" ref="0x2abc90346bd8"/>
        <function-ref name="BarrettSetBuf" scoped="" ref="0x2abc90346d60"/>
        <function-ref name="ModMult" scoped="" ref="0x2abc90345020"/>
        <function-ref name="Sub" scoped="" ref="0x2abc903451a8"/>
        <function-ref name="Mult" scoped="" ref="0x2abc90345330"/>
        <function-ref name="ModMultOpt" scoped="" ref="0x2abc903454b8"/>
        <function-ref name="Assign" scoped="" ref="0x2abc90345640"/>
        <function-ref name="Decode" scoped="" ref="0x2abc903457c8"/>
        <function-ref name="Encode" scoped="" ref="0x2abc90345950"/>
        <function-ref name="Assign2Exp" scoped="" ref="0x2abc90345ad8"/>
        <function-ref name="Mod" scoped="" ref="0x2abc90345c60"/>
        <function-ref name="ModSqrRootOpt" scoped="" ref="0x2abc90345de8"/>
        <function-ref name="Div" scoped="" ref="0x2abc90344220"/>
        <function-ref name="Add" scoped="" ref="0x2abc903443a8"/>
        <function-ref name="ModAdd" scoped="" ref="0x2abc90344530"/>
        <function-ref name="One" scoped="" ref="0x2abc903446b8"/>
        <function-ref name="Bits" scoped="" ref="0x2abc90344840"/>
        <function-ref name="TestBit" scoped="" ref="0x2abc903449c8"/>
        <function-ref name="Equal" scoped="" ref="0x2abc90344b50"/>
        <function-ref name="ModSqrOpt" scoped="" ref="0x2abc90344cd8"/>
        <function-ref name="AssignZero" scoped="" ref="0x2abc90344e60"/>
        <function-ref name="RShift" scoped="" ref="0x2abc90343020"/>
        <function-ref name="ModDivOpt" scoped="" ref="0x2abc903431a8"/>
        <function-ref name="ModInv" scoped="" ref="0x2abc90343330"/>
        <function-ref name="Even" scoped="" ref="0x2abc903434b8"/>
        <function-ref name="Zero" scoped="" ref="0x2abc90343640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CurveParam" ref="0x2abc90348d28" loc="37:../../CMC/TinyECC/secp192k1.nc">
      <component-ref qname="secp192k1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CurveParam" scoped="" ref="0x2abc90348d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CurveParam"/>
      </instance>
      <interface-functions>
        <function-ref name="get_param" scoped="" ref="0x2abc903b20a0"/>
        <function-ref name="omega_mul" scoped="" ref="0x2abc903b2228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NN" ref="0x2abc903b24c8" loc="38:../../CMC/TinyECC/secp192k1.nc">
      <component-ref qname="secp192k1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NN" scoped="" ref="0x2abc903b24c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="NN"/>
      </instance>
      <interface-functions>
        <function-ref name="ModSqr" scoped="" ref="0x2abc903b2818"/>
        <function-ref name="LShift" scoped="" ref="0x2abc903b29a0"/>
        <function-ref name="ModSmall" scoped="" ref="0x2abc903b2b28"/>
        <function-ref name="Gcd" scoped="" ref="0x2abc903b2cb0"/>
        <function-ref name="ModExp" scoped="" ref="0x2abc903b2e38"/>
        <function-ref name="ModNeg" scoped="" ref="0x2abc903b1020"/>
        <function-ref name="AddDigitMult" scoped="" ref="0x2abc903b11a8"/>
        <function-ref name="ModBarrett" scoped="" ref="0x2abc903b1330"/>
        <function-ref name="Digits" scoped="" ref="0x2abc903b14b8"/>
        <function-ref name="ModSub" scoped="" ref="0x2abc903b1640"/>
        <function-ref name="ModDiv" scoped="" ref="0x2abc903b17c8"/>
        <function-ref name="Cmp" scoped="" ref="0x2abc903b1950"/>
        <function-ref name="ModBarrettInit" scoped="" ref="0x2abc903b1ad8"/>
        <function-ref name="AssignDigit" scoped="" ref="0x2abc903b1d60"/>
        <function-ref name="BarrettSetBuf" scoped="" ref="0x2abc903b0020"/>
        <function-ref name="ModMult" scoped="" ref="0x2abc903b01a8"/>
        <function-ref name="Sub" scoped="" ref="0x2abc903b0330"/>
        <function-ref name="Mult" scoped="" ref="0x2abc903b04b8"/>
        <function-ref name="ModMultOpt" scoped="" ref="0x2abc903b0640"/>
        <function-ref name="Assign" scoped="" ref="0x2abc903b07c8"/>
        <function-ref name="Decode" scoped="" ref="0x2abc903b0950"/>
        <function-ref name="Encode" scoped="" ref="0x2abc903b0ad8"/>
        <function-ref name="Assign2Exp" scoped="" ref="0x2abc903b0c60"/>
        <function-ref name="Mod" scoped="" ref="0x2abc903b0de8"/>
        <function-ref name="ModSqrRootOpt" scoped="" ref="0x2abc903af020"/>
        <function-ref name="Div" scoped="" ref="0x2abc903af3a8"/>
        <function-ref name="Add" scoped="" ref="0x2abc903af530"/>
        <function-ref name="ModAdd" scoped="" ref="0x2abc903af6b8"/>
        <function-ref name="One" scoped="" ref="0x2abc903af840"/>
        <function-ref name="Bits" scoped="" ref="0x2abc903af9c8"/>
        <function-ref name="TestBit" scoped="" ref="0x2abc903afb50"/>
        <function-ref name="Equal" scoped="" ref="0x2abc903afcd8"/>
        <function-ref name="ModSqrOpt" scoped="" ref="0x2abc903afe60"/>
        <function-ref name="AssignZero" scoped="" ref="0x2abc903ae020"/>
        <function-ref name="RShift" scoped="" ref="0x2abc903ae1a8"/>
        <function-ref name="ModDivOpt" scoped="" ref="0x2abc903ae330"/>
        <function-ref name="ModInv" scoped="" ref="0x2abc903ae4b8"/>
        <function-ref name="Even" scoped="" ref="0x2abc903ae640"/>
        <function-ref name="Zero" scoped="" ref="0x2abc903ae7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CurveParam" ref="0x2abc9042f2a0" loc="37:../../CMC/TinyECC/secp192r1.nc">
      <component-ref qname="secp192r1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CurveParam" scoped="" ref="0x2abc9042f2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CurveParam"/>
      </instance>
      <interface-functions>
        <function-ref name="get_param" scoped="" ref="0x2abc9042f5f0"/>
        <function-ref name="omega_mul" scoped="" ref="0x2abc9042f778"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NN" ref="0x2abc9042fa18" loc="38:../../CMC/TinyECC/secp192r1.nc">
      <component-ref qname="secp192r1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NN" scoped="" ref="0x2abc9042fa18"/></type-interface>
      <instance>
        <interfacedef-ref qname="NN"/>
      </instance>
      <interface-functions>
        <function-ref name="ModSqr" scoped="" ref="0x2abc9042fd68"/>
        <function-ref name="LShift" scoped="" ref="0x2abc9042e020"/>
        <function-ref name="ModSmall" scoped="" ref="0x2abc9042e1a8"/>
        <function-ref name="Gcd" scoped="" ref="0x2abc9042e330"/>
        <function-ref name="ModExp" scoped="" ref="0x2abc9042e4b8"/>
        <function-ref name="ModNeg" scoped="" ref="0x2abc9042e640"/>
        <function-ref name="AddDigitMult" scoped="" ref="0x2abc9042e7c8"/>
        <function-ref name="ModBarrett" scoped="" ref="0x2abc9042e950"/>
        <function-ref name="Digits" scoped="" ref="0x2abc9042ead8"/>
        <function-ref name="ModSub" scoped="" ref="0x2abc9042ec60"/>
        <function-ref name="ModDiv" scoped="" ref="0x2abc9042ede8"/>
        <function-ref name="Cmp" scoped="" ref="0x2abc9042d020"/>
        <function-ref name="ModBarrettInit" scoped="" ref="0x2abc9042d1a8"/>
        <function-ref name="AssignDigit" scoped="" ref="0x2abc9042d430"/>
        <function-ref name="BarrettSetBuf" scoped="" ref="0x2abc9042d5b8"/>
        <function-ref name="ModMult" scoped="" ref="0x2abc9042d740"/>
        <function-ref name="Sub" scoped="" ref="0x2abc9042d8c8"/>
        <function-ref name="Mult" scoped="" ref="0x2abc9042da50"/>
        <function-ref name="ModMultOpt" scoped="" ref="0x2abc9042dbd8"/>
        <function-ref name="Assign" scoped="" ref="0x2abc9042dd60"/>
        <function-ref name="Decode" scoped="" ref="0x2abc9042c020"/>
        <function-ref name="Encode" scoped="" ref="0x2abc9042c1a8"/>
        <function-ref name="Assign2Exp" scoped="" ref="0x2abc9042c330"/>
        <function-ref name="Mod" scoped="" ref="0x2abc9042c4b8"/>
        <function-ref name="ModSqrRootOpt" scoped="" ref="0x2abc9042c640"/>
        <function-ref name="Div" scoped="" ref="0x2abc9042c9c8"/>
        <function-ref name="Add" scoped="" ref="0x2abc9042cb50"/>
        <function-ref name="ModAdd" scoped="" ref="0x2abc9042ccd8"/>
        <function-ref name="One" scoped="" ref="0x2abc9042ce60"/>
        <function-ref name="Bits" scoped="" ref="0x2abc9042b020"/>
        <function-ref name="TestBit" scoped="" ref="0x2abc9042b1a8"/>
        <function-ref name="Equal" scoped="" ref="0x2abc9042b330"/>
        <function-ref name="ModSqrOpt" scoped="" ref="0x2abc9042b4b8"/>
        <function-ref name="AssignZero" scoped="" ref="0x2abc9042b640"/>
        <function-ref name="RShift" scoped="" ref="0x2abc9042b7c8"/>
        <function-ref name="ModDivOpt" scoped="" ref="0x2abc9042b950"/>
        <function-ref name="ModInv" scoped="" ref="0x2abc9042bad8"/>
        <function-ref name="Even" scoped="" ref="0x2abc9042bc60"/>
        <function-ref name="Zero" scoped="" ref="0x2abc9042bde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ECIES" ref="0x2abc9048f798" loc="34:../../CMC/TinyECC/ECIESC.nc">
      <component-ref qname="ECIESC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ECIES" scoped="" ref="0x2abc9048f798"/></type-interface>
      <instance>
        <interfacedef-ref qname="ECIES"/>
      </instance>
      <interface-functions>
        <function-ref name="decrypt" scoped="" ref="0x2abc9048fae8"/>
        <function-ref name="init" scoped="" ref="0x2abc9048fc70"/>
        <function-ref name="encrypt" scoped="" ref="0x2abc9048fdf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHA1" ref="0x2abc9048ccb0" loc="43:../../CMC/TinyECC/SHA1M.nc">
      <component-ref qname="SHA1M"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHA1" scoped="" ref="0x2abc9048ccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SHA1"/>
      </instance>
      <interface-functions>
        <function-ref name="reset" scoped="" ref="0x2abc904890a0"/>
        <function-ref name="update" scoped="" ref="0x2abc90489228"/>
        <function-ref name="digest" scoped="" ref="0x2abc904893b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SHA1" ref="0x2abc904f6e50" loc="40:../../CMC/TinyECC/ECIESM.nc">
      <component-ref qname="ECIESM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHA1" scoped="" ref="0x2abc904f6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SHA1"/>
      </instance>
      <interface-functions>
        <function-ref name="reset" scoped="" ref="0x2abc904f51e8"/>
        <function-ref name="update" scoped="" ref="0x2abc904f5370"/>
        <function-ref name="digest" scoped="" ref="0x2abc904f54f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ECC" ref="0x2abc904f8d40" loc="39:../../CMC/TinyECC/ECIESM.nc">
      <component-ref qname="ECIESM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ECC" scoped="" ref="0x2abc904f8d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ECC"/>
      </instance>
      <interface-functions>
        <function-ref name="get_param" scoped="" ref="0x2abc904f70d8"/>
        <function-ref name="point2octet" scoped="" ref="0x2abc904f7260"/>
        <function-ref name="win_mul" scoped="" ref="0x2abc904f73e8"/>
        <function-ref name="gen_private_key" scoped="" ref="0x2abc904f7570"/>
        <function-ref name="win_mul_Z" scoped="" ref="0x2abc904f76f8"/>
        <function-ref name="octet2point" scoped="" ref="0x2abc904f7880"/>
        <function-ref name="init" scoped="" ref="0x2abc904f7a08"/>
        <function-ref name="add_proj" scoped="" ref="0x2abc904f7b90"/>
        <function-ref name="point_is_zero" scoped="" ref="0x2abc904f7d18"/>
        <function-ref name="mul" scoped="" ref="0x2abc904f6020"/>
        <function-ref name="dbl_proj" scoped="" ref="0x2abc904f61a8"/>
        <function-ref name="win_mul_base" scoped="" ref="0x2abc904f6330"/>
        <function-ref name="check_point" scoped="" ref="0x2abc904f64b8"/>
        <function-ref name="win_precompute_Z" scoped="" ref="0x2abc904f6740"/>
        <function-ref name="add" scoped="" ref="0x2abc904f68c8"/>
        <function-ref name="gen_public_key" scoped="" ref="0x2abc904f6a50"/>
        <function-ref name="win_precompute" scoped="" ref="0x2abc904f6bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NN" ref="0x2abc904fc778" loc="38:../../CMC/TinyECC/ECIESM.nc">
      <component-ref qname="ECIESM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NN" scoped="" ref="0x2abc904fc778"/></type-interface>
      <instance>
        <interfacedef-ref qname="NN"/>
      </instance>
      <interface-functions>
        <function-ref name="ModSqr" scoped="" ref="0x2abc904fcac8"/>
        <function-ref name="LShift" scoped="" ref="0x2abc904fcc50"/>
        <function-ref name="ModSmall" scoped="" ref="0x2abc904fcdd8"/>
        <function-ref name="Gcd" scoped="" ref="0x2abc904fb020"/>
        <function-ref name="ModExp" scoped="" ref="0x2abc904fb1a8"/>
        <function-ref name="ModNeg" scoped="" ref="0x2abc904fb330"/>
        <function-ref name="AddDigitMult" scoped="" ref="0x2abc904fb4b8"/>
        <function-ref name="ModBarrett" scoped="" ref="0x2abc904fb640"/>
        <function-ref name="Digits" scoped="" ref="0x2abc904fb7c8"/>
        <function-ref name="ModSub" scoped="" ref="0x2abc904fb950"/>
        <function-ref name="ModDiv" scoped="" ref="0x2abc904fbad8"/>
        <function-ref name="Cmp" scoped="" ref="0x2abc904fbc60"/>
        <function-ref name="ModBarrettInit" scoped="" ref="0x2abc904fbde8"/>
        <function-ref name="AssignDigit" scoped="" ref="0x2abc904fa120"/>
        <function-ref name="BarrettSetBuf" scoped="" ref="0x2abc904fa2a8"/>
        <function-ref name="ModMult" scoped="" ref="0x2abc904fa430"/>
        <function-ref name="Sub" scoped="" ref="0x2abc904fa5b8"/>
        <function-ref name="Mult" scoped="" ref="0x2abc904fa740"/>
        <function-ref name="ModMultOpt" scoped="" ref="0x2abc904fa8c8"/>
        <function-ref name="Assign" scoped="" ref="0x2abc904faa50"/>
        <function-ref name="Decode" scoped="" ref="0x2abc904fabd8"/>
        <function-ref name="Encode" scoped="" ref="0x2abc904fad60"/>
        <function-ref name="Assign2Exp" scoped="" ref="0x2abc904f9020"/>
        <function-ref name="Mod" scoped="" ref="0x2abc904f91a8"/>
        <function-ref name="ModSqrRootOpt" scoped="" ref="0x2abc904f9330"/>
        <function-ref name="Div" scoped="" ref="0x2abc904f96b8"/>
        <function-ref name="Add" scoped="" ref="0x2abc904f9840"/>
        <function-ref name="ModAdd" scoped="" ref="0x2abc904f99c8"/>
        <function-ref name="One" scoped="" ref="0x2abc904f9b50"/>
        <function-ref name="Bits" scoped="" ref="0x2abc904f9cd8"/>
        <function-ref name="TestBit" scoped="" ref="0x2abc904f9e60"/>
        <function-ref name="Equal" scoped="" ref="0x2abc904f8020"/>
        <function-ref name="ModSqrOpt" scoped="" ref="0x2abc904f81a8"/>
        <function-ref name="AssignZero" scoped="" ref="0x2abc904f8330"/>
        <function-ref name="RShift" scoped="" ref="0x2abc904f84b8"/>
        <function-ref name="ModDivOpt" scoped="" ref="0x2abc904f8640"/>
        <function-ref name="ModInv" scoped="" ref="0x2abc904f87c8"/>
        <function-ref name="Even" scoped="" ref="0x2abc904f8950"/>
        <function-ref name="Zero" scoped="" ref="0x2abc904f8ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ECIES" ref="0x2abc9048be28" loc="36:../../CMC/TinyECC/ECIESM.nc">
      <component-ref qname="ECIESM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ECIES" scoped="" ref="0x2abc9048be28"/></type-interface>
      <instance>
        <interfacedef-ref qname="ECIES"/>
      </instance>
      <interface-functions>
        <function-ref name="decrypt" scoped="" ref="0x2abc904fc1a8"/>
        <function-ref name="init" scoped="" ref="0x2abc904fc330"/>
        <function-ref name="encrypt" scoped="" ref="0x2abc904fc4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OCBMode" ref="0x2abc90521690" loc="7:../../CMC/crypto/OCBModeC.nc">
      <component-ref qname="OCBModeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OCBMode" scoped="" ref="0x2abc90521690"/></type-interface>
      <instance>
        <interfacedef-ref qname="OCBMode"/>
      </instance>
      <interface-functions>
        <function-ref name="decrypt" scoped="" ref="0x2abc905219e0"/>
        <function-ref name="init" scoped="" ref="0x2abc90521b68"/>
        <function-ref name="set_counter" scoped="" ref="0x2abc90521cf0"/>
        <function-ref name="get_counter" scoped="" ref="0x2abc90521e78"/>
        <function-ref name="encrypt" scoped="" ref="0x2abc9051e030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OCBMode" ref="0x2abc9051eb40" loc="44:../../CMC/crypto/OCBModeM.nc">
      <component-ref qname="OCBModeM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OCBMode" scoped="" ref="0x2abc9051eb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="OCBMode"/>
      </instance>
      <interface-functions>
        <function-ref name="decrypt" scoped="" ref="0x2abc9051b020"/>
        <function-ref name="init" scoped="" ref="0x2abc9051b1a8"/>
        <function-ref name="set_counter" scoped="" ref="0x2abc9051b330"/>
        <function-ref name="get_counter" scoped="" ref="0x2abc9051b4b8"/>
        <function-ref name="encrypt" scoped="" ref="0x2abc9051b640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockCipherInfo" ref="0x2abc905102b8" loc="49:../../CMC/crypto/OCBModeM.nc">
      <component-ref qname="OCBModeM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockCipherInfo" scoped="" ref="0x2abc905102b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockCipherInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getCanDecrypt" scoped="" ref="0x2abc90510608"/>
        <function-ref name="getMaxKeyLength" scoped="" ref="0x2abc90510790"/>
        <function-ref name="getPreferredBlockSize" scoped="" ref="0x2abc90510918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BlockCipher" ref="0x2abc90514c68" loc="48:../../CMC/crypto/OCBModeM.nc">
      <component-ref qname="OCBModeM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockCipher" scoped="" ref="0x2abc90514c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockCipher"/>
      </instance>
      <interface-functions>
        <function-ref name="decrypt" scoped="" ref="0x2abc9051a020"/>
        <function-ref name="init" scoped="" ref="0x2abc9051a1a8"/>
        <function-ref name="encrypt" scoped="" ref="0x2abc9051a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockCipherInfo" ref="0x2abc9051dce8" loc="20:../../CMC/crypto/AES128M.nc">
      <component-ref qname="AES128M"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockCipherInfo" scoped="" ref="0x2abc9051dce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockCipherInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getCanDecrypt" scoped="" ref="0x2abc905ca0a0"/>
        <function-ref name="getMaxKeyLength" scoped="" ref="0x2abc905ca228"/>
        <function-ref name="getPreferredBlockSize" scoped="" ref="0x2abc905ca3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlockCipher" ref="0x2abc9051d368" loc="19:../../CMC/crypto/AES128M.nc">
      <component-ref qname="AES128M"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlockCipher" scoped="" ref="0x2abc9051d368"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlockCipher"/>
      </instance>
      <interface-functions>
        <function-ref name="decrypt" scoped="" ref="0x2abc9051d6b8"/>
        <function-ref name="init" scoped="" ref="0x2abc9051d840"/>
        <function-ref name="encrypt" scoped="" ref="0x2abc9051d9c8"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Init.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2abc8edb1d40" loc="62:/opt/tinyos-2.1.2/tos/interfaces/Init.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2abc8ecb7ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x2abc8eda49e8" loc="60:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x2abc8edb35e8" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2abc8e3b4608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x2abc8edb3378" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2abc8e3b4608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x2abc8edabd60" loc="31:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x2abc8edb67b0" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2abc8e3b4608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2abc8e3b4608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2abc8edb6540" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2abc8e3b4608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x2abc8edb4290" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2abc8e3b4608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2abc8e3b4608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2abc8edb4020" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2abc8e3b4608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x2abc8edb4ad8" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2abc8edcdab0" loc="44:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2abc8edcb1d8" loc="45:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abc8ec929b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2abc8edc0d20" loc="42:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2abc8edca020" loc="47:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abc8ec929b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2abc8edcd400" loc="43:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abc8ec929b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2abc8edcb890" loc="46:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2abc8edc0020" loc="40:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2abc8edc0690" loc="41:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2abc8ecb0378" loc="57:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x2abc8ecbb258" loc="72:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x2abc8ecb0a90" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abc8ec929b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x2abc8ecbd070" loc="67:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2abc8ecb7ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x2abc8ecbd860" loc="75:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x2abc8ed72e28" loc="76:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x2abc8ed8a4f8" loc="62:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x2abc8ecf7940"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x2abc8ed8b020" loc="52:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x2abc8ef71020" loc="61:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x2abc8ef71758" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x2abc8ef6f020" loc="72:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x2abc8ef6fe70" loc="83:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="79:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x2abc8ef6d480" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2abc8ef6dc18" loc="117:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="103:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x2abc8ef6f738" loc="77:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2abc8ef82768" loc="134:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="120:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2abc8ef824f8" loc="134:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x2abc8ef727e0" loc="56:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x2abc8ef6e608" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="86:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x2abc8ef6ed20" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="91:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2abc8efa84e8" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2abc8efa84e8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2abc8efb7020" loc="136:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="132:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2abc8e3b4608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2abc8efa68f8" loc="83:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x2abc8efb95b8" loc="114:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="100:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2abc8e3b4608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2abc8e3b4608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2abc8efb9020" loc="114:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2abc8e3b4608"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2abc8efb9338" loc="114:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2abc8e3b4608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x2abc8efa4870" loc="98:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="94:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abc8ec929b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x2abc8efb5020" loc="151:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="146:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2abc8e3b4608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x2abc8efb7740" loc="144:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="138:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2abc8e3b4608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2abc8efa40d8" loc="92:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="86:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abc8ec929b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x2abc8efa7020" loc="64:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2abc8e3b4608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2abc8efa8d48" loc="64:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2abc8e3b4608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x2abc8efb85b8" loc="129:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="116:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2abc8e3b4608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2abc8e3b4608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2abc8efb8020" loc="129:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2abc8e3b4608"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2abc8efb8338" loc="129:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2abc8e3b4608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x2abc8efa7a60" loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2abc8e3b4608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2abc8efa77f0" loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2abc8e3b4608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2abc8efa6258" loc="78:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x2abc8efafe40" loc="113:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2abc8ecb7ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2abc8efafbd0" loc="113:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2abc8ecb7ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x2abc8efc3290" loc="138:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2abc8ecb7ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2abc8efc3020" loc="138:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2abc8ecb7ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2abc8efaf258" loc="104:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2abc8ecb7ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2abc8efc4680" loc="130:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2abc8ecb7ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CMC" loc="30:../../CMC/CMC.nc">
      <documentation loc="26:../../CMC/TinyECC/ECC.h">
        <short>&#10; $Id: ECC.h,v 1.13 2007/11/02 22:36:39 aliu3 Exp $&#10; Ecc.h&#10; define the data structure for ECC operation&#10;</short>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2abc8efe7c18" loc="43:../../CMC/CMC.nc">
        <interfacedef-ref qname="CMC"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2abc8ecb7ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest_id" ref="0x2abc8efe7330" loc="43:../../CMC/CMC.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2abc8efe7640" loc="43:../../CMC/CMC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="data_len" ref="0x2abc8efe7988" loc="43:../../CMC/CMC.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x2abc8efea7c0" loc="33:../../CMC/CMC.nc">
        <interfacedef-ref qname="CMC"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2abc8ecb7ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2abc8efbb858"/>
                <typename><typedef-ref name="Point" ref="0x2abc8efbaa98"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="local_id" ref="0x2abc8efebd88" loc="33:../../CMC/CMC.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
            </type-int>
          </variable>
          <variable name="private_key" ref="0x2abc8efea1b0" loc="33:../../CMC/CMC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="public_key" ref="0x2abc8efea530" loc="33:../../CMC/CMC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2abc8efbb858"/>
                <typename><typedef-ref name="Point" ref="0x2abc8efbaa98"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="bind" ref="0x2abc8efe9290" loc="36:../../CMC/CMC.nc">
        <interfacedef-ref qname="CMC"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2abc8ecb7ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group_id" ref="0x2abc8efe9020" loc="36:../../CMC/CMC.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="connect" ref="0x2abc8efe9c00" loc="40:../../CMC/CMC.nc">
        <interfacedef-ref qname="CMC"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2abc8ecb7ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group_id" ref="0x2abc8efe9990" loc="40:../../CMC/CMC.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="recv" ref="0x2abc8efe42b0" loc="61:../../CMC/CMC.nc">
        <interfacedef-ref qname="CMC"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="payload" ref="0x2abc8efe5920" loc="61:../../CMC/CMC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="plen" ref="0x2abc8efe5c50" loc="61:../../CMC/CMC.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
            </type-int>
          </variable>
          <variable name="nodeid" ref="0x2abc8efe4020" loc="61:../../CMC/CMC.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="connected" ref="0x2abc8efe68a8" loc="50:../../CMC/CMC.nc">
        <interfacedef-ref qname="CMC"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2abc8ecb7ae0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="e" ref="0x2abc8efe62e8" loc="50:../../CMC/CMC.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2abc8ecb7ae0"/></typename>
            </type-int>
          </variable>
          <variable name="nodeid" ref="0x2abc8efe6628" loc="50:../../CMC/CMC.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2abc8efe5290" loc="54:../../CMC/CMC.nc">
        <interfacedef-ref qname="CMC"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2abc8ecb7ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="e" ref="0x2abc8efe5020" loc="54:../../CMC/CMC.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2abc8ecb7ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2abc8f015518" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2abc8f015518"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2abc8f015da8" loc="61:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2abc8e3b4608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2abc8f037a50" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2abc8f037a50"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2abc8f037c80" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2abc8f037c80"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2abc8f034548" loc="64:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2abc8f037c80"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2abc8f032590" loc="76:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2abc8f034d60" loc="71:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abc8ec929b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2abc8f032c80" loc="82:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2abc8f029738" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2abc8f029738"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2abc8f029968" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2abc8f029968"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2abc8f022290" loc="109:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2abc8f029968"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2abc8f024418" loc="78:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x2abc8f023920" loc="103:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2abc8f029968"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2abc8f029968"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2abc8f023380" loc="103:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2abc8f029968"/></type-var>
          </variable>
          <variable name="dt" ref="0x2abc8f0236a0" loc="103:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2abc8f029968"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2abc8f024b88" loc="88:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abc8ec929b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x2abc8f022a10" loc="116:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2abc8f029968"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2abc8f0264a8" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2abc8f029968"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2abc8f026238" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2abc8f029968"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2abc8f026c78" loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="76:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x2abc8f066488" loc="89:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x2abc8f067360" loc="85:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x2abc8f052110" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x2abc8f067cd0" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x2abc8f067a60" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x2abc8f051bb8" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2abc8f051948" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x2abc8f066e00" loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2abc8f066b90" loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x2abc8f052840" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x2abc8f051290" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2abc8f051020" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="51:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="compareBBusy" ref="0x2abc8f06e9a8" loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; @return TRUE if OCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer2Asynchronous" ref="0x2abc8f070a60" loc="68:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 2 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlABusy" ref="0x2abc8f06f1d8" loc="74:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; @return TRUE if TCCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBBusy" ref="0x2abc8f06f9a8" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="76:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; @return TRUE if TCCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x2abc8f06d1d8" loc="98:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="94:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; @return TRUE if TCNT2 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareABusy" ref="0x2abc8f06e1d8" loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; @return TRUE if OCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x2abc8f074888" loc="57:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer2 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2abc8ed3d978"/>
            <typename><typedef-ref name="Atm128_ASSR_t" ref="0x2abc8ed3dd80"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x2abc8f070290" loc="63:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer2 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2abc8ed3d978"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x2abc8ed3dd80"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2abc8f070020" loc="63:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2abc8ed3d978"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x2abc8ed3dd80"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x2abc8f054848" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2abc8f054848"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x2abc8f05e020" loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abc8ec929b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2abc8f060258" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2abc8f062178" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2abc8f054848"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2abc8f060960" loc="62:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2abc8f05e770" loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abc8ec929b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2abc8f062ac0" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2abc8f054848"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2abc8f062850" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2abc8f054848"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2abc8f05f0d8" loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2abc8f05f7c0" loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x2abc8f04aac0" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2abc8f04aac0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x2abc8f059020" loc="98:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2abc8f05b0d8" loc="87:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abc8ec929b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2abc8f0473a0" loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2abc8f04aac0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x2abc8f059970" loc="104:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x2abc8f059700" loc="104:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x2abc8f058178" loc="110:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2abc8f045b58" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2abc8f045438" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2abc8f05b830" loc="93:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abc8ec929b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2abc8f047cd8" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2abc8f04aac0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2abc8f047a68" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2abc8f04aac0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2abc8f044290" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2abc8f044978" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x2abc8f1d4970" loc="52:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x2abc8f1d41d8" loc="46:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2abc8e3b4608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x2abc8f1d95b8" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2abc8f1d95b8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x2abc8f1d60a8" loc="64:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2abc8ecb7ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2abc8f1d95b8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x2abc8f1d9df0" loc="64:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2abc8f1d95b8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SHA1" loc="35:../../CMC/TinyECC/SHA1.nc">
      <documentation loc="26:../../CMC/TinyECC/SHA1.nc">
        <short>&#10; Interface for SHA-1&#10; &#10; Author: An Liu&#10; Date: 09/15/2005&#10;</short>
      </documentation>
      <function command="" provided="0" name="reset" ref="0x2abc8f2db750" loc="37:../../CMC/TinyECC/SHA1.nc">
        <interfacedef-ref qname="SHA1"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:98" alignment="I:1"><struct-ref name="SHA1Context" ref="0x2abc8f1e0a38"/>
                <typename><typedef-ref name="SHA1Context" ref="0x2abc8f1fd4f8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="context" ref="0x2abc8f2db4e0" loc="37:../../CMC/TinyECC/SHA1.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:98" alignment="I:1"><struct-ref name="SHA1Context" ref="0x2abc8f1e0a38"/>
                <typename><typedef-ref name="SHA1Context" ref="0x2abc8f1fd4f8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="update" ref="0x2abc8f2d9818" loc="38:../../CMC/TinyECC/SHA1.nc">
        <interfacedef-ref qname="SHA1"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:98" alignment="I:1"><struct-ref name="SHA1Context" ref="0x2abc8f1e0a38"/>
                <typename><typedef-ref name="SHA1Context" ref="0x2abc8f1fd4f8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2abc8e3b4608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="context" ref="0x2abc8f2dbe00" loc="38:../../CMC/TinyECC/SHA1.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:98" alignment="I:1"><struct-ref name="SHA1Context" ref="0x2abc8f1e0a38"/>
                <typename><typedef-ref name="SHA1Context" ref="0x2abc8f1fd4f8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="message_array" ref="0x2abc8f2d9248" loc="38:../../CMC/TinyECC/SHA1.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2abc8f2d9588" loc="38:../../CMC/TinyECC/SHA1.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2abc8e3b4608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="digest" ref="0x2abc8f2d8738" loc="39:../../CMC/TinyECC/SHA1.nc">
        <interfacedef-ref qname="SHA1"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:98" alignment="I:1"><struct-ref name="SHA1Context" ref="0x2abc8f1e0a38"/>
                <typename><typedef-ref name="SHA1Context" ref="0x2abc8f1fd4f8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="context" ref="0x2abc8f2d8020" loc="39:../../CMC/TinyECC/SHA1.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:98" alignment="I:1"><struct-ref name="SHA1Context" ref="0x2abc8f1e0a38"/>
                <typename><typedef-ref name="SHA1Context" ref="0x2abc8f1fd4f8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="Message_Digest" ref="0x2abc8f2d84b8" loc="39:../../CMC/TinyECC/SHA1.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
      <function command="" provided="0" name="clear" ref="0x2abc8f24f4e8" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f24f278" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x2abc8f26e4e8" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f26e278" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2abc8f269690" loc="126:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="109:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f2690c8" loc="126:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2abc8f2693d8" loc="126:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2abc8f26a7c8" loc="106:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x2abc8f26c8d8" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f26c348" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2abc8f26c658" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2abc8f2666a0" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2abc8ecb7ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2abc8f246020"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2abc8f1f3d50" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2abc8f246020"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2abc8f266100" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2abc8f266410" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2abc8f261a68" loc="135:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="126:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f2614a0" loc="135:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2abc8f2617b0" loc="135:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2abc8f264c58" loc="123:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="113:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2abc8f263948" loc="96:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2abc8ecb7ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f2636d8" loc="96:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2abc8f262dd8" loc="110:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="98:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2abc8ecb7ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f262830" loc="110:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2abc8f262b58" loc="110:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2abc8ecb7ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ECC" loc="34:../../CMC/TinyECC/ECC.nc">
      <documentation loc="26:../../CMC/TinyECC/ECC.h">
        <short>&#10; $Id: ECC.h,v 1.13 2007/11/02 22:36:39 aliu3 Exp $&#10; Ecc.h&#10; define the data structure for ECC operation&#10;</short>
      </documentation>
      <function command="" provided="0" name="get_param" ref="0x2abc8f2e3730" loc="100:../../CMC/TinyECC/ECC.nc">
        <interfacedef-ref qname="ECC"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:150" alignment="I:1"><struct-ref name="Params" ref="0x2abc8efd7c70"/>
              <typename><typedef-ref name="Params" ref="0x2abc8efd5b38"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="point2octet" ref="0x2abc8f2d2138" loc="45:../../CMC/TinyECC/ECC.nc">
        <interfacedef-ref qname="ECC"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2abc8efbb858"/>
                <typename><typedef-ref name="Point" ref="0x2abc8efbaa98"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2abc8ec929b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="octet" ref="0x2abc8f2d3470" loc="45:../../CMC/TinyECC/ECC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="octet_len" ref="0x2abc8f2d37c0" loc="45:../../CMC/TinyECC/ECC.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
          </variable>
          <variable name="P" ref="0x2abc8f2d3ae8" loc="45:../../CMC/TinyECC/ECC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2abc8efbb858"/>
                <typename><typedef-ref name="Point" ref="0x2abc8efbaa98"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="compress" ref="0x2abc8f2d3e18" loc="45:../../CMC/TinyECC/ECC.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2abc8ec929b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="win_mul" ref="0x2abc8f2c7d28" loc="85:../../CMC/TinyECC/ECC.nc">
        <interfacedef-ref qname="ECC"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2abc8efbb858"/>
                <typename><typedef-ref name="Point" ref="0x2abc8efbaa98"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2abc8efbb858"/>
                <typename><typedef-ref name="Point" ref="0x2abc8efbaa98"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="P0" ref="0x2abc8f2c73d0" loc="85:../../CMC/TinyECC/ECC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2abc8efbb858"/>
                <typename><typedef-ref name="Point" ref="0x2abc8efbaa98"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="n" ref="0x2abc8f2c7718" loc="85:../../CMC/TinyECC/ECC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="pointArray" ref="0x2abc8f2c7a98" loc="85:../../CMC/TinyECC/ECC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2abc8efbb858"/>
                <typename><typedef-ref name="Point" ref="0x2abc8efbaa98"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="gen_private_key" ref="0x2abc8f2d4020" loc="40:../../CMC/TinyECC/ECC.nc">
        <interfacedef-ref qname="ECC"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="PrivateKey" ref="0x2abc8f2b4c60" loc="40:../../CMC/TinyECC/ECC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="win_mul_Z" ref="0x2abc8f2e3020" loc="94:../../CMC/TinyECC/ECC.nc">
        <interfacedef-ref qname="ECC"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2abc8efbb858"/>
                <typename><typedef-ref name="Point" ref="0x2abc8efbaa98"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2abc8efbb858"/>
                <typename><typedef-ref name="Point" ref="0x2abc8efbaa98"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:21" alignment="I:1"><struct-ref name="ZCoordinate" ref="0x2abc8efbada8"/>
                <typename><typedef-ref name="ZCoordinate" ref="0x2abc8efd7970"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="P0" ref="0x2abc8f2e4248" loc="94:../../CMC/TinyECC/ECC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2abc8efbb858"/>
                <typename><typedef-ref name="Point" ref="0x2abc8efbaa98"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="n" ref="0x2abc8f2e4590" loc="94:../../CMC/TinyECC/ECC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="pointArray" ref="0x2abc8f2e4910" loc="94:../../CMC/TinyECC/ECC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2abc8efbb858"/>
                <typename><typedef-ref name="Point" ref="0x2abc8efbaa98"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ZList" ref="0x2abc8f2e4c98" loc="94:../../CMC/TinyECC/ECC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:21" alignment="I:1"><struct-ref name="ZCoordinate" ref="0x2abc8efbada8"/>
                <typename><typedef-ref name="ZCoordinate" ref="0x2abc8efd7970"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="octet2point" ref="0x2abc8f2d00c8" loc="47:../../CMC/TinyECC/ECC.nc">
        <interfacedef-ref qname="ECC"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2abc8efbb858"/>
                <typename><typedef-ref name="Point" ref="0x2abc8efbaa98"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="P" ref="0x2abc8f2d27a8" loc="47:../../CMC/TinyECC/ECC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2abc8efbb858"/>
                <typename><typedef-ref name="Point" ref="0x2abc8efbaa98"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="octet" ref="0x2abc8f2d2b08" loc="47:../../CMC/TinyECC/ECC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="octet_len" ref="0x2abc8f2d2e10" loc="47:../../CMC/TinyECC/ECC.nc">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x2abc8f2b4550" loc="38:../../CMC/TinyECC/ECC.nc">
        <interfacedef-ref qname="ECC"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="add_proj" ref="0x2abc8f2cccb0" loc="69:../../CMC/TinyECC/ECC.nc">
        <interfacedef-ref qname="ECC"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2abc8efbb858"/>
                <typename><typedef-ref name="Point" ref="0x2abc8efbaa98"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2abc8efbb858"/>
                <typename><typedef-ref name="Point" ref="0x2abc8efbaa98"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2abc8efbb858"/>
                <typename><typedef-ref name="Point" ref="0x2abc8efbaa98"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="P0" ref="0x2abc8f2cd930" loc="69:../../CMC/TinyECC/ECC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2abc8efbb858"/>
                <typename><typedef-ref name="Point" ref="0x2abc8efbaa98"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="Z0" ref="0x2abc8f2cdc80" loc="69:../../CMC/TinyECC/ECC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="P1" ref="0x2abc8f2cc020" loc="69:../../CMC/TinyECC/ECC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2abc8efbb858"/>
                <typename><typedef-ref name="Point" ref="0x2abc8efbaa98"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="Z1" ref="0x2abc8f2cc370" loc="69:../../CMC/TinyECC/ECC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="P2" ref="0x2abc8f2cc6a0" loc="69:../../CMC/TinyECC/ECC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2abc8efbb858"/>
                <typename><typedef-ref name="Point" ref="0x2abc8efbaa98"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="Z2" ref="0x2abc8f2cc9f0" loc="69:../../CMC/TinyECC/ECC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="point_is_zero" ref="0x2abc8f2cf338" loc="51:../../CMC/TinyECC/ECC.nc">
        <interfacedef-ref qname="ECC"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abc8ec929b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2abc8efbb858"/>
                <typename><typedef-ref name="Point" ref="0x2abc8efbaa98"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="P" ref="0x2abc8f2cf0c8" loc="51:../../CMC/TinyECC/ECC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2abc8efbb858"/>
                <typename><typedef-ref name="Point" ref="0x2abc8efbaa98"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="mul" ref="0x2abc8f2c8020" loc="76:../../CMC/TinyECC/ECC.nc">
        <interfacedef-ref qname="ECC"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2abc8efbb858"/>
                <typename><typedef-ref name="Point" ref="0x2abc8efbaa98"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2abc8efbb858"/>
                <typename><typedef-ref name="Point" ref="0x2abc8efbaa98"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="P0" ref="0x2abc8f2c9668" loc="76:../../CMC/TinyECC/ECC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2abc8efbb858"/>
                <typename><typedef-ref name="Point" ref="0x2abc8efbaa98"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="P1" ref="0x2abc8f2c9998" loc="76:../../CMC/TinyECC/ECC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2abc8efbb858"/>
                <typename><typedef-ref name="Point" ref="0x2abc8efbaa98"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="n" ref="0x2abc8f2c9ce0" loc="76:../../CMC/TinyECC/ECC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dbl_proj" ref="0x2abc8f2c9020" loc="72:../../CMC/TinyECC/ECC.nc">
        <interfacedef-ref qname="ECC"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2abc8efbb858"/>
                <typename><typedef-ref name="Point" ref="0x2abc8efbaa98"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2abc8efbb858"/>
                <typename><typedef-ref name="Point" ref="0x2abc8efbaa98"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="P0" ref="0x2abc8f2cb368" loc="72:../../CMC/TinyECC/ECC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2abc8efbb858"/>
                <typename><typedef-ref name="Point" ref="0x2abc8efbaa98"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="Z0" ref="0x2abc8f2cb6b8" loc="72:../../CMC/TinyECC/ECC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="P1" ref="0x2abc8f2cb9e8" loc="72:../../CMC/TinyECC/ECC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2abc8efbb858"/>
                <typename><typedef-ref name="Point" ref="0x2abc8efbaa98"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="Z1" ref="0x2abc8f2cbd38" loc="72:../../CMC/TinyECC/ECC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="win_mul_base" ref="0x2abc8f2c5ac8" loc="88:../../CMC/TinyECC/ECC.nc">
        <interfacedef-ref qname="ECC"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2abc8efbb858"/>
                <typename><typedef-ref name="Point" ref="0x2abc8efbaa98"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="P0" ref="0x2abc8f2c5500" loc="88:../../CMC/TinyECC/ECC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2abc8efbb858"/>
                <typename><typedef-ref name="Point" ref="0x2abc8efbaa98"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="n" ref="0x2abc8f2c5848" loc="88:../../CMC/TinyECC/ECC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="check_point" ref="0x2abc8f2d09a8" loc="49:../../CMC/TinyECC/ECC.nc">
        <interfacedef-ref qname="ECC"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2abc8efbb858"/>
                <typename><typedef-ref name="Point" ref="0x2abc8efbaa98"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="P" ref="0x2abc8f2d0738" loc="49:../../CMC/TinyECC/ECC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2abc8efbb858"/>
                <typename><typedef-ref name="Point" ref="0x2abc8efbaa98"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="win_precompute_Z" ref="0x2abc8f2c4b80" loc="92:../../CMC/TinyECC/ECC.nc">
        <interfacedef-ref qname="ECC"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2abc8efbb858"/>
                <typename><typedef-ref name="Point" ref="0x2abc8efbaa98"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2abc8efbb858"/>
                <typename><typedef-ref name="Point" ref="0x2abc8efbaa98"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:21" alignment="I:1"><struct-ref name="ZCoordinate" ref="0x2abc8efbada8"/>
                <typename><typedef-ref name="ZCoordinate" ref="0x2abc8efd7970"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baseP" ref="0x2abc8f2c41e8" loc="92:../../CMC/TinyECC/ECC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2abc8efbb858"/>
                <typename><typedef-ref name="Point" ref="0x2abc8efbaa98"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pointArray" ref="0x2abc8f2c4568" loc="92:../../CMC/TinyECC/ECC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2abc8efbb858"/>
                <typename><typedef-ref name="Point" ref="0x2abc8efbaa98"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ZList" ref="0x2abc8f2c48f0" loc="92:../../CMC/TinyECC/ECC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:21" alignment="I:1"><struct-ref name="ZCoordinate" ref="0x2abc8efbada8"/>
                <typename><typedef-ref name="ZCoordinate" ref="0x2abc8efd7970"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="add" ref="0x2abc8f2cd2b0" loc="58:../../CMC/TinyECC/ECC.nc">
        <interfacedef-ref qname="ECC"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2abc8efbb858"/>
                <typename><typedef-ref name="Point" ref="0x2abc8efbaa98"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2abc8efbb858"/>
                <typename><typedef-ref name="Point" ref="0x2abc8efbaa98"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2abc8efbb858"/>
                <typename><typedef-ref name="Point" ref="0x2abc8efbaa98"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="P0" ref="0x2abc8f2cf980" loc="58:../../CMC/TinyECC/ECC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2abc8efbb858"/>
                <typename><typedef-ref name="Point" ref="0x2abc8efbaa98"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="P1" ref="0x2abc8f2cfcb0" loc="58:../../CMC/TinyECC/ECC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2abc8efbb858"/>
                <typename><typedef-ref name="Point" ref="0x2abc8efbaa98"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="P2" ref="0x2abc8f2cd020" loc="58:../../CMC/TinyECC/ECC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2abc8efbb858"/>
                <typename><typedef-ref name="Point" ref="0x2abc8efbaa98"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="gen_public_key" ref="0x2abc8f2d4d20" loc="42:../../CMC/TinyECC/ECC.nc">
        <interfacedef-ref qname="ECC"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2abc8efbb858"/>
                <typename><typedef-ref name="Point" ref="0x2abc8efbaa98"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="PublicKey" ref="0x2abc8f2d4700" loc="42:../../CMC/TinyECC/ECC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2abc8efbb858"/>
                <typename><typedef-ref name="Point" ref="0x2abc8efbaa98"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="PrivateKey" ref="0x2abc8f2d4aa0" loc="42:../../CMC/TinyECC/ECC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="win_precompute" ref="0x2abc8f2c8cf8" loc="80:../../CMC/TinyECC/ECC.nc">
        <interfacedef-ref qname="ECC"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2abc8efbb858"/>
                <typename><typedef-ref name="Point" ref="0x2abc8efbaa98"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2abc8efbb858"/>
                <typename><typedef-ref name="Point" ref="0x2abc8efbaa98"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baseP" ref="0x2abc8f2c86f8" loc="80:../../CMC/TinyECC/ECC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2abc8efbb858"/>
                <typename><typedef-ref name="Point" ref="0x2abc8efbaa98"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pointArray" ref="0x2abc8f2c8a78" loc="80:../../CMC/TinyECC/ECC.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2abc8efbb858"/>
                <typename><typedef-ref name="Point" ref="0x2abc8efbaa98"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x2abc8f27e920" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
              <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f27e020" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x2abc8f27e348" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2abc8f27e658" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OCBMode" loc="4:../../CMC/crypto/OCBMode.nc">
      <function command="" provided="0" name="decrypt" ref="0x2abc8f2720b0" loc="10:../../CMC/crypto/OCBMode.nc">
        <interfacedef-ref qname="OCBMode"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2abc8ecb7ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:200" alignment="I:1"><struct-ref name="CipherModeContext" ref="0x2abc8efce220"/>
                <typename><typedef-ref name="CipherModeContext" ref="0x2abc8efceba0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2abc8e3b4608"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="context" ref="0x2abc8f2754c0" loc="10:../../CMC/crypto/OCBMode.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:200" alignment="I:1"><struct-ref name="CipherModeContext" ref="0x2abc8efce220"/>
                <typename><typedef-ref name="CipherModeContext" ref="0x2abc8efceba0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="plainText" ref="0x2abc8f275848" loc="10:../../CMC/crypto/OCBMode.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="assocText" ref="0x2abc8f275bd0" loc="10:../../CMC/crypto/OCBMode.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="cipherText" ref="0x2abc8f273020" loc="10:../../CMC/crypto/OCBMode.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="plainBytes" ref="0x2abc8f273388" loc="10:../../CMC/crypto/OCBMode.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
            </type-int>
          </variable>
          <variable name="assocBytes" ref="0x2abc8f2736f0" loc="10:../../CMC/crypto/OCBMode.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
            </type-int>
          </variable>
          <variable name="cipherBytes" ref="0x2abc8f273a60" loc="10:../../CMC/crypto/OCBMode.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2abc8e3b4608"/></typename>
            </type-int>
          </variable>
          <variable name="IV" ref="0x2abc8f273da0" loc="10:../../CMC/crypto/OCBMode.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x2abc8f27a930" loc="6:../../CMC/crypto/OCBMode.nc">
        <interfacedef-ref qname="OCBMode"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2abc8ecb7ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:200" alignment="I:1"><struct-ref name="CipherModeContext" ref="0x2abc8efce220"/>
                <typename><typedef-ref name="CipherModeContext" ref="0x2abc8efceba0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="context" ref="0x2abc8f27a020" loc="6:../../CMC/crypto/OCBMode.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:200" alignment="I:1"><struct-ref name="CipherModeContext" ref="0x2abc8efce220"/>
                <typename><typedef-ref name="CipherModeContext" ref="0x2abc8efceba0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="keySize" ref="0x2abc8f27a358" loc="6:../../CMC/crypto/OCBMode.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </variable>
          <variable name="key" ref="0x2abc8f27a6a0" loc="6:../../CMC/crypto/OCBMode.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set_counter" ref="0x2abc8f271810" loc="14:../../CMC/crypto/OCBMode.nc">
        <interfacedef-ref qname="OCBMode"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:200" alignment="I:1"><struct-ref name="CipherModeContext" ref="0x2abc8efce220"/>
                <typename><typedef-ref name="CipherModeContext" ref="0x2abc8efceba0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:1">
              <typename><typedef-ref name="uint64_t" ref="0x2abc8e3b5088"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="context" ref="0x2abc8f271270" loc="14:../../CMC/crypto/OCBMode.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:200" alignment="I:1"><struct-ref name="CipherModeContext" ref="0x2abc8efce220"/>
                <typename><typedef-ref name="CipherModeContext" ref="0x2abc8efceba0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ctr" ref="0x2abc8f271590" loc="14:../../CMC/crypto/OCBMode.nc">
            <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:1">
              <typename><typedef-ref name="uint64_t" ref="0x2abc8e3b5088"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get_counter" ref="0x2abc8f272a98" loc="12:../../CMC/crypto/OCBMode.nc">
        <interfacedef-ref qname="OCBMode"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:1">
            <typename><typedef-ref name="uint64_t" ref="0x2abc8e3b5088"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:200" alignment="I:1"><struct-ref name="CipherModeContext" ref="0x2abc8efce220"/>
                <typename><typedef-ref name="CipherModeContext" ref="0x2abc8efceba0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="context" ref="0x2abc8f272828" loc="12:../../CMC/crypto/OCBMode.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:200" alignment="I:1"><struct-ref name="CipherModeContext" ref="0x2abc8efce220"/>
                <typename><typedef-ref name="CipherModeContext" ref="0x2abc8efceba0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="encrypt" ref="0x2abc8f276d18" loc="8:../../CMC/crypto/OCBMode.nc">
        <interfacedef-ref qname="OCBMode"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2abc8ecb7ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:200" alignment="I:1"><struct-ref name="CipherModeContext" ref="0x2abc8efce220"/>
                <typename><typedef-ref name="CipherModeContext" ref="0x2abc8efceba0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2abc8e3b4608"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="context" ref="0x2abc8f2770c8" loc="8:../../CMC/crypto/OCBMode.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:200" alignment="I:1"><struct-ref name="CipherModeContext" ref="0x2abc8efce220"/>
                <typename><typedef-ref name="CipherModeContext" ref="0x2abc8efceba0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="plainText" ref="0x2abc8f277450" loc="8:../../CMC/crypto/OCBMode.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="assocText" ref="0x2abc8f2777d8" loc="8:../../CMC/crypto/OCBMode.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="cipherText" ref="0x2abc8f277b68" loc="8:../../CMC/crypto/OCBMode.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="plainBytes" ref="0x2abc8f276020" loc="8:../../CMC/crypto/OCBMode.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
            </type-int>
          </variable>
          <variable name="assocBytes" ref="0x2abc8f276388" loc="8:../../CMC/crypto/OCBMode.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
            </type-int>
          </variable>
          <variable name="cipherBytes" ref="0x2abc8f2766f8" loc="8:../../CMC/crypto/OCBMode.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2abc8e3b4608"/></typename>
            </type-int>
          </variable>
          <variable name="IV" ref="0x2abc8f276a38" loc="8:../../CMC/crypto/OCBMode.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NN" loc="36:../../CMC/TinyECC/NN.nc">
      <documentation loc="1:../../CMC/TinyECC/NN.h">
        <short>&#10; All new code in this distribution is Copyright 2005 by North Carolina&#10; State University.</short>
        <long>&#10; All new code in this distribution is Copyright 2005 by North Carolina&#10; State University. All rights reserved. Redistribution and use in&#10; source and binary forms are permitted provided that this entire&#10; copyright notice is duplicated in all such copies, and that any&#10; documentation, announcements, and other materials related to such&#10; distribution and use acknowledge that the software was developed at&#10; North Carolina State University, Raleigh, NC. No charge may be made&#10; for copies, derivations, or distributions of this material without the&#10; express written consent of the copyright holder. Neither the name of&#10; the University nor the name of the author may be used to endorse or&#10; promote products derived from this material without specific prior&#10; written permission.&#10; IN NO EVENT SHALL THE NORTH CAROLINA STATE UNIVERSITY BE LIABLE TO ANY&#10; PARTY FOR DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL&#10; DAMAGES ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION,&#10; EVEN IF THE NORTH CAROLINA STATE UNIVERSITY HAS BEEN ADVISED OF THE&#10; POSSIBILITY OF SUCH DAMAGE. THE SOFTWARE PROVIDED HEREUNDER IS ON AN&#10; &#34;AS IS&#34; BASIS, AND THE NORTH CAROLINA STATE UNIVERSITY HAS NO&#10; OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR&#10; MODIFICATIONS. &#34;&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="ModSqr" ref="0x2abc8f2aa5f0" loc="97:../../CMC/TinyECC/NN.nc">
        <interfacedef-ref qname="NN"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x2abc8f2ab8a0" loc="97:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="b" ref="0x2abc8f2abbe8" loc="97:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="d" ref="0x2abc8f2aa020" loc="97:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="digits" ref="0x2abc8f2aa350" loc="97:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="LShift" ref="0x2abc8f281d58" loc="65:../../CMC/TinyECC/NN.nc">
        <interfacedef-ref qname="NN"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x2abc8f281140" loc="65:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="b" ref="0x2abc8f281488" loc="65:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="c" ref="0x2abc8f281788" loc="65:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
          </variable>
          <variable name="digits" ref="0x2abc8f281ab8" loc="65:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="ModSmall" ref="0x2abc8f296020" loc="81:../../CMC/TinyECC/NN.nc">
        <interfacedef-ref qname="NN"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="b" ref="0x2abc8f2986b8" loc="81:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="c" ref="0x2abc8f298a00" loc="81:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="digits" ref="0x2abc8f298d30" loc="81:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="Gcd" ref="0x2abc8f2a3d28" loc="105:../../CMC/TinyECC/NN.nc">
        <interfacedef-ref qname="NN"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x2abc8f2a30c8" loc="105:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="b" ref="0x2abc8f2a3410" loc="105:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="c" ref="0x2abc8f2a3758" loc="105:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="digits" ref="0x2abc8f2a3a88" loc="105:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="ModExp" ref="0x2abc8f2a66c0" loc="101:../../CMC/TinyECC/NN.nc">
        <interfacedef-ref qname="NN"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x2abc8f2a7368" loc="101:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="b" ref="0x2abc8f2a76b0" loc="101:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="c" ref="0x2abc8f2a79f8" loc="101:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="cDigits" ref="0x2abc8f2a7d30" loc="101:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
          </variable>
          <variable name="d" ref="0x2abc8f2a60c8" loc="101:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="dDigits" ref="0x2abc8f2a6400" loc="101:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="ModNeg" ref="0x2abc8f291070" loc="87:../../CMC/TinyECC/NN.nc">
        <interfacedef-ref qname="NN"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x2abc8f2923e8" loc="87:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="b" ref="0x2abc8f292730" loc="87:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="c" ref="0x2abc8f292a78" loc="87:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="digits" ref="0x2abc8f292da8" loc="87:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="AddDigitMult" ref="0x2abc8f29f7c0" loc="69:../../CMC/TinyECC/NN.nc">
        <interfacedef-ref qname="NN"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x2abc8f2a07f0" loc="69:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="b" ref="0x2abc8f2a0b38" loc="69:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="c" ref="0x2abc8f2a0e48" loc="69:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
            </type-int>
          </variable>
          <variable name="d" ref="0x2abc8f29f1e0" loc="69:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="digits" ref="0x2abc8f29f510" loc="69:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="ModBarrett" ref="0x2abc8f298020" loc="79:../../CMC/TinyECC/NN.nc">
        <interfacedef-ref qname="NN"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x2abc8f299020" loc="79:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="b" ref="0x2abc8f299368" loc="79:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="bDigits" ref="0x2abc8f2996a0" loc="79:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
          </variable>
          <variable name="c" ref="0x2abc8f2999e8" loc="79:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="cDigits" ref="0x2abc8f299d20" loc="79:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="Digits" ref="0x2abc8f2bb5d0" loc="123:../../CMC/TinyECC/NN.nc">
        <interfacedef-ref qname="NN"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x2abc8f2bb020" loc="123:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="digits" ref="0x2abc8f2bb350" loc="123:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="ModSub" ref="0x2abc8f294d38" loc="85:../../CMC/TinyECC/NN.nc">
        <interfacedef-ref qname="NN"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x2abc8f295d28" loc="85:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="b" ref="0x2abc8f2940c8" loc="85:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="c" ref="0x2abc8f294410" loc="85:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="d" ref="0x2abc8f294758" loc="85:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="digits" ref="0x2abc8f294a88" loc="85:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="ModDiv" ref="0x2abc8f2b0d70" loc="91:../../CMC/TinyECC/NN.nc">
        <interfacedef-ref qname="NN"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x2abc8f2b2d60" loc="91:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="b" ref="0x2abc8f2b0100" loc="91:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="c" ref="0x2abc8f2b0448" loc="91:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="d" ref="0x2abc8f2b0790" loc="91:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="digits" ref="0x2abc8f2b0ac0" loc="91:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="Cmp" ref="0x2abc8f2c15e0" loc="113:../../CMC/TinyECC/NN.nc">
        <interfacedef-ref qname="NN"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x2abc8f2c2b58" loc="113:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="b" ref="0x2abc8f2c1020" loc="113:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="digits" ref="0x2abc8f2c1350" loc="113:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="ModBarrettInit" ref="0x2abc8f29a020" loc="75:../../CMC/TinyECC/NN.nc">
        <interfacedef-ref qname="NN"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:45" alignment="I:1"><struct-ref name="Barrett" ref="0x2abc8efc1d10"/>
                <typename><typedef-ref name="Barrett" ref="0x2abc8efbe0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0x2abc8f29c6d0" loc="75:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="cDigits" ref="0x2abc8f29ca08" loc="75:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
          </variable>
          <variable name="pbuf" ref="0x2abc8f29cd60" loc="75:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:45" alignment="I:1"><struct-ref name="Barrett" ref="0x2abc8efc1d10"/>
                <typename><typedef-ref name="Barrett" ref="0x2abc8efbe0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="AssignDigit" ref="0x2abc8f28b8f0" loc="49:../../CMC/TinyECC/NN.nc">
        <interfacedef-ref qname="NN"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x2abc8f28b020" loc="49:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="b" ref="0x2abc8f28b330" loc="49:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
            </type-int>
          </variable>
          <variable name="digits" ref="0x2abc8f28b660" loc="49:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="BarrettSetBuf" ref="0x2abc8f29a948" loc="77:../../CMC/TinyECC/NN.nc">
        <interfacedef-ref qname="NN"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:45" alignment="I:1"><struct-ref name="Barrett" ref="0x2abc8efc1d10"/>
                <typename><typedef-ref name="Barrett" ref="0x2abc8efbe0c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pbuf" ref="0x2abc8f29a6d8" loc="77:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:45" alignment="I:1"><struct-ref name="Barrett" ref="0x2abc8efc1d10"/>
                <typename><typedef-ref name="Barrett" ref="0x2abc8efbe0c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="ModMult" ref="0x2abc8f2b26e0" loc="89:../../CMC/TinyECC/NN.nc">
        <interfacedef-ref qname="NN"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x2abc8f2916f8" loc="89:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="b" ref="0x2abc8f291a40" loc="89:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="c" ref="0x2abc8f291d88" loc="89:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="d" ref="0x2abc8f2b2100" loc="89:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="digits" ref="0x2abc8f2b2430" loc="89:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="Sub" ref="0x2abc8f286cc0" loc="59:../../CMC/TinyECC/NN.nc">
        <interfacedef-ref qname="NN"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x2abc8f286060" loc="59:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="b" ref="0x2abc8f2863a8" loc="59:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="c" ref="0x2abc8f2866f0" loc="59:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="digits" ref="0x2abc8f286a20" loc="59:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="Mult" ref="0x2abc8f283020" loc="61:../../CMC/TinyECC/NN.nc">
        <interfacedef-ref qname="NN"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x2abc8f285368" loc="61:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="b" ref="0x2abc8f2856b0" loc="61:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="c" ref="0x2abc8f2859f8" loc="61:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="digits" ref="0x2abc8f285d28" loc="61:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="ModMultOpt" ref="0x2abc8f2ae7f8" loc="93:../../CMC/TinyECC/NN.nc">
        <interfacedef-ref qname="NN"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x2abc8f2af450" loc="93:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="b" ref="0x2abc8f2af798" loc="93:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="c" ref="0x2abc8f2afae0" loc="93:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="d" ref="0x2abc8f2afe28" loc="93:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="omega" ref="0x2abc8f2ae208" loc="93:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="digits" ref="0x2abc8f2ae538" loc="93:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="Assign" ref="0x2abc8f28d928" loc="47:../../CMC/TinyECC/NN.nc">
        <interfacedef-ref qname="NN"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x2abc8f28d020" loc="47:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="b" ref="0x2abc8f28d368" loc="47:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="digits" ref="0x2abc8f28d698" loc="47:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="Decode" ref="0x2abc8f28f678" loc="41:../../CMC/TinyECC/NN.nc">
        <interfacedef-ref qname="NN"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x2abc8f2909f8" loc="41:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="digits" ref="0x2abc8f290d28" loc="41:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
          </variable>
          <variable name="b" ref="0x2abc8f28f0c8" loc="41:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2abc8f28f3d8" loc="41:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="Encode" ref="0x2abc8f28e958" loc="43:../../CMC/TinyECC/NN.nc">
        <interfacedef-ref qname="NN"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x2abc8f28fcd8" loc="43:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
          <variable name="digits" ref="0x2abc8f28e060" loc="43:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
          </variable>
          <variable name="b" ref="0x2abc8f28e3a8" loc="43:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2abc8f28e6b8" loc="43:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="Assign2Exp" ref="0x2abc8f2895e0" loc="53:../../CMC/TinyECC/NN.nc">
        <interfacedef-ref qname="NN"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="NN_UINT2" ref="0x2abc8efc1988"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x2abc8f28ac78" loc="53:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="b" ref="0x2abc8f289020" loc="53:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="NN_UINT2" ref="0x2abc8efc1988"/></typename>
            </type-int>
          </variable>
          <variable name="digits" ref="0x2abc8f289350" loc="53:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="Mod" ref="0x2abc8f29c020" loc="73:../../CMC/TinyECC/NN.nc">
        <interfacedef-ref qname="NN"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x2abc8f29d020" loc="73:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="b" ref="0x2abc8f29d368" loc="73:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="bDigits" ref="0x2abc8f29d6a0" loc="73:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
          </variable>
          <variable name="c" ref="0x2abc8f29d9e8" loc="73:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="cDigits" ref="0x2abc8f29dd20" loc="73:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="ModSqrRootOpt" ref="0x2abc8f2c24b8" loc="107:../../CMC/TinyECC/NN.nc">
        <interfacedef-ref qname="NN"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x2abc8f2c3470" loc="107:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="b" ref="0x2abc8f2c37b8" loc="107:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="c" ref="0x2abc8f2c3b00" loc="107:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="digits" ref="0x2abc8f2c3e30" loc="107:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
          </variable>
          <variable name="omega" ref="0x2abc8f2c2208" loc="107:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="Div" ref="0x2abc8f282a08" loc="63:../../CMC/TinyECC/NN.nc">
        <interfacedef-ref qname="NN"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x2abc8f283680" loc="63:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="b" ref="0x2abc8f2839c8" loc="63:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="c" ref="0x2abc8f283d10" loc="63:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="cDigits" ref="0x2abc8f2820c8" loc="63:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
          </variable>
          <variable name="d" ref="0x2abc8f282410" loc="63:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="dDigits" ref="0x2abc8f282748" loc="63:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="Add" ref="0x2abc8f287978" loc="57:../../CMC/TinyECC/NN.nc">
        <interfacedef-ref qname="NN"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x2abc8f289cb8" loc="57:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="b" ref="0x2abc8f287060" loc="57:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="c" ref="0x2abc8f2873a8" loc="57:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="digits" ref="0x2abc8f2876d8" loc="57:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="ModAdd" ref="0x2abc8f2956a8" loc="83:../../CMC/TinyECC/NN.nc">
        <interfacedef-ref qname="NN"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x2abc8f2966a0" loc="83:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="b" ref="0x2abc8f2969e8" loc="83:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="c" ref="0x2abc8f296d30" loc="83:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="d" ref="0x2abc8f2950c8" loc="83:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="digits" ref="0x2abc8f2953f8" loc="83:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="One" ref="0x2abc8f2be020" loc="117:../../CMC/TinyECC/NN.nc">
        <interfacedef-ref qname="NN"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x2abc8f2bf900" loc="117:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="digits" ref="0x2abc8f2bfc30" loc="117:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="Bits" ref="0x2abc8f2bec78" loc="119:../../CMC/TinyECC/NN.nc">
        <interfacedef-ref qname="NN"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x2abc8f2be6c8" loc="119:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="digits" ref="0x2abc8f2be9f8" loc="119:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="TestBit" ref="0x2abc8f2bd900" loc="121:../../CMC/TinyECC/NN.nc">
        <interfacedef-ref qname="NN"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="short" size="I:2" alignment="I:1">
              <typename><typedef-ref name="int16_t" ref="0x2abc8e3b3658"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x2abc8f2bd380" loc="121:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="i" ref="0x2abc8f2bd680" loc="121:../../CMC/TinyECC/NN.nc">
            <type-int cname="short" size="I:2" alignment="I:1">
              <typename><typedef-ref name="int16_t" ref="0x2abc8e3b3658"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="Equal" ref="0x2abc8f2ba5e0" loc="125:../../CMC/TinyECC/NN.nc">
        <interfacedef-ref qname="NN"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x2abc8f2bbc48" loc="125:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="b" ref="0x2abc8f2ba020" loc="125:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="digits" ref="0x2abc8f2ba350" loc="125:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="ModSqrOpt" ref="0x2abc8f2a8cb8" loc="99:../../CMC/TinyECC/NN.nc">
        <interfacedef-ref qname="NN"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x2abc8f2aac90" loc="99:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="b" ref="0x2abc8f2a8020" loc="99:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="d" ref="0x2abc8f2a8368" loc="99:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="omega" ref="0x2abc8f2a86d8" loc="99:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="digits" ref="0x2abc8f2a8a08" loc="99:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="AssignZero" ref="0x2abc8f28a5d0" loc="51:../../CMC/TinyECC/NN.nc">
        <interfacedef-ref qname="NN"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x2abc8f28a020" loc="51:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="digits" ref="0x2abc8f28a350" loc="51:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="RShift" ref="0x2abc8f2a00d8" loc="67:../../CMC/TinyECC/NN.nc">
        <interfacedef-ref qname="NN"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x2abc8f2a1460" loc="67:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="b" ref="0x2abc8f2a17a8" loc="67:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="c" ref="0x2abc8f2a1aa8" loc="67:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
          </variable>
          <variable name="digits" ref="0x2abc8f2a1dd8" loc="67:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="ModDivOpt" ref="0x2abc8f2ab020" loc="95:../../CMC/TinyECC/NN.nc">
        <interfacedef-ref qname="NN"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x2abc8f2ac020" loc="95:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="b" ref="0x2abc8f2ac368" loc="95:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="c" ref="0x2abc8f2ac6b0" loc="95:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="d" ref="0x2abc8f2ac9f8" loc="95:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="digits" ref="0x2abc8f2acd28" loc="95:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="ModInv" ref="0x2abc8f2a49e0" loc="103:../../CMC/TinyECC/NN.nc">
        <interfacedef-ref qname="NN"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x2abc8f2a6d40" loc="103:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="b" ref="0x2abc8f2a40c8" loc="103:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="c" ref="0x2abc8f2a4410" loc="103:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="digits" ref="0x2abc8f2a4740" loc="103:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="Even" ref="0x2abc8f2b92a0" loc="127:../../CMC/TinyECC/NN.nc">
        <interfacedef-ref qname="NN"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x2abc8f2bac50" loc="127:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="digits" ref="0x2abc8f2b9020" loc="127:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="Zero" ref="0x2abc8f2bf2a0" loc="115:../../CMC/TinyECC/NN.nc">
        <interfacedef-ref qname="NN"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x2abc8f2c1c50" loc="115:../../CMC/TinyECC/NN.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="digits" ref="0x2abc8f2bf020" loc="115:../../CMC/TinyECC/NN.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ECIES" loc="35:../../CMC/TinyECC/ECIES.nc">
      <documentation loc="26:../../CMC/TinyECC/ECIES.nc">
        <short>&#10; Interface for ECIES operation&#10;&#10; Author: An Liu&#10; Date: 05/06/2007&#10;</short>
      </documentation>
      <function command="" provided="0" name="decrypt" ref="0x2abc8f2dc020" loc="45:../../CMC/TinyECC/ECIES.nc">
        <interfacedef-ref qname="ECIES"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="M" ref="0x2abc8f2dd0c8" loc="45:../../CMC/TinyECC/ECIES.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="M_len" ref="0x2abc8f2dd3a8" loc="45:../../CMC/TinyECC/ECIES.nc">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </variable>
          <variable name="C" ref="0x2abc8f2dd6e0" loc="45:../../CMC/TinyECC/ECIES.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="C_len" ref="0x2abc8f2dd9c0" loc="45:../../CMC/TinyECC/ECIES.nc">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </variable>
          <variable name="d" ref="0x2abc8f2ddd08" loc="45:../../CMC/TinyECC/ECIES.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x2abc8f2e03e0" loc="37:../../CMC/TinyECC/ECIES.nc">
        <interfacedef-ref qname="ECIES"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="encrypt" ref="0x2abc8f2dea48" loc="43:../../CMC/TinyECC/ECIES.nc">
        <interfacedef-ref qname="ECIES"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2abc8efbb858"/>
                <typename><typedef-ref name="Point" ref="0x2abc8efbaa98"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="C" ref="0x2abc8f2e0ad8" loc="43:../../CMC/TinyECC/ECIES.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="C_len" ref="0x2abc8f2e0db8" loc="43:../../CMC/TinyECC/ECIES.nc">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </variable>
          <variable name="M" ref="0x2abc8f2de140" loc="43:../../CMC/TinyECC/ECIES.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="M_len" ref="0x2abc8f2de420" loc="43:../../CMC/TinyECC/ECIES.nc">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </variable>
          <variable name="PublicKey" ref="0x2abc8f2de798" loc="43:../../CMC/TinyECC/ECIES.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:42" alignment="I:1"><struct-ref name="Point" ref="0x2abc8efbb858"/>
                <typename><typedef-ref name="Point" ref="0x2abc8efbaa98"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x2abc8f36d600" loc="59:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2abc8f246020"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x2abc8f36d020" loc="59:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2abc8f246020"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2abc8f36d380" loc="59:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x2abc8f378d88" loc="65:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f3787a0" loc="65:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x2abc8f378b08" loc="65:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x2abc8f39b020" loc="71:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f377c48" loc="71:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x2abc8f378020" loc="57:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x2abc8f379678" loc="52:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x2abc8f379408" loc="52:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x2abc8f37f520" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2abc8ecb7ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f37f2b0" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x2abc8f37d630" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2abc8ecb7ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f37d3c0" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x2abc8f37c700" loc="85:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abc8ec929b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f37c490" loc="85:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x2abc8f3950a8" loc="65:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f396dd0" loc="65:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x2abc8f399348" loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f36bce8" loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x2abc8f3990c8" loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x2abc8f396118" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f398e78" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x2abc8f3986b0" loc="53:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f3980c8" loc="53:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x2abc8f398430" loc="53:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x2abc8f394020" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abc8ec929b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f395d30" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x2abc8f384c60" loc="177:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2abc8f248bf8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2abc8f3849f0" loc="177:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x2abc8f367d18" loc="88:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2abc8f246020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2abc8f367aa8" loc="88:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x2abc8f36a290" loc="68:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2abc8f246020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x2abc8f36ace8" loc="78:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2abc8f246020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2abc8f36aa78" loc="78:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x2abc8f3645d8" loc="121:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2abc8f246020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2abc8f364020" loc="121:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2abc8f364358" loc="121:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2abc8f246020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x2abc8f3680b8" loc="103:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2abc8f246020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2abc8f366a98" loc="103:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2abc8f366dd0" loc="103:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2abc8f246020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x2abc8f3878c8" loc="147:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2abc8f248848"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2abc8f387658" loc="147:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x2abc8f385b70" loc="162:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2abc8f248848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2abc8f3855f0" loc="162:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x2abc8f3858f0" loc="162:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2abc8f248848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x2abc8f389788" loc="136:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abc8ec929b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2abc8f389518" loc="136:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x2abc8f3830b8" loc="187:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2abc8f248bf8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2abc8f382a80" loc="187:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x2abc8f382db0" loc="187:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2abc8f248bf8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x2abc8f383e20" loc="195:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2abc8f248bf8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioChannel" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
      <function event="" provided="0" name="setChannelDone" ref="0x2abc8f391a48" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x2abc8f391290" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress),&#10; EALREADY if the selected channel is already set, SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2abc8ecb7ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2abc8f391020" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x2abc8f390258" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x2abc8f39a308" loc="35:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2abc8f39a308"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2abc8f39a538" loc="35:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2abc8f39a538"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x2abc8f38d290" loc="63:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2abc8f39a538"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f38d020" loc="63:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x2abc8f38b370" loc="70:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f38b100" loc="70:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x2abc8f38e0a8" loc="49:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abc8ec929b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f39ade8" loc="49:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2abc8f38a5e0" loc="78:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2abc8f39a538"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f38a020" loc="78:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x2abc8f38a360" loc="78:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2abc8f39a538"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketField" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
      <parameters>
        <typedef name="value_type" ref="0x2abc8f3be180" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
          <interfacedef-ref qname="PacketField"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x2abc8f3be180"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0x2abc8f3bb108" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Clears the isSet flag.</short>
          <long>&#10; Clears the isSet flag.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f3bde50" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2abc8f3bd6c8" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns the stored value of this field in the message.</short>
          <long>&#10; Returns the stored value of this field in the message. If the&#10; value is not set, then the returned value is undefined.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x2abc8f3be180"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f3bd458" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x2abc8f3bec90" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns TRUE if the value is set for this message.</short>
          <long>&#10; Returns TRUE if the value is set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abc8ec929b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f3bea20" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2abc8f3bbdc0" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.</short>
          <long>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x2abc8f3be180"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f3bb7f8" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x2abc8f3bbb40" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketField.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x2abc8f3be180"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x2abc8f3b2bd8" loc="47:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abc8ec929b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f3b2968" loc="47:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2abc8f3dc9b8" loc="120:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="104:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2abc8ecb7ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x2abc8f3dda68" loc="97:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2abc8ecb7ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x2abc8f3dd178" loc="88:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2abc8ecb7ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2abc8f3dc258" loc="102:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="99:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2abc8f3db3e0" loc="128:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="122:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abc8ec929b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Packet" loc="35:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
      <function command="" provided="0" name="source" ref="0x2abc8f3d7780" loc="41:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x2abc8f2338b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f3d7510" loc="41:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x2abc8f3d83e0" loc="37:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x2abc8f2338b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x2abc8f3d8d90" loc="39:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x2abc8f2338b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f3d8b20" loc="39:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x2abc8f3fb2a0" loc="45:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2abc8f2338b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f3d6b20" loc="45:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2abc8f3fb020" loc="45:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2abc8f2338b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x2abc8f3d6488" loc="43:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2abc8f2338b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f3d7e48" loc="43:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2abc8f3d6208" loc="43:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2abc8f2338b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pan" ref="0x2abc8f3fa5b8" loc="49:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x2abc8f2334c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f3fa348" loc="49:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPan" ref="0x2abc8f3f92a0" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x2abc8f2334c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f3fac30" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x2abc8f3f9020" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x2abc8f2334c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x2abc8f3fbbc0" loc="47:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abc8ec929b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f3fb950" loc="47:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x2abc8f3f99a8" loc="53:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x2abc8f2334c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Send" loc="45:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2abc8f3e42b0" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param msg    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2abc8ecb7ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2abc8f2338b8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2abc8f3e7830" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2abc8f2338b8"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2abc8f3e7b90" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2abc8f3e4020" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2abc8f3e1708" loc="122:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="113:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f3e1140" loc="122:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2abc8f3e1450" loc="122:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2abc8f3e28f0" loc="110:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="100:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2abc8f3e3030" loc="83:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2abc8ecb7ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f3e4d90" loc="83:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2abc8f3e2020" loc="97:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
        <documentation loc="85:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2abc8ecb7ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f3e3960" loc="97:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2abc8f3e3c88" loc="97:/opt/tinyos-2.1.2/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2abc8ecb7ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DummyConfig" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyConfig.nc">
      <function command="" provided="0" name="nothing" ref="0x2abc8f42b020" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/DummyConfig.nc">
          <short>&#10; We need to put something here, but this is not going to get called&#10;</short>
        </documentation>
        <interfacedef-ref qname="DummyConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrafficMonitorConfig" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
      <function command="" provided="0" name="getBytes" ref="0x2abc8f417938" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the number of bytes in this message.</short>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f4176c8" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageConfig" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
      <function command="" provided="0" name="group" ref="0x2abc8f430d10" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.group *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2abc8f248bf8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f430aa0" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="checkFrame" ref="0x2abc8f42e370" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.</short>
          <long>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.&#10; Return SUCCESS if the frame is now properly set up, &#10; or FAIL of the send operation should be aborted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2abc8ecb7ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f42e100" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x2abc8f4326b0" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.source *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2abc8f246020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f432440" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x2abc8f433020" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.destination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2abc8f246020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f419c70" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x2abc8f430388" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setSource *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2abc8f246020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f432d88" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2abc8f430108" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2abc8f246020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x2abc8f433ce0" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setDestination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2abc8f246020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f433728" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2abc8f433a60" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2abc8f246020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x2abc8f42f9b0" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setGroup *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2abc8f248bf8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f42f400" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x2abc8f42f730" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2abc8f248bf8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlottedCollisionConfig" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
      <function command="" provided="0" name="getInitialDelay" ref="0x2abc8f411598" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.</short>
          <long>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getScheduleExponent" ref="0x2abc8f438020" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowLength" ref="0x2abc8f435290" loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the size of the collision window for this received message.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f435020" loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitTime" ref="0x2abc8f438aa8" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command must return the time when the message was transmitted.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f438838" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowStart" ref="0x2abc8f4375b8" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.</short>
          <long>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f437348" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioAlarm" loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
      <function event="" provided="0" name="fired" ref="0x2abc8f45d8e0" loc="60:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; This event is fired when the specified timeout period expires.</short>
          <long>&#10; This event is fired when the specified timeout period expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="wait" ref="0x2abc8f45ea70" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Waits till the specified timeout period expires.</short>
          <long>&#10; Waits till the specified timeout period expires. The alarm must be free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x2abc8f236540"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="timeout" ref="0x2abc8f45e800" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x2abc8f236540"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2abc8f45d1d8" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Cancels the running alarm.</short>
          <long>&#10; Cancels the running alarm. The alarm must be pending.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isFree" ref="0x2abc8f45e020" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns TRUE if the alarm is free and ready to be used.</short>
          <long>&#10; Returns TRUE if the alarm is free and ready to be used. Once the alarm&#10; is free, it cannot become nonfree in the same tasklet block. Note,&#10; if the alarm is currently set (even if for ourselves) then it is not free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abc8ec929b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNow" ref="0x2abc8f45c0d8" loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns the current time as measured by the radio stack.</short>
          <long>&#10; Returns the current time as measured by the radio stack.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x2abc8f236540"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioPacket" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
      <function command="" provided="0" name="clear" ref="0x2abc8f456290" loc="70:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Clears all metadata and sets all default values in the headers.</short>
          <long>&#10; Clears all metadata and sets all default values in the headers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f456020" loc="70:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x2abc8f4596f8" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the payload.</short>
          <long>&#10; Returns the length of the payload. The payload starts right&#10; after the header.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f459488" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2abc8f458d80" loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the maximum length that can be set for this message.</short>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x2abc8f4585d0" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Sets the length of the payload.</short>
          <long>&#10; Sets the length of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f458020" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2abc8f458350" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x2abc8f460bf0" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; This command returns the length of the header.</short>
          <long>&#10; This command returns the length of the header. The header&#10; starts at the first byte of the message_t structure &#10; (some layers may add dummy bytes to allign the payload to&#10; the msg->data section).&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f460980" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x2abc8f4577f0" loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the metadata section.</short>
          <long>&#10; Returns the length of the metadata section. The metadata section&#10; is at the very end of the message_t structure and grows downwards.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f457580" loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RF230DriverConfig" loc="35:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
      <function command="" provided="0" name="maxPayloadLength" ref="0x2abc8f403c90" loc="46:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.</short>
          <long>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x2abc8f4034e8" loc="40:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy header to align the payload properly.</short>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f403278" loc="40:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x2abc8f402780" loc="52:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.</short>
          <long>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f402510" loc="52:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerPreloadLength" ref="0x2abc8f400020" loc="59:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired.</short>
          <long>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired. If the length of the packet is less than this amount, &#10; then that event is fired earlier. The header length must be at least one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresRssiCca" ref="0x2abc8f400b28" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.</short>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abc8ec929b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f4008b8" loc="65:/opt/tinyos-2.1.2/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaConfig" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/CsmaConfig.nc">
      <function command="" provided="0" name="requiresSoftwareCCA" ref="0x2abc8f418338" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/CsmaConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/CsmaConfig.nc">
          <short>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.</short>
          <long>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abc8ec929b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f4180c8" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/CsmaConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SoftwareAckConfig" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
      <function command="" provided="0" name="reportChannelError" ref="0x2abc8f41f7a8" loc="86:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.</short>
          <long>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckPacket" ref="0x2abc8f41f040" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2abc8f421a30" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2abc8f421d90" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x2abc8f3fdcd0" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.</short>
          <long>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abc8ec929b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f3fda60" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckPacket" ref="0x2abc8f4237b8" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet is an acknowledgement packet.</short>
          <long>&#10; Returns TRUE if the received packet is an acknowledgement packet.&#10; The AckedSend layer will filter out all received acknowledgement&#10; packets and uses  only the matching one for the acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abc8ec929b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f423548" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckPacket" ref="0x2abc8f422640" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The acknowledgement packect was already verified &#10; to be a valid acknowledgement packet via the isAckPacket command.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abc8ec929b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2abc8f422060" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2abc8f4223c0" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckTimeout" ref="0x2abc8f3fe468" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.</short>
          <long>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x2abc8f3fd2a0" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Sets the flag in the message indicating to the receiver whether&#10; the message should be acknowledged.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2abc8ec929b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f3fec70" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2abc8f3fd020" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2abc8ec929b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x2abc8f421290" loc="75:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abc8ec929b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f421020" loc="75:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154PacketLayer" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
      <documentation loc="38:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <short>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses.</short>
        <long>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses. It also &#10; supports 6LowPan interoperability mode, and acknowledgement frames.&#10; Note, that this interface does not support the CRC-16 value, which&#10; should be verified before the data can be trusted.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getDestPan" ref="0x2abc8f444290" loc="131:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="127:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; returns the destination PAN id, values &#60;= 255 are tinyos groups,&#10; valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f444020" loc="131:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDSN" ref="0x2abc8f446a08" loc="120:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="117:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f446798" loc="120:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFCF" ref="0x2abc8f4295c0" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame control field.</short>
          <long>&#10; Sets the frame control field. This method should not be used, &#10; createDataFrame and createAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f429020" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="fcf" ref="0x2abc8f429340" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckFrame" ref="0x2abc8f4265b8" loc="75:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abc8ec929b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f426348" loc="75:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcAddr" ref="0x2abc8f43e020" loc="156:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="153:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f4409c8" loc="156:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2abc8f440cf8" loc="156:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createDataFrame" ref="0x2abc8f428aa8" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create a data frame supported by this interface.</short>
          <long>&#10; Sets the FCF to create a data frame supported by this interface.&#10; You may call setAckRequired and setFramePending commands after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f428838" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDSN" ref="0x2abc8f445808" loc="125:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="122:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f445278" loc="125:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dsn" ref="0x2abc8f445588" loc="125:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckReply" ref="0x2abc8f44c020" loc="88:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10; This also sets the DSN value. The data message must be a &#10; data frame, the ack message will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2abc8f4258a8" loc="88:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2abc8f425c08" loc="88:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSrcAddr" ref="0x2abc8f440290" loc="151:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="148:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f440020" loc="151:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isDataFrame" ref="0x2abc8f428030" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abc8ec929b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f429d90" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckRequired" ref="0x2abc8f44a920" loc="99:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the ACK required field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the ACK required field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abc8ec929b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f44a6b0" loc="99:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckReply" ref="0x2abc8f44ce50" loc="94:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The data message must be a data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abc8ec929b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2abc8f44c870" loc="94:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2abc8f44cbd0" loc="94:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localAddr" ref="0x2abc8f43c548" loc="178:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="175:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local address of the node (AM address)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x2abc8f2338b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x2abc8f43ea20" loc="162:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="158:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abc8ec929b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f43e7b0" loc="162:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x2abc8f43dd88" loc="173:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="170:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local pan id (AM group)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x2abc8f2334c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestAddr" ref="0x2abc8f441748" loc="146:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="143:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f441198" loc="146:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2abc8f4414c8" loc="146:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckFrame" ref="0x2abc8f4250a8" loc="81:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface.</short>
          <long>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface. You may call setFramePending after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f426dd0" loc="81:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFramePending" ref="0x2abc8f446020" loc="115:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="112:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame pending field in the FCF.</short>
          <long>&#10; Sets the frame pending field in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2abc8ec929b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f448a38" loc="115:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pending" ref="0x2abc8f448d58" loc="115:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2abc8ec929b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestPan" ref="0x2abc8f442020" loc="136:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="133:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination PAN id, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f4449e8" loc="136:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pan" ref="0x2abc8f444d08" loc="136:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x2abc8f43a020" loc="185:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="180:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.</short>
          <long>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abc8ec929b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f43cc88" loc="185:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x2abc8f449678" loc="105:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="101:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.</short>
          <long>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2abc8ec929b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f449100" loc="105:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2abc8f4493f8" loc="105:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2abc8ec929b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFCF" ref="0x2abc8f42a7f0" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the frame control field.</short>
          <long>&#10; Returns the frame control field. This method should not be used, &#10; isDataFrame and isAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f42a580" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x2abc8f43d538" loc="168:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="164:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abc8ec929b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f43d2c8" loc="168:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDestAddr" ref="0x2abc8f442a28" loc="141:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="138:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f4427b8" loc="141:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFramePending" ref="0x2abc8f448290" loc="110:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="107:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the frame pending field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the frame pending field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abc8ec929b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f448020" loc="110:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UniqueConfig" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x2abc8f41b020" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Sets the sequence number of the packet.</short>
          <long>&#10; Sets the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f41ca20" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="number" ref="0x2abc8f41cd50" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reportChannelError" ref="0x2abc8f41b7a8" loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.</short>
          <long>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x2abc8f41d830" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sequence number of the packet.</short>
          <long>&#10; Returns the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f41d5c0" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0x2abc8f41c290" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sender of the packet.</short>
          <long>&#10; Returns the sender of the packet. &#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2abc8f246020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f41c020" loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RandomCollisionConfig" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
      <function command="" provided="0" name="getCongestionBackoff" ref="0x2abc8f415ad8" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the amount of maximum backoff when there is congestion&#10; (the channel was busy for the first try)&#10;</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f415868" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInitialBackoff" ref="0x2abc8f415020" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the initial amount of maximum backoff for this message.</short>
          <long>&#10; Returns the initial amount of maximum backoff for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f41ecf8" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinimumBackoff" ref="0x2abc8f413328" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the minimum ticks before the message could be sent.</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitBarrier" ref="0x2abc8f413d78" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f413b08" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Tasklet" loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
      <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
        <short>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled.</short>
        <long>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled. &#10; All state transitions should take place in the run event handler or&#10; in blocks protected by the suspend and resume commands.&#10;</long>
      </documentation>
      <function command="" provided="0" name="schedule" ref="0x2abc8f4b8a18" loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Makes sure that the run event is called at least once more.</short>
          <long>&#10; Makes sure that the run event is called at least once more. If the &#10; run event is currently not executing, then it  is called immediately &#10; and this command returns only after the completion of the run event. &#10; If the run event is currently executed, then this method returns at &#10; once, and makes sure that the run event is called once more when &#10; it is finished. If this method is called from a task, then by the &#10; above rules, the run event will be called from a task as well.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="suspend" ref="0x2abc8f4b7328" loc="72:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section.</short>
          <long>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section. No long running&#10; computation should be called from the critical session, and&#10; in particular no user event should be fired. This call is only&#10; possible from task context, otherwise we cannot guarantee that&#10; the run event is not currently running. The suspend calls&#10; can be nested. It is very important that the same number of&#10; resume commands must be called in all control paths, e.g. be very&#10; careful with the return and break commands.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resume" ref="0x2abc8f4b7c40" loc="79:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Leaves the critical section.</short>
          <long>&#10; Leaves the critical section. This call is conly possible from &#10; task context. If there were scheduled executions of the run&#10; event, then those will be called before this command returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="run" ref="0x2abc8f4b8328" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; This method is executed atomically.</short>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareSend" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
      <function command="" provided="0" name="send" ref="0x2abc8f4ff108" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a task. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2abc8ecb7ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f502e30" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2abc8f4fdad0" loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2abc8ecb7ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f4fd860" loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2abc8f4fd020" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2abc8ecb7ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f4ff9c8" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2abc8f4ffcf0" loc="54:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2abc8ecb7ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareReceive" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareReceive.nc">
      <function event="" provided="0" name="receive" ref="0x2abc8f4fb520" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareReceive.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
              <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f4fb278" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/BareReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x2abc8f514258" loc="50:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2abc8f246020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x2abc8f5130d8" loc="60:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x2abc8f5149b8" loc="55:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2abc8f248bf8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x2abc8f515a08" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2abc8f248bf8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2abc8f246020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x2abc8f515450" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2abc8f248bf8"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x2abc8f515788" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2abc8f246020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x2abc8f5a8c90" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2abc8f5a5580" loc="61:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x2abc8f5cebf0" loc="65:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x2abc8f5ce440" loc="59:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x2abc8f5d0360" loc="90:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abc8ec929b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x2abc8f5d0b50" loc="98:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x2abc8f5c5ac8" loc="79:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2abc8ecb7ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2abc8f5cfc40"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2abc8f5c5858" loc="79:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2abc8f5cfc40"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x2abc8f5c9ae8" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abc8ec929b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x2abc8f5c65e8" loc="62:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abc8ec929b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2abc8f5cfc40"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2abc8f5c6378" loc="62:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2abc8f5cfc40"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x2abc8f5c5020" loc="70:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x2abc8f5cfc40"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioReceive" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
      <function event="" provided="0" name="receive" ref="0x2abc8f71ce70" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
              <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f71cbc8" loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="header" ref="0x2abc8f71c290" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed.</short>
          <long>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed. Return FALSE if the message should be discarded.&#10; In particular, the message buffer layer returns FALSE if there is&#10; no space for a new message, so this message will not get acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abc8ec929b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f71c020" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborhoodFlag" loc="41:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
      <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <short>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example).</short>
        <long>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example). &#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2abc8f73d020" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for the given index.</short>
          <long>&#10; Clears the flag for the given index. The flag is automatically&#10; cleared after the Neighborhood.evicted event is fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2abc8f73ece0" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearAll" ref="0x2abc8f73d790" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for all indices&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2abc8f712cf8" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="43:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Returns the value of the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abc8ec929b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2abc8f712a88" loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2abc8f73e640" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Sets the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2abc8f73e3d0" loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Neighborhood" loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
      <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <short>&#10; Every component maintains its own neighborhood data.</short>
        <long>&#10; Every component maintains its own neighborhood data. The Neighboorhood&#10; component maintains only the nodeids and ages of the neighbors, and&#10; evicts old entries from the table when necessary.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getAge" ref="0x2abc8f743020" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the age of the given entry.</short>
          <long>&#10; Returns the age of the given entry. The age is incremented by one&#10; every time a new node is inserted into the neighborhood table that&#10; is not already at the very end. If the age would get too large to&#10; fit into a byte, then it is periodically reset to a smaller value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2abc8f744d80" loc="57:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNode" ref="0x2abc8f7414e0" loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Adds a new node into the neighborhood table.</short>
          <long>&#10; Adds a new node into the neighborhood table. If this node was already&#10; in the table, then it is just brought to the front (its age is reset&#10; to zero). If the node was not in the table, then the oldest is evicted&#10; and its entry is replaced with this node. The index of the entry&#10; is returned in the range [0, NEIGHBORHOOD-1]. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2abc8f246020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2abc8f741270" loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2abc8f246020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNode" ref="0x2abc8f743ab0" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the node address for the given entry.</short>
          <long>&#10; Returns the node address for the given entry.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2abc8f246020"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2abc8f743840" loc="62:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x2abc8f740020" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; This event is fired when the oldest entry is replaced with a new&#10; node.</short>
          <long>&#10; This event is fired when the oldest entry is replaced with a new&#10; node. The same interface is used by many users, so all of them&#10; will receive this event and can clear the corresponding entry.&#10; After this event is fired, all flags for this entry are cleared&#10; (see the NeighborhoodFlag interface)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2abc8f741ce8" loc="80:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIndex" ref="0x2abc8f7445b0" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the index of the neighbor in the table.</short>
          <long>&#10; Returns the index of the neighbor in the table. If the node was not &#10; found in the table, then the value NEIGHBORHOOD is  returned, &#10; otherwise an index in the range [0, NEIGHBORHOOD-1] is returned.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2abc8f246020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2abc8f744340" loc="49:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2abc8f246020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioState" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
      <function command="" provided="0" name="turnOff" ref="0x2abc8f7bd748" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time.</short>
          <long>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time. The radio cannot send or receive in this state &#10; and releases all access to shared resources (e.g. SPI bus). &#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2abc8ecb7ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0x2abc8f7ba808" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Goes into receive state.</short>
          <long>&#10; Goes into receive state. The radio continuously receive messages &#10; and able to transmit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2abc8ecb7ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x2abc8f7b9290" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress)&#10; SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2abc8ecb7ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2abc8f7b9020" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="done" ref="0x2abc8f7b99f0" loc="69:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="standby" ref="0x2abc8f7ba020" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.</short>
          <long>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2abc8ecb7ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x2abc8f7b8258" loc="74:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="71:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioSend" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
      <function command="" provided="0" name="send" ref="0x2abc8f7b5020" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a tasklet. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2abc8ecb7ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f7bcd10" loc="48:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="ready" ref="0x2abc8f7b43a0" loc="63:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; This event is fired when the component is most likely able to accept &#10; a send request.</short>
          <long>&#10; This event is fired when the component is most likely able to accept &#10; a send request. If the send command has returned with a failure, then&#10; this event will be called at least once in the near future.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2abc8f7b5b58" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2abc8ecb7ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2abc8f7b58e8" loc="56:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2abc8ecb7ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketFlag" loc="35:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
      <function command="" provided="0" name="clear" ref="0x2abc8f856e50" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to FALSE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f856be0" loc="55:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2abc8f85adc0" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Returns if the flag is set for this message.</short>
          <long>&#10; Returns if the flag is set for this message. &#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abc8ec929b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f85ab50" loc="40:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setValue" ref="0x2abc8f857ad0" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to the specified value.</short>
          <long>&#10; Sets the flag in this message to the specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2abc8ec929b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f857540" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x2abc8f857850" loc="45:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2abc8ec929b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2abc8f8564e8" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to TRUE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8f856278" loc="50:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioCCA" loc="37:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
      <function event="" provided="0" name="done" ref="0x2abc8f8975b8" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Signals the completion of the clear channel assesment send command.</short>
          <long>&#10; Signals the completion of the clear channel assesment send command.&#10; SUCCESS means the channel is clear, EBUSY means the channel is not&#10; clear, and FAIL means that the clear channel assesment could not&#10; be finished or the operation was cancelled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2abc8ecb7ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2abc8f897348" loc="52:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2abc8ecb7ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x2abc8f89bb70" loc="44:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Starts the clear channel assesment procedure.</short>
          <long>&#10; Starts the clear channel assesment procedure. Returns EBUSY if the radio&#10; is currently servicing a clear channel assesment, and SUCCESS otherwise.&#10; The check will be performed only in the RX_READY state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2abc8ecb7ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2abc8f982908" loc="59:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2abc8f982908"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2abc8f982b38" loc="59:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2abc8f982b38"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x2abc8f97d630" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2abc8f982b38"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2abc8f97d3c0" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2abc8f982b38"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x2abc8f9801d8" loc="54:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2abc8ecb7ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2abc8f97f290" loc="66:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x2abc8f980b00" loc="61:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2abc8f980890" loc="61:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x2abc8f9839a0" loc="53:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2abc8ecb7ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x2abc8f987020" loc="62:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2abc8f98ace0" loc="62:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x2abc8f986338" loc="74:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2abc8f9860c8" loc="74:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x2abc8f987820" loc="68:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2abc8f986d40" loc="81:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2abc8f986ad0" loc="81:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x2abc8fa934d0" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2abc8fa934d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x2abc8fa89020" loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="84:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2abc8ec929b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x2abc8fa8bc98" loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2abc8ec929b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2abc8fa8ce18" loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abc8ec929b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2abc8fa93d88" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2abc8fa934d0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x2abc8fa8d108" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2abc8fa934d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2abc8fa8ee28" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2abc8fa934d0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2abc8fa8d848" loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2abc8fa8b5c0" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abc8ec929b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2abc8fa8e6f0" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2abc8fa934d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2abc8fa8e480" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2abc8fa934d0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2abc8fa8c020" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2abc8fa8c708" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2abc8fab3b88" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2abc8ecb7ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x2abc8fab3278" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x2abc8fab35d8" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2abc8fab38f8" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2abc8faaf020" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2abc8ecb7ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x2abc8fab22b0" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x2abc8fab2610" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2abc8fab2930" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2abc8e3b3b98"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2abc8fab2c78" loc="83:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2abc8ecb7ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x2abc8fab5020" loc="45:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x2abc8fab9c18" loc="45:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x2abc8fa9c328" loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x2abc8fadbc40" loc="126:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abc8ec929b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x2abc8fade7a8" loc="117:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abc8ec929b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x2abc8fad9610" loc="128:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2abc8ec929b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x2abc8fad93a0" loc="128:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2abc8ec929b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x2abc8fa9eba8" loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x2abc8fadc338" loc="122:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2abc8ec929b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x2abc8fadc0c8" loc="122:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2abc8ec929b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x2abc8fa99020" loc="113:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2abc8ec929b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x2abc8fa9ac88" loc="113:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2abc8ec929b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x2abc8fa9b1d8" loc="97:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="93:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x2abc8fad5de0" loc="141:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2abc8ec929b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x2abc8fad5b70" loc="141:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2abc8ec929b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x2abc8fa99758" loc="114:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abc8ec929b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x2abc8fad8690" loc="131:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x2abc8fad8420" loc="131:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x2abc8fad7538" loc="136:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abc8ec929b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x2abc8fadb518" loc="125:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2abc8ec929b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x2abc8fadb2a8" loc="125:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2abc8ec929b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x2abc8fad54a0" loc="140:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abc8ec929b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x2abc8fadd290" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2abc8ec929b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x2abc8fadd020" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2abc8ec929b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2abc8fa9bb30" loc="103:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="99:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2abc8fa9b8c0" loc="103:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x2abc8fade0a8" loc="116:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2abc8ec929b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x2abc8fa99df8" loc="116:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2abc8ec929b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x2abc8fadcb48" loc="123:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abc8ec929b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x2abc8fad9d18" loc="129:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abc8ec929b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x2abc8fad8d80" loc="132:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x2abc8fad7c80" loc="138:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abc8ec929b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x2abc8fadd9a8" loc="120:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abc8ec929b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x2abc8fa9ca40" loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x2abc8fa9a4e0" loc="109:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="105:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2abc8fa9a270" loc="109:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2abc8fb01748" loc="95:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2abc8ecb7ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2abc8fb43020" loc="105:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2abc8ecb7ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="76:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControlC" ref="0x2abc8fb6d1d8" loc="81:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x2abc8fb6a578" loc="87:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="86:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x2abc8fb6e328" loc="79:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x2abc8fb69780" loc="91:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x2abc8fb69020" loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x2abc8fb6ac78" loc="88:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x2abc8fb6b4c0" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2abc8fb6b250" loc="83:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x2abc8fb67290" loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2abc8fb67020" loc="92:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x2abc8fb6ea58" loc="80:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlC" ref="0x2abc8fb6bde8" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2abc8fb6bb78" loc="84:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x2abc8fb6db00" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2abc8fb6d890" loc="82:/opt/tinyos-2.1.2/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2abc8fd312a0" loc="75:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2abc8ecb7ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8fd34c30" loc="75:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2abc8fd31020" loc="75:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2abc8fd2d5e8" loc="125:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="115:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8fd2d020" loc="125:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2abc8fd2d330" loc="125:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2abc8fd2c740" loc="112:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="102:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2abc8fd304e8" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2abc8ecb7ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8fd30278" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2abc8fd2f8f0" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2abc8ecb7ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2abc8fd2f348" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:119" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2abc8f252510"/>
                <typename><typedef-ref name="message_t" ref="0x2abc8f250aa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2abc8fd2f670" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2abc8ecb7ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CurveParam" loc="35:../../CMC/TinyECC/CurveParam.nc">
      <documentation loc="26:../../CMC/TinyECC/CurveParam.nc">
        <short>&#10; Interface for curve params&#10;&#10; Author: An Liu&#10; Date: 09/15/2005&#10;</short>
      </documentation>
      <function command="" provided="0" name="get_param" ref="0x2abc8fdd3920" loc="37:../../CMC/TinyECC/CurveParam.nc">
        <interfacedef-ref qname="CurveParam"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:150" alignment="I:1"><struct-ref name="Params" ref="0x2abc8efd7c70"/>
                <typename><typedef-ref name="Params" ref="0x2abc8efd5b38"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="para" ref="0x2abc8fdd36b0" loc="37:../../CMC/TinyECC/CurveParam.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:150" alignment="I:1"><struct-ref name="Params" ref="0x2abc8efd7c70"/>
                <typename><typedef-ref name="Params" ref="0x2abc8efd5b38"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="omega_mul" ref="0x2abc8fdd0ca8" loc="39:../../CMC/TinyECC/CurveParam.nc">
        <interfacedef-ref qname="CurveParam"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="a" ref="0x2abc8fdd0020" loc="39:../../CMC/TinyECC/CurveParam.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="b" ref="0x2abc8fdd0368" loc="39:../../CMC/TinyECC/CurveParam.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="omega" ref="0x2abc8fdd06d8" loc="39:../../CMC/TinyECC/CurveParam.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="NN_DIGIT" ref="0x2abc8efb1880"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="digits" ref="0x2abc8fdd0a08" loc="39:../../CMC/TinyECC/CurveParam.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="NN_UINT" ref="0x2abc8efc15d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BlockCipherInfo" loc="30:../../CMC/crypto/BlockCipherInfo.nc">
      <function command="" provided="0" name="getCanDecrypt" ref="0x2abc90510020" loc="43:../../CMC/crypto/BlockCipherInfo.nc">
        <interfacedef-ref qname="BlockCipherInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2abc8ec929b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMaxKeyLength" ref="0x2abc90511868" loc="41:../../CMC/crypto/BlockCipherInfo.nc">
        <interfacedef-ref qname="BlockCipherInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPreferredBlockSize" ref="0x2abc90511020" loc="39:../../CMC/crypto/BlockCipherInfo.nc">
        <documentation loc="32:../../CMC/crypto/BlockCipherInfo.nc">
          <short>&#10; Returns the preferred block size that this cipher operates with.</short>
          <long>&#10; Returns the preferred block size that this cipher operates with. &#10;&#10; @return the preferred block size for this cipher. In the case where the&#10;         cipher operates with multiple block sizes, this will pick one&#10;         particular size (deterministically).&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockCipherInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BlockCipher" loc="30:../../CMC/crypto/BlockCipher.nc">
      <function command="" provided="0" name="decrypt" ref="0x2abc90514760" loc="78:../../CMC/crypto/BlockCipher.nc">
        <documentation loc="65:../../CMC/crypto/BlockCipher.nc">
          <short>&#10; Decrypts a single block (of blockSize) using the key in the keySize.</short>
          <long>&#10; Decrypts a single block (of blockSize) using the key in the keySize. Not&#10; all ciphers will implement this function (since providing encryption&#10; is a useful primitive). &#10;&#10; @param context holds the module specific opaque data related to the&#10;        key (perhaps key expansions).    &#10; @param cipherBlock a ciphertext block of blockSize&#10; @param plainBlock the resulting plaintext block of blockSize&#10;&#10; @return Whether the decryption was successful. Possible failure reasons&#10;         include not calling init() or an unimplimented decrypt function.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockCipher"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2abc8ecb7ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:176" alignment="I:1"><struct-ref name="CipherContext" ref="0x2abc8efd06f8"/>
                <typename><typedef-ref name="CipherContext" ref="0x2abc8efd0e50"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="context" ref="0x2abc90515d58" loc="78:../../CMC/crypto/BlockCipher.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:176" alignment="I:1"><struct-ref name="CipherContext" ref="0x2abc8efd06f8"/>
                <typename><typedef-ref name="CipherContext" ref="0x2abc8efd0e50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="cipherBlock" ref="0x2abc90514140" loc="79:../../CMC/crypto/BlockCipher.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="plainBlock" ref="0x2abc905144d0" loc="79:../../CMC/crypto/BlockCipher.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x2abc90516020" loc="48:../../CMC/crypto/BlockCipher.nc">
        <documentation loc="32:../../CMC/crypto/BlockCipher.nc">
          <short>&#10; Initialize the BlockCipher context.</short>
          <long>&#10; Initialize the BlockCipher context.&#10;&#10; @param context structure to hold the opaque data from this initialization&#10;        call. It should be passed to future invocations of this module&#10;        which use this particular key.&#10; @param blockSize size of the block in bytes. Some cipher implementation&#10;        may support multiple block sizes, in which case any valid size&#10;        is valid.&#10; @param keySize key size in bytes&#10; @param key pointer to the key&#10;&#10; @return Whether initialization was successful. The command may be&#10;         unsuccessful if the key size or blockSize are not valid for the&#10;         given cipher implementation. &#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockCipher"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2abc8ecb7ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:176" alignment="I:1"><struct-ref name="CipherContext" ref="0x2abc8efd06f8"/>
                <typename><typedef-ref name="CipherContext" ref="0x2abc8efd0e50"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="context" ref="0x2abc90518300" loc="48:../../CMC/crypto/BlockCipher.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:176" alignment="I:1"><struct-ref name="CipherContext" ref="0x2abc8efd06f8"/>
                <typename><typedef-ref name="CipherContext" ref="0x2abc8efd0e50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="blockSize" ref="0x2abc90518670" loc="49:../../CMC/crypto/BlockCipher.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </variable>
          <variable name="keySize" ref="0x2abc905189a8" loc="49:../../CMC/crypto/BlockCipher.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
            </type-int>
          </variable>
          <variable name="key" ref="0x2abc90518cf0" loc="49:../../CMC/crypto/BlockCipher.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="encrypt" ref="0x2abc90515440" loc="62:../../CMC/crypto/BlockCipher.nc">
        <documentation loc="51:../../CMC/crypto/BlockCipher.nc">
          <short>&#10; Encrypts a single block (of blockSize) using the key in the keySize.</short>
          <long>&#10; Encrypts a single block (of blockSize) using the key in the keySize.&#10;&#10; @param context holds the module specific opaque data related to the&#10;        key (perhaps key expansions). &#10; @param plainBlock a plaintext block of blockSize&#10; @param cipherBlock the resulting ciphertext block of blockSize&#10;&#10; @return Whether the encryption was successful. Possible failure reasons&#10;         include not calling init(). &#10;</long>
        </documentation>
        <interfacedef-ref qname="BlockCipher"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2abc8ecb7ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:176" alignment="I:1"><struct-ref name="CipherContext" ref="0x2abc8efd06f8"/>
                <typename><typedef-ref name="CipherContext" ref="0x2abc8efd0e50"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="context" ref="0x2abc905169f8" loc="62:../../CMC/crypto/BlockCipher.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:176" alignment="I:1"><struct-ref name="CipherContext" ref="0x2abc8efd06f8"/>
                <typename><typedef-ref name="CipherContext" ref="0x2abc8efd0e50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="plainBlock" ref="0x2abc90516da8" loc="63:../../CMC/crypto/BlockCipher.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="cipherBlock" ref="0x2abc905151b0" loc="63:../../CMC/crypto/BlockCipher.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2abc8e3b3160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
